[ mov rdi, rsp ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac668103
#call parent addr: 0
#root size: 2
===============================================================
[ nop edx, edi ]
[ push rbp ]
[ mov rbp, rsp ]
[ push r15 ]
[ mov r15, rdi ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ rdtsc  ]
[ shl rdx,  [ argument ]  ]
[ or rax, rdx ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov r12, rdx ]
[ sub r12, qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rip  +  [ displacement ] ], rdx ]
[ mov qword ptr [rip  +  [ displacement ] ], r12 ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov edi,  [ addr ]  ]
[ mov r10d,  [ addr ]  ]
[ mov ebx,  [ addr ]  ]
[ mov r13d,  [ addr ]  ]
[ lea rcx, ptr [rip  +  [ displacement ] ] ]
[ mov r11d,  [ addr ]  ]
[ mov r9d,  [ argument ]  ]
[ mov r8d,  [ addr ]  ]
[ jmp  [ addr ]  ]
[ cmp rax,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ mov qword ptr [rcx + rax * 8], rdx ]
[ mov rax, qword ptr [rdx  +  [ displacement ] ] ]
[ add rdx,  [ argument ]  ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ test r12, r12 ]
[ jz  [ addr ]  ]
[ mov rsi, rdi ]
[ sub rsi, rax ]
[ cmp rsi,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ mov rsi, r8 ]
[ sub rsi, rax ]
[ mov qword ptr [rcx + rsi * 8], rdx ]
[ mov rax, qword ptr [rdx  +  [ displacement ] ] ]
[ add rdx,  [ argument ]  ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ cmp rax,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ lea esi, ptr [rax + rax * 1] ]
[ mov r14d, esi ]
[ sar r14d,  [ argument ]  ]
[ cmp esi,  [ addr ]  ]
[ jbe  [ addr ]  ]
[ mov eax, r9d ]
[ sub eax, r14d ]
[ mov qword ptr [rcx + rax * 8], rdx ]
[ jmp  [ addr ]  ]
[ mov rsi, r10 ]
[ sub rsi, rax ]
[ cmp rsi,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ mov rsi, r11 ]
[ sub rsi, rax ]
[ mov qword ptr [rcx + rsi * 8], rdx ]
[ jmp  [ addr ]  ]
[ mov rsi, rbx ]
[ sub rsi, rax ]
[ cmp rsi,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ mov rsi, r13 ]
[ sub rsi, rax ]
[ mov rax, rsi ]
[ mov qword ptr [rcx + rax * 8], rdx ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [rdx  +  [ displacement ] ] ]
[ add rdx,  [ argument ]  ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ test r12, r12 ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ test r12, r12 ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ add qword ptr [rax  +  [ displacement ] ], r12 ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ add qword ptr [rax  +  [ displacement ] ], r12 ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ add qword ptr [rax  +  [ displacement ] ], r12 ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ add qword ptr [rax  +  [ displacement ] ], r12 ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ add qword ptr [rax  +  [ displacement ] ], r12 ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ add qword ptr [rax  +  [ displacement ] ], r12 ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ add qword ptr [rax  +  [ displacement ] ], r12 ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ add qword ptr [rax  +  [ displacement ] ], r12 ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ cmp qword ptr [rdx  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ cmp qword ptr [rcx  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ test rcx, rcx ]
[ jz  [ addr ]  ]
[ test qword ptr [rcx  +  [ displacement ] ],  [ addr ]  ]
[ jnz  [ addr ]  ]
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ test rcx, rcx ]
[ jz  [ addr ]  ]
[ test qword ptr [rcx  +  [ displacement ] ],  [ addr ]  ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ test r12, r12 ]
[ jnz  [ addr ]  ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rdi, qword ptr [rax  +  [ displacement ] ] ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov r8, qword ptr [rip  +  [ displacement ] ] ]
[ mov rcx, qword ptr [rax  +  [ displacement ] ] ]
[ mov rbx, rdi ]
[ mov rax, rdi ]
[ lea rsi, ptr [rdi + rcx * 1] ]
[ test r8, r8 ]
[ jz  [ addr ]  ]
[ mov r8, qword ptr [r8  +  [ displacement ] ] ]
[ lea r8, ptr [r8 + r8 * 2] ]
[ lea rbx, ptr [rdi + r8 * 8] ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ mov r8, qword ptr [rip  +  [ displacement ] ] ]
[ add rcx, rdi ]
[ mov rdx, qword ptr [rdx  +  [ displacement ] ] ]
[ mov r11, qword ptr [r8  +  [ displacement ] ] ]
[ add r11, rdx ]
[ add rcx, rdx ]
[ cmp r11, rsi ]
[ cmovnz rsi, rcx ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ mov rdi, qword ptr [rdx  +  [ displacement ] ] ]
[ cmp rax, rbx ]
[ jnb  [ addr ]  ]
[ nop dword ptr [rax], eax ]
[ mov rdx, qword ptr [rax] ]
[ add rdx, r12 ]
[ cmp dword ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rcx, qword ptr [rax  +  [ displacement ] ] ]
[ add rax,  [ argument ]  ]
[ add rcx, r12 ]
[ mov qword ptr [rdx], rcx ]
[ cmp rax, rbx ]
[ jb  [ addr ]  ]
[ mov rdx, qword ptr [rax] ]
[ add rdx, r12 ]
[ cmp dword ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rcx, qword ptr [rax  +  [ displacement ] ] ]
[ add rax,  [ argument ]  ]
[ add rcx, r12 ]
[ mov qword ptr [rdx], rcx ]
[ cmp rax, rbx ]
[ jb  [ addr ]  ]
[ cmp qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ lea r8, ptr [rip  +  [ displacement ] ] ]
[ cmp rsi, rbx ]
[ jnbe  [ addr ]  ]
[ jmp  [ addr ]  ]
[ mov r13, qword ptr [rbx  +  [ displacement ] ] ]
[ mov rcx, qword ptr [rbx] ]
[ mov rax, r13 ]
[ mov r14, r13 ]
[ add rcx, r12 ]
[ shr rax,  [ argument ]  ]
[ lea rax, ptr [rax + rax * 2] ]
[ lea rdx, ptr [rdi + rax * 8] ]
[ and r14d,  [ addr ]  ]
[ jz  [ addr ]  ]
[ xor eax, eax ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ movzx r9d, byte ptr [rdx  +  [ displacement ] ] ]
[ movzx r10d, word ptr [rdx  +  [ displacement ] ] ]
[ mov rax, qword ptr [rdx  +  [ displacement ] ] ]
[ and r9d,  [ argument ]  ]
[ cmp r10w,  [ argument ]  ]
[ jz  [ addr ]  ]
[ add rax, qword ptr [rip  +  [ displacement ] ] ]
[ cmp r9b,  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp r14,  [ argument ]  ]
[ jz  [ addr ]  ]
[ jnbe  [ addr ]  ]
[ test r13d,  [ addr ]  ]
[ jz  [ addr ]  ]
[ cmp r14,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov qword ptr [rcx],  [ argument ]  ]
[ jmp  [ addr ]  ]
[ cmp r14,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ add rbx,  [ argument ]  ]
[ cmp rsi, rbx ]
[ jbe  [ addr ]  ]
[ mov r13, qword ptr [rbx  +  [ displacement ] ] ]
[ mov rcx, qword ptr [rbx] ]
[ mov rax, r13 ]
[ mov r14, r13 ]
[ add rcx, r12 ]
[ shr rax,  [ argument ]  ]
[ lea rax, ptr [rax + rax * 2] ]
[ lea rdx, ptr [rdi + rax * 8] ]
[ and r14d,  [ addr ]  ]
[ jz  [ addr ]  ]
[ add rax, qword ptr [rbx  +  [ displacement ] ] ]
[ mov qword ptr [rcx], rax ]
[ jmp  [ addr ]  ]
[ add rbx,  [ argument ]  ]
[ cmp rsi, rbx ]
[ jbe  [ addr ]  ]
[ mov r13, qword ptr [rbx  +  [ displacement ] ] ]
[ mov rcx, qword ptr [rbx] ]
[ mov rax, r13 ]
[ mov r14, r13 ]
[ add rcx, r12 ]
[ shr rax,  [ argument ]  ]
[ lea rax, ptr [rax + rax * 2] ]
[ lea rdx, ptr [rdi + rax * 8] ]
[ and r14d,  [ addr ]  ]
[ jz  [ addr ]  ]
[ xor eax, eax ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ movzx r9d, byte ptr [rdx  +  [ displacement ] ] ]
[ movzx r10d, word ptr [rdx  +  [ displacement ] ] ]
[ mov rax, qword ptr [rdx  +  [ displacement ] ] ]
[ and r9d,  [ argument ]  ]
[ cmp r10w,  [ argument ]  ]
[ jz  [ addr ]  ]
[ add rax, qword ptr [rip  +  [ displacement ] ] ]
[ cmp r9b,  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp r14,  [ argument ]  ]
[ jz  [ addr ]  ]
[ jnbe  [ addr ]  ]
[ test r13d,  [ addr ]  ]
[ jz  [ addr ]  ]
[ cmp r14,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ or byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ rdtsc  ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ shl rdx,  [ argument ]  ]
[ or rax, rdx ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac668ff9
#call parent addr: 7f5eac668103
#root size: 3
===============================================================
[ nop edx, edi ]
[ mov rax, qword ptr [rdi  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rcx, qword ptr [rax  +  [ displacement ] ] ]
[ mov edx, dword ptr [rcx] ]
[ mov dword ptr [rdi  +  [ displacement ] ], edx ]
[ mov eax, dword ptr [rcx  +  [ displacement ] ] ]
[ mov esi, dword ptr [rcx  +  [ displacement ] ] ]
[ lea r8d, ptr [rax- [ displacement ] ] ]
[ test r8d, eax ]
[ jnz  [ addr ]  ]
[ mov dword ptr [rdi  +  [ displacement ] ], r8d ]
[ add eax, eax ]
[ lea r8, ptr [rcx  +  [ displacement ] ] ]
[ sub rdx, rsi ]
[ mov ecx, dword ptr [rcx  +  [ displacement ] ] ]
[ lea rax, ptr [r8 + rax * 4] ]
[ mov qword ptr [rdi  +  [ displacement ] ], r8 ]
[ mov qword ptr [rdi  +  [ displacement ] ], rax ]
[ lea rax, ptr [rax + rdx * 4] ]
[ mov dword ptr [rdi  +  [ displacement ] ], ecx ]
[ mov qword ptr [rdi  +  [ displacement ] ], rax ]
[ ret  ]
RET========================================================
#ret target: 7f5eac668ff9
#function name: _dl_rtld_di_serinfo
#func_id: 17
===========================================================
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov rdi, r15 ]
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ lea rax, ptr [rip- [ displacement ] ] ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ mov qword ptr [rip  +  [ displacement ] ], rbp ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac669047
#call parent addr: 7f5eac668103
#root size: 3
===============================================================
[ nop edx, edi ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ push rbp ]
[ mov rbp, rsi ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov rax, qword ptr [rdi] ]
[ mov qword ptr [rip  +  [ displacement ] ], rdi ]
[ add rdi,  [ argument ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], rdi ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ cdqe  ]
[ lea rdi, ptr [rdi + rax * 8 + [ displacement ] ] ]
[ mov qword ptr [rip  +  [ displacement ] ], rdi ]
[ cmp qword ptr [rdi],  [ argument ]  ]
[ mov rax, rdi ]
[ jz  [ addr ]  ]
[ add rax,  [ argument ]  ]
[ cmp qword ptr [rax],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ lea rdx, ptr [rax  +  [ displacement ] ] ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ lea rsi, ptr [rip- [ displacement ] ] ]
[ mov qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], rdx ]
[ mov qword ptr [rsp  +  [ displacement ] ], rsi ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ add rax,  [ argument ]  ]
[ cmp qword ptr [rax],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ lea rdx, ptr [rax  +  [ displacement ] ] ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ lea rsi, ptr [rip- [ displacement ] ] ]
[ mov qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], rdx ]
[ mov qword ptr [rsp  +  [ displacement ] ], rsi ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov byte ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ xor r15d, r15d ]
[ xor r11d, r11d ]
[ xor r9d, r9d ]
[ mov byte ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ xor r8d, r8d ]
[ xor r13d, r13d ]
[ xor r12d, r12d ]
[ mov rbx, qword ptr [rip  +  [ displacement ] ] ]
[ mov byte ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ lea rcx, ptr [rip  +  [ displacement ] ] ]
[ mov byte ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov r14d, dword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rbx ]
[ mov rbx, qword ptr [rip  +  [ displacement ] ] ]
[ mov byte ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov r10, qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rbx ]
[ mov rbx, qword ptr [rip  +  [ displacement ] ] ]
[ mov byte ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ], rbx ]
[ movzx ebx, word ptr [rip  +  [ displacement ] ] ]
[ mov word ptr [rsp  +  [ displacement ] ], bx ]
[ mov ebx, dword ptr [rip  +  [ displacement ] ] ]
[ mov dword ptr [rsp  +  [ displacement ] ], ebx ]
[ mov rbx, qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rsp], rbx ]
[ xor ebx, ebx ]
[ nop dword ptr [rax], eax ]
[ sub rax,  [ argument ]  ]
[ cmp rax,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ movsxd rax, dword ptr [rcx + rax * 4] ]
[ add rax, rcx ]
[ jmp rax ]
[ mov rax, qword ptr [rdx  +  [ displacement ] ] ]
[ add rdx,  [ argument ]  ]
[ mov byte ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ mov rax, qword ptr [rdx] ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ sub rax,  [ argument ]  ]
[ cmp rax,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ movsxd rax, dword ptr [rcx + rax * 4] ]
[ add rax, rcx ]
[ jmp rax ]
[ mov rax, qword ptr [rdx  +  [ displacement ] ] ]
[ add rdx,  [ argument ]  ]
[ mov byte ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rsp], rax ]
[ mov rax, qword ptr [rdx] ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ mov r10, qword ptr [rdx  +  [ displacement ] ] ]
[ mov rax, qword ptr [rdx  +  [ displacement ] ] ]
[ add rdx,  [ argument ]  ]
[ mov r8d,  [ argument ]  ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ mov eax, dword ptr [rdx  +  [ displacement ] ] ]
[ add rdx,  [ argument ]  ]
[ mov byte ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov dword ptr [rsp  +  [ displacement ] ], eax ]
[ mov rax, qword ptr [rdx] ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ mov r12, qword ptr [rdx  +  [ displacement ] ] ]
[ mov rax, qword ptr [rdx  +  [ displacement ] ] ]
[ add rdx,  [ argument ]  ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [rdx  +  [ displacement ] ] ]
[ add rdx,  [ argument ]  ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ nop dword ptr [rax], eax ]
[ test r8b, r8b ]
[ jz  [ addr ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], r10 ]
[ test r9b, r9b ]
[ jz  [ addr ]  ]
[ mov r13d, dword ptr [rdx  +  [ displacement ] ] ]
[ mov rax, qword ptr [rdx  +  [ displacement ] ] ]
[ add rdx,  [ argument ]  ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ mov rsi, qword ptr [rdx  +  [ displacement ] ] ]
[ mov rax, qword ptr [rdx  +  [ displacement ] ] ]
[ add rdx,  [ argument ]  ]
[ mov r9d,  [ argument ]  ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ mov r14d, dword ptr [rdx  +  [ displacement ] ] ]
[ mov rax, qword ptr [rdx  +  [ displacement ] ] ]
[ add rdx,  [ argument ]  ]
[ mov r11d,  [ argument ]  ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [rdx  +  [ displacement ] ] ]
[ mov byte ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ nop word ptr [rax + rax * 1], ax ]
[ mov rax, qword ptr [rdx  +  [ displacement ] ] ]
[ add rdx,  [ argument ]  ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ nop dword ptr [rax], eax ]
[ test r8b, r8b ]
[ jz  [ addr ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], r10 ]
[ test r9b, r9b ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rdx  +  [ displacement ] ] ]
[ add rdx,  [ argument ]  ]
[ mov byte ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ mov rax, qword ptr [rdx] ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ mov r15, qword ptr [rdx  +  [ displacement ] ] ]
[ mov rax, qword ptr [rdx  +  [ displacement ] ] ]
[ add rdx,  [ argument ]  ]
[ mov ebx,  [ argument ]  ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ test r8b, r8b ]
[ jz  [ addr ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], r10 ]
[ test r9b, r9b ]
[ jz  [ addr ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ], rsi ]
[ test r11b, r11b ]
[ jz  [ addr ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], r14d ]
[ test bl, bl ]
[ jz  [ addr ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], r15 ]
[ cmp byte ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rsp] ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ cmp byte ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ cmp byte ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [rsp  +  [ displacement ] ] ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ cmp byte ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ movzx eax, word ptr [rsp  +  [ displacement ] ] ]
[ mov word ptr [rip  +  [ displacement ] ], ax ]
[ cmp byte ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp byte ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ cmp byte ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ jmp  [ addr ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac683a86
#call parent addr: 7f5eac669047
#root size: 4
===============================================================
[ nop edx, edi ]
[ push r15 ]
[ mov r8, rdi ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov edx, dword ptr [rip  +  [ displacement ] ] ]
[ test edx, edx ]
[ jnz  [ addr ]  ]
[ mov r13, r8 ]
[ nop word ptr [rax + rax * 1], ax ]
[ test r13, r13 ]
[ jz  [ addr ]  ]
[ mov rbx, qword ptr [r13] ]
[ test rbx, rbx ]
[ jz  [ addr ]  ]
[ movzx edx, byte ptr [rbx] ]
[ lea r15, ptr [r13  +  [ displacement ] ] ]
[ cmp dl,  [ argument ]  ]
[ jz  [ addr ]  ]
[ test dl, dl ]
[ jz  [ addr ]  ]
[ mov eax,  [ argument ]  ]
[ nop dword ptr [rax + rax * 1], eax ]
[ movzx edx, byte ptr [rbx + rax * 1] ]
[ mov rcx, rax ]
[ add rax,  [ argument ]  ]
[ test dl, dl ]
[ jz  [ addr ]  ]
[ cmp dl,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ test dl, dl ]
[ jz  [ addr ]  ]
[ lea rbp, ptr [rcx  +  [ displacement ] ] ]
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ mov edx,  [ argument ]  ]
[ lea rax, ptr [rbx + rbp * 1] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ mov rax, rbx ]
[ jmp  [ addr ]  ]
[ movzx edx, byte ptr [rbx + rax * 1] ]
[ mov rcx, rax ]
[ add rax,  [ argument ]  ]
[ test dl, dl ]
[ jz  [ addr ]  ]
[ cmp dl,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ test dl, dl ]
[ jz  [ addr ]  ]
[ lea rbp, ptr [rcx  +  [ displacement ] ] ]
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ mov edx,  [ argument ]  ]
[ lea rax, ptr [rbx + rbp * 1] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ mov rax, rbx ]
[ jmp  [ addr ]  ]
[ movzx ecx, byte ptr [rax] ]
[ cmp cl, dl ]
[ jz  [ addr ]  ]
[ mov r11d, dword ptr [rip  +  [ displacement ] ] ]
[ lea r8, ptr [rip  +  [ displacement ] ] ]
[ xor r9d, r9d ]
[ nop dword ptr [rax + rax * 1], eax ]
[ cmp byte ptr [r8],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov r10, qword ptr [r8  +  [ displacement ] ] ]
[ test r10, r10 ]
[ jz  [ addr ]  ]
[ add r9d,  [ argument ]  ]
[ add r8,  [ argument ]  ]
[ cmp r9d,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov r13, r15 ]
[ test r13, r13 ]
[ jnz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ cmp byte ptr [r8],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov r10, qword ptr [r8  +  [ displacement ] ] ]
[ test r10, r10 ]
[ jz  [ addr ]  ]
[ movzx edi, byte ptr [r10] ]
[ mov rsi, r10 ]
[ mov rax, rbx ]
[ mov ecx, edi ]
[ test dil, dil ]
[ jnz  [ addr ]  ]
[ movzx edx, byte ptr [rax] ]
[ test dl, dl ]
[ jnz  [ addr ]  ]
[ nop dword ptr [rax + rax * 1], eax ]
[ add r9d,  [ argument ]  ]
[ add r8,  [ argument ]  ]
[ cmp r9d,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov r13, r15 ]
[ test r13, r13 ]
[ jnz  [ addr ]  ]
[ cmp dl, cl ]
[ jnz  [ addr ]  ]
[ movzx ecx, byte ptr [rsi  +  [ displacement ] ] ]
[ add rsi,  [ argument ]  ]
[ add rax,  [ argument ]  ]
[ test cl, cl ]
[ jz  [ addr ]  ]
[ movzx edx, byte ptr [rax] ]
[ test dl, dl ]
[ jnz  [ addr ]  ]
[ mov rbx, qword ptr [r13] ]
[ test rbx, rbx ]
[ jz  [ addr ]  ]
[ movzx edx, byte ptr [rbx] ]
[ lea r15, ptr [r13  +  [ displacement ] ] ]
[ cmp dl,  [ argument ]  ]
[ jz  [ addr ]  ]
[ test dl, dl ]
[ jz  [ addr ]  ]
[ mov eax,  [ argument ]  ]
[ nop dword ptr [rax + rax * 1], eax ]
[ movzx edx, byte ptr [rbx + rax * 1] ]
[ mov rcx, rax ]
[ add rax,  [ argument ]  ]
[ test dl, dl ]
[ jz  [ addr ]  ]
[ cmp dl,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ test dl, dl ]
[ jz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
RET========================================================
#ret target: 7f5eac683a86
#function name: _dl_exception_free
#func_id: 28
===========================================================
[ xor edi, edi ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac683a8d
#call parent addr: 7f5eac669047
#root size: 4
===============================================================
[ nop edx, edi ]
[ mov eax,  [ argument ]  ]
[ syscall  ]
[ cmp rax,  [ addr ]  ]
[ jnbe  [ addr ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ cmp rdi, rax ]
[ jnbe  [ addr ]  ]
[ xor eax, eax ]
[ ret  ]
RET========================================================
#ret target: 7f5eac683a8d
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ xor eax, eax ]
[ mov dword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ cpuid  ]
[ mov dword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov dword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ cmp ebx,  [ addr ]  ]
[ jnz  [ addr ]  ]
[ cmp ecx,  [ addr ]  ]
[ jnz  [ addr ]  ]
[ cmp edx,  [ addr ]  ]
[ jz  [ addr ]  ]
[ lea r14, ptr [rsp  +  [ displacement ] ] ]
[ lea rcx, ptr [rsp  +  [ displacement ] ] ]
[ lea rsi, ptr [rsp  +  [ displacement ] ] ]
[ mov rdx, r14 ]
[ lea rdi, ptr [rsp  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac683eaf
#call parent addr: 7f5eac669047
#root size: 4
===============================================================
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ test rdi, rdi ]
[ jz  [ addr ]  ]
[ mov r8, rdx ]
[ mov r9, rcx ]
[ mov eax,  [ argument ]  ]
[ cpuid  ]
[ mov dword ptr [rip  +  [ displacement ] ], edx ]
[ mov edx, eax ]
[ shr edx,  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], ebx ]
[ and edx,  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], ecx ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ mov dword ptr [rdi], edx ]
[ mov edx, eax ]
[ shr edx,  [ argument ]  ]
[ and edx,  [ argument ]  ]
[ mov dword ptr [rsi], edx ]
[ mov edx, eax ]
[ shr edx,  [ argument ]  ]
[ and edx,  [ argument ]  ]
[ mov dword ptr [r8], edx ]
[ mov edx, eax ]
[ and edx,  [ argument ]  ]
[ mov dword ptr [r9], edx ]
[ cmp dword ptr [rdi],  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jle  [ addr ]  ]
[ xor ecx, ecx ]
[ mov eax,  [ argument ]  ]
[ cpuid  ]
[ cmp dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ mov dword ptr [rip  +  [ displacement ] ], ebx ]
[ mov dword ptr [rip  +  [ displacement ] ], ecx ]
[ mov dword ptr [rip  +  [ displacement ] ], edx ]
[ jle  [ addr ]  ]
[ mov eax,  [ argument ]  ]
[ mov ecx,  [ argument ]  ]
[ cpuid  ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ mov dword ptr [rip  +  [ displacement ] ], ebx ]
[ mov dword ptr [rip  +  [ displacement ] ], ecx ]
[ mov dword ptr [rip  +  [ displacement ] ], edx ]
[ mov esi, dword ptr [rip  +  [ displacement ] ] ]
[ test esi,  [ addr ]  ]
[ jz  [ addr ]  ]
[ xor ecx, ecx ]
[ xgetbv  ]
[ mov edx, eax ]
[ and edx,  [ argument ]  ]
[ cmp edx,  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jle  [ addr ]  ]
[ test esi,  [ addr ]  ]
[ jz  [ addr ]  ]
[ mov ecx, dword ptr [rip  +  [ displacement ] ] ]
[ mov edx, ecx ]
[ or edx,  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], edx ]
[ test byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ or dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ or ecx,  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], ecx ]
[ mov edx, ecx ]
[ and esi,  [ argument ]  ]
[ jz  [ addr ]  ]
[ or edx,  [ addr ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], edx ]
[ mov ecx, dword ptr [rip  +  [ displacement ] ] ]
[ test ch,  [ argument ]  ]
[ jz  [ addr ]  ]
[ or edx,  [ addr ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], edx ]
[ and ch,  [ argument ]  ]
[ jz  [ addr ]  ]
[ or edx,  [ addr ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], edx ]
[ test byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ and ch,  [ argument ]  ]
[ jz  [ addr ]  ]
[ or edx,  [ addr ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], edx ]
[ test byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ and eax,  [ argument ]  ]
[ cmp eax,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ test byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ and eax,  [ argument ]  ]
[ cmp eax,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov edx, dword ptr [rip  +  [ displacement ] ] ]
[ test edx,  [ addr ]  ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ test edx,  [ addr ]  ]
[ jnz  [ addr ]  ]
[ or eax,  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ test edx,  [ addr ]  ]
[ jz  [ addr ]  ]
[ or eax,  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ test edx,  [ addr ]  ]
[ jz  [ addr ]  ]
[ or eax,  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ jmp  [ addr ]  ]
[ test edx,  [ addr ]  ]
[ jz  [ addr ]  ]
[ or eax,  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ test edx,  [ addr ]  ]
[ jz  [ addr ]  ]
[ or eax,  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ test edx, edx ]
[ jns  [ addr ]  ]
[ test edx,  [ addr ]  ]
[ jz  [ addr ]  ]
[ or eax,  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ test edx, edx ]
[ jns  [ addr ]  ]
[ or eax,  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ test edx,  [ addr ]  ]
[ jz  [ addr ]  ]
[ test edx, edx ]
[ jns  [ addr ]  ]
[ or eax,  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ test edx,  [ addr ]  ]
[ jz  [ addr ]  ]
[ or al,  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ test edx,  [ addr ]  ]
[ jz  [ addr ]  ]
[ or ah,  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ mov ecx, dword ptr [rip  +  [ displacement ] ] ]
[ test cl,  [ argument ]  ]
[ jz  [ addr ]  ]
[ or ah,  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ and ecx,  [ argument ]  ]
[ jz  [ addr ]  ]
[ or ah,  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ mov ecx, dword ptr [rip  +  [ displacement ] ] ]
[ test ch,  [ argument ]  ]
[ jz  [ addr ]  ]
[ and ecx,  [ argument ]  ]
[ jz  [ addr ]  ]
[ or ah,  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ mov ecx, dword ptr [rip  +  [ displacement ] ] ]
[ test ch,  [ argument ]  ]
[ jz  [ addr ]  ]
[ or ah,  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ and edx,  [ addr ]  ]
[ jz  [ addr ]  ]
[ mov ecx, dword ptr [rip  +  [ displacement ] ] ]
[ test ch,  [ argument ]  ]
[ jz  [ addr ]  ]
[ or ah,  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ and edx,  [ addr ]  ]
[ jz  [ addr ]  ]
[ or ah,  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ test cl,  [ argument ]  ]
[ jz  [ addr ]  ]
[ and edx,  [ addr ]  ]
[ jz  [ addr ]  ]
[ or ah,  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ test cl,  [ argument ]  ]
[ jz  [ addr ]  ]
[ or ah,  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ test cl,  [ argument ]  ]
[ jz  [ addr ]  ]
[ test cl,  [ argument ]  ]
[ jz  [ addr ]  ]
[ or ah,  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ test cl,  [ argument ]  ]
[ jz  [ addr ]  ]
[ or ah,  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ test ch,  [ argument ]  ]
[ jz  [ addr ]  ]
[ test cl,  [ argument ]  ]
[ jz  [ addr ]  ]
[ or ah,  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ test ch,  [ argument ]  ]
[ jz  [ addr ]  ]
[ or ah,  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ and ch,  [ argument ]  ]
[ jz  [ addr ]  ]
[ test ch,  [ argument ]  ]
[ jz  [ addr ]  ]
[ or ah,  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ and ch,  [ argument ]  ]
[ jz  [ addr ]  ]
[ or eax,  [ addr ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ jmp  [ addr ]  ]
[ cmp dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jle  [ addr ]  ]
[ mov eax,  [ argument ]  ]
[ xor ecx, ecx ]
[ cpuid  ]
[ test ebx, ebx ]
[ jz  [ addr ]  ]
[ add ebx,  [ argument ]  ]
[ and ebx,  [ addr ]  ]
[ mov eax, ebx ]
[ mov dword ptr [rip  +  [ displacement ] ], ebx ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ test byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ lea r8, ptr [rsp- [ displacement ] ] ]
[ lea rdi, ptr [rsp  +  [ displacement ] ] ]
[ mov esi,  [ argument ]  ]
[ mov dword ptr [rsp- [ displacement ] ],  [ argument ]  ]
[ mov r9d,  [ argument ]  ]
[ mov r10d,  [ argument ]  ]
[ jmp  [ addr ]  ]
[ bt r9d, esi ]
[ jb  [ addr ]  ]
[ mov dword ptr [rdi],  [ argument ]  ]
[ cmp esi,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [rdi- [ displacement ] ] ]
[ add eax, dword ptr [r8- [ displacement ] ] ]
[ mov dword ptr [r8], eax ]
[ jmp  [ addr ]  ]
[ mov eax, r10d ]
[ mov ecx, esi ]
[ cpuid  ]
[ mov dword ptr [rdi], eax ]
[ cmp esi,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [rdi- [ displacement ] ] ]
[ add eax, dword ptr [r8- [ displacement ] ] ]
[ and ecx,  [ argument ]  ]
[ jz  [ addr ]  ]
[ add eax,  [ argument ]  ]
[ and eax,  [ addr ]  ]
[ mov dword ptr [r8], eax ]
[ cmp esi,  [ argument ]  ]
[ jz  [ addr ]  ]
[ add esi,  [ argument ]  ]
[ add r8,  [ argument ]  ]
[ add rdi,  [ argument ]  ]
[ bt r9d, esi ]
[ jb  [ addr ]  ]
[ mov dword ptr [rdi],  [ argument ]  ]
[ cmp esi,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [rdi- [ displacement ] ] ]
[ add eax, dword ptr [r8- [ displacement ] ] ]
[ mov dword ptr [r8], eax ]
[ jmp  [ addr ]  ]
[ mov dword ptr [r8], eax ]
[ cmp esi,  [ argument ]  ]
[ jz  [ addr ]  ]
[ add esi,  [ argument ]  ]
[ add r8,  [ argument ]  ]
[ add rdi,  [ argument ]  ]
[ bt r9d, esi ]
[ jb  [ addr ]  ]
[ mov dword ptr [rdi],  [ argument ]  ]
[ cmp esi,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [rdi- [ displacement ] ] ]
[ add eax, dword ptr [r8- [ displacement ] ] ]
[ mov dword ptr [r8], eax ]
[ jmp  [ addr ]  ]
[ cmp esi,  [ argument ]  ]
[ jz  [ addr ]  ]
[ add esi,  [ argument ]  ]
[ add r8,  [ argument ]  ]
[ add rdi,  [ argument ]  ]
[ bt r9d, esi ]
[ jb  [ addr ]  ]
[ mov dword ptr [rdi],  [ argument ]  ]
[ cmp esi,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [rsp  +  [ displacement ] ] ]
[ add eax, dword ptr [rsp  +  [ displacement ] ] ]
[ jz  [ addr ]  ]
[ or dword ptr [rip  +  [ displacement ] ],  [ addr ]  ]
[ add eax,  [ argument ]  ]
[ and eax,  [ addr ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac683eaf
#function name: __get_cpu_features
#func_id: 31
===========================================================
[ mov esi,  [ addr ]  ]
[ mov eax, esi ]
[ cpuid  ]
[ mov esi, eax ]
[ cmp eax,  [ addr ]  ]
[ jbe  [ addr ]  ]
[ mov eax,  [ addr ]  ]
[ cpuid  ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ mov dword ptr [rip  +  [ displacement ] ], ebx ]
[ mov dword ptr [rip  +  [ displacement ] ], ecx ]
[ mov dword ptr [rip  +  [ displacement ] ], edx ]
[ cmp esi,  [ addr ]  ]
[ jbe  [ addr ]  ]
[ mov eax,  [ addr ]  ]
[ cpuid  ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ mov dword ptr [rip  +  [ displacement ] ], ebx ]
[ mov dword ptr [rip  +  [ displacement ] ], ecx ]
[ mov dword ptr [rip  +  [ displacement ] ], edx ]
[ cmp esi,  [ addr ]  ]
[ jz  [ addr ]  ]
[ mov eax,  [ addr ]  ]
[ cpuid  ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ mov dword ptr [rip  +  [ displacement ] ], ebx ]
[ mov dword ptr [rip  +  [ displacement ] ], ecx ]
[ mov dword ptr [rip  +  [ displacement ] ], edx ]
[ mov edx, dword ptr [rsp  +  [ displacement ] ] ]
[ mov ecx, dword ptr [rsp  +  [ displacement ] ] ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ mov esi, dword ptr [rsp  +  [ displacement ] ] ]
[ mov edi, dword ptr [rip  +  [ displacement ] ] ]
[ cmp edx,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov r8d, eax ]
[ or ah,  [ argument ]  ]
[ or r8d,  [ argument ]  ]
[ and edi,  [ addr ]  ]
[ mov edi,  [ argument ]  ]
[ cmovnz eax, r8d ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ jmp  [ addr ]  ]
[ add ecx, dword ptr [rsp  +  [ displacement ] ] ]
[ lea r9d, ptr [rcx- [ displacement ] ] ]
[ mov dword ptr [rsp  +  [ displacement ] ], ecx ]
[ mov r8d, ecx ]
[ cmp r9d,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ lea r10, ptr [rip  +  [ displacement ] ] ]
[ movsxd r9, dword ptr [r10 + r9 * 4] ]
[ add r9, r10 ]
[ jmp r9 ]
[ test byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ or eax,  [ argument ]  ]
[ cmp r8d,  [ argument ]  ]
[ jz  [ addr ]  ]
[ jnbe  [ addr ]  ]
[ sub r8d,  [ argument ]  ]
[ cmp r8d,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ jmp  [ addr ]  ]
[ mov r8d, eax ]
[ or ah,  [ argument ]  ]
[ or r8d,  [ argument ]  ]
[ and edi,  [ addr ]  ]
[ mov edi,  [ argument ]  ]
[ cmovnz eax, r8d ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ jmp  [ addr ]  ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ test ah,  [ argument ]  ]
[ jz  [ addr ]  ]
[ or dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ test ah,  [ argument ]  ]
[ jz  [ addr ]  ]
[ or dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], edi ]
[ mov edi,  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], edx ]
[ lea rdx, ptr [rip- [ displacement ] ] ]
[ mov dword ptr [rip  +  [ displacement ] ], esi ]
[ mov rsi, r14 ]
[ mov dword ptr [rip  +  [ displacement ] ], ecx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac683b40
#call parent addr: 7f5eac669047
#root size: 4
===============================================================
[ nop edx, edi ]
[ mov edi, edi ]
[ lea rcx, ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rdi * 8] ]
[ sub rax, rdi ]
[ lea rax, ptr [rcx + rax * 8] ]
[ mov r8d, dword ptr [rax  +  [ displacement ] ] ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ cmp r8d,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ test r8d, r8d ]
[ jnz  [ addr ]  ]
[ mov dword ptr [rsi], eax ]
[ lea rax, ptr [rdi * 8] ]
[ sub rax, rdi ]
[ cmp byte ptr [rcx + rax * 8 + [ displacement ] ],  [ argument ]  ]
[ lea rsi, ptr [rax * 8] ]
[ jz  [ addr ]  ]
[ mov qword ptr [rsi], rax ]
[ jmp  [ addr ]  ]
[ lea rax, ptr [rdi * 8] ]
[ sub rax, rdi ]
[ cmp byte ptr [rcx + rax * 8 + [ displacement ] ],  [ argument ]  ]
[ lea rsi, ptr [rax * 8] ]
[ jz  [ addr ]  ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ lea rdi, ptr [rcx + rsi * 1 + [ displacement ] ] ]
[ jmp rdx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac683b40
#function name: __tunable_get_val
#func_id: 29
===========================================================
[ xor edx, edx ]
[ mov rsi, r14 ]
[ mov edi,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac683b4f
#call parent addr: 7f5eac669047
#root size: 4
===============================================================
RET========================================================
#ret target: 7f5eac683b4f
#function name: __tunable_get_val
#func_id: 29
===========================================================
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ xor edx, edx ]
[ mov rsi, r14 ]
[ mov edi,  [ argument ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac683b6a
#call parent addr: 7f5eac669047
#root size: 4
===============================================================
RET========================================================
#ret target: 7f5eac683b6a
#function name: __tunable_get_val
#func_id: 29
===========================================================
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ xor edx, edx ]
[ mov rsi, r14 ]
[ mov edi,  [ argument ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac683b85
#call parent addr: 7f5eac669047
#root size: 4
===============================================================
RET========================================================
#ret target: 7f5eac683b85
#function name: __tunable_get_val
#func_id: 29
===========================================================
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ cmp dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ jz  [ addr ]  ]
[ mov rsi, r14 ]
[ lea rdx, ptr [rip- [ displacement ] ] ]
[ mov edi,  [ argument ]  ]
[ call  [ addr.func ]  ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ test al,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov edx, dword ptr [rip  +  [ displacement ] ] ]
[ test edx,  [ addr ]  ]
[ jz  [ addr ]  ]
[ test edx,  [ addr ]  ]
[ jz  [ addr ]  ]
[ mov ecx, edx ]
[ and ecx,  [ addr ]  ]
[ cmp ecx,  [ addr ]  ]
[ jnz  [ addr ]  ]
[ test edx, edx ]
[ jns  [ addr ]  ]
[ mov qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ nop word ptr [rax + rax * 1], ax ]
[ and eax,  [ addr ]  ]
[ cmp eax,  [ addr ]  ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ and eax,  [ argument ]  ]
[ cmp eax,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ test byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ and eax,  [ addr ]  ]
[ cmp eax,  [ addr ]  ]
[ jnz  [ addr ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ jmp  [ addr ]  ]
[ mov rsi, r14 ]
[ lea rdx, ptr [rip- [ displacement ] ] ]
[ mov edi,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac683bbd
#call parent addr: 7f5eac669047
#root size: 4
===============================================================
RET========================================================
#ret target: 7f5eac683bbd
#function name: __tunable_get_val
#func_id: 29
===========================================================
[ mov rsi, r14 ]
[ mov edi,  [ argument ]  ]
[ lea rdx, ptr [rip- [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac683bd1
#call parent addr: 7f5eac669047
#root size: 4
===============================================================
RET========================================================
#ret target: 7f5eac683bd1
#function name: __tunable_get_val
#func_id: 29
===========================================================
[ mov rsi, r14 ]
[ mov edi,  [ argument ]  ]
[ mov eax,  [ argument ]  ]
[ syscall  ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rdi, qword ptr [rip  +  [ displacement ] ] ]
[ test rdi, rdi ]
[ jz  [ addr ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac683bf6
#call parent addr: 7f5eac669047
#root size: 4
===============================================================
[ nop edx, edi ]
[ pxor xmm0, xmm0 ]
[ pxor xmm1, xmm1 ]
[ pxor xmm2, xmm2 ]
[ pxor xmm3, xmm3 ]
[ mov rax, rdi ]
[ mov rcx, rdi ]
[ and rcx,  [ argument ]  ]
[ cmp rcx,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ movdqu xmm4, xmmword ptr [rax] ]
[ pcmpeqb xmm4, xmm0 ]
[ pmovmskb edx, xmm4 ]
[ test edx, edx ]
[ jz  [ addr ]  ]
[ bsf eax, edx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac683bf6
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ xor edi, edi ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac683c04
#call parent addr: 7f5eac669047
#root size: 4
===============================================================
[ nop edx, edi ]
[ push r12 ]
[ push rbx ]
[ mov rbx, rdi ]
[ sub rsp,  [ argument ]  ]
[ mov r12, qword ptr [rip  +  [ displacement ] ] ]
[ test r12, r12 ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ test rbx, rbx ]
[ jz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ mov rax, r12 ]
[ pop rbx ]
[ pop r12 ]
[ ret  ]
RET========================================================
#ret target: 7f5eac683c04
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ cmp rax, rdx ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ lea rdx, ptr [rsp  +  [ displacement ] ] ]
[ mov esi, r13d ]
[ mov rdi, r12 ]
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ call rbp ]
CALL===========================================================
#now call addr: 7f5eac683c39
#call parent addr: 7f5eac669047
#root size: 4
===============================================================
[ nop edx, edi ]
[ push rbp ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov rbp, rsp ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ mov r13, rdx ]
[ push r12 ]
[ mov r12, rdi ]
[ push rbx ]
[ lea rbx, ptr [rip  +  [ displacement ] ] ]
[ sub rsp,  [ argument ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ lea rax, ptr [rip- [ displacement ] ] ]
[ movq xmm2, rax ]
[ mov dword ptr [rbp- [ displacement ] ], esi ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rcx ]
[ lea rcx, ptr [rip- [ displacement ] ] ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ movq xmm0, rcx ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov ecx, dword ptr [rip  +  [ displacement ] ] ]
[ punpcklqdq xmm0, xmm2 ]
[ mov dword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ test ecx, ecx ]
[ lea rdx, ptr [rax- [ displacement ] ] ]
[ movups xmmword ptr [rip  +  [ displacement ] ], xmm0 ]
[ cmovz rax, rdx ]
[ xor r15d, r15d ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ lea rax, ptr [rbp- [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov rdi, qword ptr [rbp- [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66969f
#call parent addr: 7f5eac683c39
#root size: 5
===============================================================
[ nop edx, edi ]
[ mov rdx, qword ptr [rdi] ]
[ mov rax, qword ptr [rdx] ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ cmp byte ptr [rax],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp byte ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp byte ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rdx  +  [ displacement ] ] ]
[ add rdx,  [ argument ]  ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ cmp byte ptr [rax],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp byte ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp byte ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ add rdx,  [ argument ]  ]
[ add rax,  [ argument ]  ]
[ mov qword ptr [rdi], rdx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac66969f
#function name: __get_cpu_features
#func_id: 31
===========================================================
[ mov r14, rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ movzx edx, byte ptr [rax] ]
[ cmp dl,  [ argument ]  ]
[ jz  [ addr ]  ]
[ xor eax, eax ]
[ test dl, dl ]
[ jnz  [ addr ]  ]
[ add rax,  [ argument ]  ]
[ movzx edx, byte ptr [r14 + rax * 1] ]
[ test dl, dl ]
[ jnz  [ addr ]  ]
[ cmp dl,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ sub rax,  [ argument ]  ]
[ cmp rax,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ cmp dl,  [ argument ]  ]
[ jz  [ addr ]  ]
[ add rax,  [ argument ]  ]
[ movzx edx, byte ptr [r14 + rax * 1] ]
[ test dl, dl ]
[ jnz  [ addr ]  ]
[ cmp dl,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ sub rax,  [ argument ]  ]
[ cmp rax,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ movsxd rax, dword ptr [rbx + rax * 4] ]
[ add rax, rbx ]
[ jmp rax ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov rax,  [ addr ]  ]
[ cmp qword ptr [r14], rax ]
[ jz  [ addr ]  ]
[ mov rax,  [ addr ]  ]
[ cmp qword ptr [r14], rax ]
[ jz  [ addr ]  ]
[ cmp dword ptr [r14  +  [ displacement ] ],  [ addr ]  ]
[ jnz  [ addr ]  ]
[ add r14,  [ argument ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], r14 ]
[ jmp  [ addr ]  ]
[ mov rdi, qword ptr [rbp- [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66969f
#call parent addr: 7f5eac683c39
#root size: 5
===============================================================
[ ret  ]
RET========================================================
#ret target: 7f5eac66969f
#function name: __get_cpu_features
#func_id: 31
===========================================================
[ mov r14, rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ movzx edx, byte ptr [rax] ]
[ cmp dl,  [ argument ]  ]
[ jz  [ addr ]  ]
[ xor eax, eax ]
[ test dl, dl ]
[ jnz  [ addr ]  ]
[ mov r11d, dword ptr [rip  +  [ displacement ] ] ]
[ test r11d, r11d ]
[ jnz  [ addr ]  ]
[ mov r9d, dword ptr [rip  +  [ displacement ] ] ]
[ test r9d, r9d ]
[ jz  [ addr ]  ]
[ test r15, r15 ]
[ jnz  [ addr ]  ]
[ lea rax, ptr [rip- [ displacement ] ] ]
[ cmp qword ptr [r13], rax ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ lea r15, ptr [rip  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rax] ]
[ mov qword ptr [rip  +  [ displacement ] ], rdx ]
[ mov edx, dword ptr [rip  +  [ displacement ] ] ]
[ cmp edx,  [ argument ]  ]
[ jle  [ addr ]  ]
[ mov r8, qword ptr [rax  +  [ displacement ] ] ]
[ mov ecx,  [ argument ]  ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ mov rsi, r8 ]
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ xor r9d, r9d ]
[ xor ecx, ecx ]
[ xor edx, edx ]
[ mov r8d,  [ addr ]  ]
[ mov rdi, rsi ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac669d2a
#call parent addr: 7f5eac683c39
#root size: 5
===============================================================
[ nop edx, edi ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ mov r12, rcx ]
[ push rbp ]
[ push rbx ]
[ mov rbx, r9 ]
[ sub rsp,  [ argument ]  ]
[ mov dword ptr [rsp  +  [ displacement ] ], r8d ]
[ and r8d,  [ addr ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdi ]
[ mov dword ptr [rsp  +  [ displacement ] ], edx ]
[ mov dword ptr [rsp  +  [ displacement ] ], r8d ]
[ jnz  [ addr ]  ]
[ mov r15d, dword ptr [rip  +  [ displacement ] ] ]
[ mov rdi, rsi ]
[ mov rbp, rsi ]
[ call  [ addr.func ]  ]
[ test edx, edx ]
[ jnz  [ addr ]  ]
[ test r9, r9 ]
[ jnz  [ addr ]  ]
[ mov edx,  [ argument ]  ]
[ mov r11d,  [ argument ]  ]
[ mov edi,  [ argument ]  ]
[ xor r13d, r13d ]
[ mov r15d,  [ argument ]  ]
[ lea rbp, ptr [rip  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ mov esi,  [ argument ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ], r11 ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac67426f
#call parent addr: 7f5eac669d2a
#root size: 6
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ mov rcx, rdi ]
[ imul rdi, rsi ]
[ mov eax,  [ addr ]  ]
[ mov rdx, rcx ]
[ or rdx, rsi ]
[ cmp rdx, rax ]
[ jbe  [ addr ]  ]
[ test rsi, rsi ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ jmp  [ addr ]  ]
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ push rbp ]
[ push rbx ]
[ mov rbx, rdi ]
[ sub rsp,  [ argument ]  ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ add rax,  [ argument ]  ]
[ and rax,  [ addr ]  ]
[ lea rcx, ptr [rax + rbx * 1] ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ cmp rcx, rdx ]
[ jnb  [ addr ]  ]
[ mov rdx, rax ]
[ neg rdx ]
[ cmp rdx, rbx ]
[ jbe  [ addr ]  ]
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ lea rdx, ptr [rcx + rax * 1- [ displacement ] ] ]
[ neg rcx ]
[ and rdx, rcx ]
[ mov qword ptr [rip  +  [ displacement ] ], rdx ]
[ jmp  [ addr ]  ]
[ add rax,  [ argument ]  ]
[ and rax,  [ addr ]  ]
[ lea rcx, ptr [rax + rbx * 1] ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ cmp rcx, rdx ]
[ jnb  [ addr ]  ]
[ mov rdx, rax ]
[ neg rdx ]
[ cmp rdx, rbx ]
[ jbe  [ addr ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ mov qword ptr [rip  +  [ displacement ] ], rcx ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ ret  ]
RET========================================================
#ret target: 7f5eac67426f
#function name: malloc
#func_id: 32
===========================================================
[ mov r14, rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [rsp  +  [ displacement ] ] ]
[ mov r11, qword ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [rax  +  [ displacement ] ], rax ]
[ mov rsi, rbp ]
[ lea r9, ptr [rax + rdx * 1 + [ displacement ] ] ]
[ mov rdx, r11 ]
[ mov qword ptr [rax  +  [ displacement ] ], r9 ]
[ lea rdi, ptr [r9  +  [ displacement ] ] ]
[ lea rax, ptr [r9  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], r9 ]
[ mov qword ptr [r14  +  [ displacement ] ], rax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac6742b4
#call parent addr: 7f5eac669d2a
#root size: 6
===============================================================
[ nop edx, edi ]
[ mov rax, rdi ]
[ cmp rdx,  [ argument ]  ]
[ jb  [ addr ]  ]
[ cmp rdx,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ movups xmm0, xmmword ptr [rsi] ]
[ movups xmm1, xmmword ptr [rsi + rdx * 1- [ displacement ] ] ]
[ movups xmmword ptr [rdi], xmm0 ]
[ movups xmmword ptr [rdi + rdx * 1- [ displacement ] ], xmm1 ]
[ ret  ]
[ cmp dl,  [ argument ]  ]
[ jnb  [ addr ]  ]
[ cmp dl,  [ argument ]  ]
[ jnb  [ addr ]  ]
[ cmp dl,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ jb  [ addr ]  ]
[ movzx ecx, byte ptr [rsi] ]
[ mov byte ptr [rdi], cl ]
[ ret  ]
RET========================================================
#ret target: 7f5eac6742b4
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov r9, qword ptr [rsp  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rsp  +  [ displacement ] ] ]
[ mov ecx, dword ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [r9  +  [ displacement ] ], rax ]
[ movzx esi, byte ptr [rdx] ]
[ mov dword ptr [r9  +  [ displacement ] ],  [ argument ]  ]
[ test ecx, ecx ]
[ jnz  [ addr ]  ]
[ test sil, sil ]
[ jnz  [ addr ]  ]
[ lea rdx, ptr [rax + r13 * 1] ]
[ movzx eax, byte ptr [r14  +  [ displacement ] ] ]
[ movzx ebp, byte ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [r14  +  [ displacement ] ], rdx ]
[ and ebp,  [ argument ]  ]
[ and eax,  [ addr ]  ]
[ or ebp, eax ]
[ mov byte ptr [r14  +  [ displacement ] ], bpl ]
[ test byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ lea rdx, ptr [rax + r13 * 1] ]
[ movzx eax, byte ptr [r14  +  [ displacement ] ] ]
[ movzx ebp, byte ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [r14  +  [ displacement ] ], rdx ]
[ and ebp,  [ argument ]  ]
[ and eax,  [ addr ]  ]
[ or ebp, eax ]
[ mov byte ptr [r14  +  [ displacement ] ], bpl ]
[ test byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov qword ptr [r14  +  [ displacement ] ], r12 ]
[ mov qword ptr [r14  +  [ displacement ] ], rbx ]
[ test r15d, r15d ]
[ jz  [ addr ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ cmp r14, rax ]
[ jz  [ addr ]  ]
[ mov dword ptr [r14  +  [ displacement ] ],  [ argument ]  ]
[ jmp  [ addr ]  ]
[ mov qword ptr [r14  +  [ displacement ] ], r12 ]
[ mov qword ptr [r14  +  [ displacement ] ], rbx ]
[ test r15d, r15d ]
[ jz  [ addr ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ cmp r14, rax ]
[ jz  [ addr ]  ]
[ lea edx, ptr [r15- [ displacement ] ] ]
[ lea rax, ptr [r14  +  [ displacement ] ] ]
[ shl rdx,  [ argument ]  ]
[ lea rdx, ptr [r14 + rdx * 1 + [ displacement ] ] ]
[ nop word ptr [rax + rax * 1], ax ]
[ mov qword ptr [rax], r14 ]
[ add rax,  [ argument ]  ]
[ cmp rdx, rax ]
[ jnz  [ addr ]  ]
[ mov qword ptr [rax], r14 ]
[ add rax,  [ argument ]  ]
[ cmp rdx, rax ]
[ jnz  [ addr ]  ]
[ lea rax, ptr [rbx + rbx * 8] ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [r14  +  [ displacement ] ],  [ argument ]  ]
[ shl rax,  [ argument ]  ]
[ lea rdi, ptr [r14  +  [ displacement ] ] ]
[ mov rax, qword ptr [rdx + rax * 1] ]
[ mov qword ptr [r14  +  [ displacement ] ], rdi ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ lea rdx, ptr [rax  +  [ displacement ] ] ]
[ mov qword ptr [r14  +  [ displacement ] ], rdx ]
[ test r12, r12 ]
[ jz  [ addr ]  ]
[ xor edx, edx ]
[ test r12, r12 ]
[ jnz  [ addr ]  ]
[ mov rax, r14 ]
[ jmp  [ addr ]  ]
[ add rax,  [ argument ]  ]
[ mov qword ptr [rdi], rax ]
[ lea rax, ptr [r14  +  [ displacement ] ] ]
[ test sil, sil ]
[ mov byte ptr [rsp  +  [ displacement ] ], sil ]
[ mov qword ptr [r14  +  [ displacement ] ], rax ]
[ jz  [ addr ]  ]
[ mov rdi, qword ptr [rsp  +  [ displacement ] ] ]
[ xor ebp, ebp ]
[ call  [ addr.func ]  ]
[ add rsp,  [ argument ]  ]
[ mov rax, r14 ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ mov r15, rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov qword ptr [rax  +  [ displacement ] ], r12 ]
[ movzx eax, word ptr [rbp- [ displacement ] ] ]
[ xor esi, esi ]
[ mov rdi, r15 ]
[ mov word ptr [r15  +  [ displacement ] ], ax ]
[ mov rax, qword ptr [r13] ]
[ mov qword ptr [r15  +  [ displacement ] ], rax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac669d61
#call parent addr: 7f5eac669d2a
#root size: 6
===============================================================
[ nop edx, edi ]
[ push r12 ]
[ lea r12, ptr [rip  +  [ displacement ] ] ]
[ push rbp ]
[ mov rbp, rdi ]
[ lea rdi, ptr [r12  +  [ displacement ] ] ]
[ push rbx ]
[ mov rbx, rsi ]
[ call qword ptr [rip  +  [ displacement ] ] ]
CALL===========================================================
#now call addr: 7f5eac67417d
#call parent addr: 7f5eac669d61
#root size: 7
===============================================================
[ nop edx, edi ]
[ add dword ptr [rdi  +  [ displacement ] ],  [ argument ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5eac67417d
#function name: NULL
#func_id: 16
===========================================================
[ lea rdx, ptr [rbx + rbx * 8] ]
[ shl rdx,  [ argument ]  ]
[ add rdx, r12 ]
[ mov rax, qword ptr [rdx] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ nop word ptr [rax + rax * 1], ax ]
[ mov rdx, rax ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ mov qword ptr [rbp  +  [ displacement ] ], rdx ]
[ mov qword ptr [rdx  +  [ displacement ] ], rbp ]
[ lea rax, ptr [rbx + rbx * 8] ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ pop rbx ]
[ shl rax,  [ argument ]  ]
[ add dword ptr [r12 + rax * 1 + [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rbp  +  [ displacement ] ], rax ]
[ add rax,  [ argument ]  ]
[ pop rbp ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ pop r12 ]
[ jmp qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rdx], rbp ]
[ jmp  [ addr ]  ]
[ lea rax, ptr [rbx + rbx * 8] ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ pop rbx ]
[ shl rax,  [ argument ]  ]
[ add dword ptr [r12 + rax * 1 + [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rbp  +  [ displacement ] ], rax ]
[ add rax,  [ argument ]  ]
[ pop rbp ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ pop r12 ]
[ jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ sub dword ptr [rdi  +  [ displacement ] ],  [ argument ]  ]
[ ret  ]
[ cmp qword ptr [rip  +  [ displacement ] ], r15 ]
[ jnz  [ addr ]  ]
[ mov byte ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov edx, dword ptr [rbp- [ displacement ] ] ]
[ movdqa xmm0, xmmword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [r15  +  [ displacement ] ],  [ argument ]  ]
[ add dword ptr [r15  +  [ displacement ] ],  [ argument ]  ]
[ lea rax, ptr [rdx * 8] ]
[ movups xmmword ptr [r15  +  [ displacement ] ], xmm0 ]
[ sub rax, rdx ]
[ lea rax, ptr [r12 + rax * 8] ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ cmp r12, rax ]
[ jnb  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ xor r13d, r13d ]
[ mov rbx, r12 ]
[ mov r9, r12 ]
[ mov qword ptr [rbp- [ displacement ] ], r14 ]
[ lea r11, ptr [rip  +  [ displacement ] ] ]
[ mov r14d, r13d ]
[ neg rax ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov edx, dword ptr [rbx] ]
[ cmp edx,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ test edx, edx ]
[ jz  [ addr ]  ]
[ cmp edx,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ movsxd rdx, dword ptr [rax + rdx * 4] ]
[ add rdx, rax ]
[ jmp rdx ]
[ mov rdx, r9 ]
[ sub rdx, qword ptr [rbx  +  [ displacement ] ] ]
[ add rbx,  [ argument ]  ]
[ mov qword ptr [r15], rdx ]
[ cmp rbx, qword ptr [rbp- [ displacement ] ] ]
[ jb  [ addr ]  ]
[ jmp  [ addr ]  ]
[ mov edx, dword ptr [rbx] ]
[ cmp edx,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ test edx, edx ]
[ jz  [ addr ]  ]
[ cmp edx,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ movsxd rdx, dword ptr [rax + rdx * 4] ]
[ add rdx, rax ]
[ jmp rdx ]
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ mov rdx, qword ptr [r15] ]
[ mov r14d,  [ argument ]  ]
[ add rdx, qword ptr [rbx  +  [ displacement ] ] ]
[ mov qword ptr [rip  +  [ displacement ] ], r11 ]
[ mov qword ptr [r11], rdx ]
[ test rcx, rcx ]
[ jnz  [ addr ]  ]
[ movzx esi, byte ptr [rdx] ]
[ test sil, sil ]
[ jz  [ addr ]  ]
[ add rdx,  [ argument ]  ]
[ cmp sil,  [ argument ]  ]
[ movzx esi, byte ptr [rdx] ]
[ cmovz rcx, rdx ]
[ test sil, sil ]
[ jnz  [ addr ]  ]
[ add rbx,  [ argument ]  ]
[ cmp rbx, qword ptr [rbp- [ displacement ] ] ]
[ jb  [ addr ]  ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ mov r13d, r14d ]
[ mov rcx, qword ptr [r15  +  [ displacement ] ] ]
[ mov r14, qword ptr [rbp- [ displacement ] ] ]
[ mov rdx, qword ptr [r15  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ add rax, qword ptr [r15] ]
[ mov qword ptr [r15  +  [ displacement ] ], rax ]
[ test rcx, rcx ]
[ jnz  [ addr ]  ]
[ mov rdx, qword ptr [rbx  +  [ displacement ] ] ]
[ mov rcx, qword ptr [rbp- [ displacement ] ] ]
[ mov rsi, qword ptr [r15] ]
[ and rcx, rdx ]
[ add rcx, rsi ]
[ cmp qword ptr [r15  +  [ displacement ] ], rcx ]
[ jbe  [ addr ]  ]
[ mov qword ptr [r15  +  [ displacement ] ], rcx ]
[ add rdx, qword ptr [rbx  +  [ displacement ] ] ]
[ add rdx, rsi ]
[ cmp qword ptr [r15  +  [ displacement ] ], rdx ]
[ jnb  [ addr ]  ]
[ mov qword ptr [r15  +  [ displacement ] ], rdx ]
[ test byte ptr [rbx  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ add rdx, qword ptr [rbx  +  [ displacement ] ] ]
[ add rdx, rsi ]
[ cmp qword ptr [r15  +  [ displacement ] ], rdx ]
[ jnb  [ addr ]  ]
[ mov qword ptr [r15  +  [ displacement ] ], rdx ]
[ test byte ptr [rbx  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp qword ptr [r15  +  [ displacement ] ], rdx ]
[ jnb  [ addr ]  ]
[ mov qword ptr [r15  +  [ displacement ] ], rdx ]
[ add rbx,  [ argument ]  ]
[ cmp rbx, qword ptr [rbp- [ displacement ] ] ]
[ jb  [ addr ]  ]
[ jmp  [ addr ]  ]
[ mov rdx, qword ptr [r15] ]
[ add rdx, qword ptr [rbx  +  [ displacement ] ] ]
[ add rbx,  [ argument ]  ]
[ mov qword ptr [r15  +  [ displacement ] ], rdx ]
[ cmp rbx, qword ptr [rbp- [ displacement ] ] ]
[ jb  [ addr ]  ]
[ jmp  [ addr ]  ]
[ test byte ptr [r15  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [rbx  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rcx, qword ptr [rbx  +  [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rcx ]
[ cmp rcx,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ mov rdx, qword ptr [r15] ]
[ mov ecx,  [ argument ]  ]
[ add rdx, qword ptr [rbx  +  [ displacement ] ] ]
[ xor r10d, r10d ]
[ sub rcx, rdx ]
[ xor r12d, r12d ]
[ mov r13, rbx ]
[ mov qword ptr [rbp- [ displacement ] ], rcx ]
[ jmp  [ addr ]  ]
[ mov ecx, dword ptr [rdx] ]
[ mov dword ptr [rbp- [ displacement ] ], ecx ]
[ cmp ecx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp dword ptr [rdx  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp dword ptr [rdx  +  [ displacement ] ],  [ addr ]  ]
[ jnz  [ addr ]  ]
[ movzx ecx, byte ptr [r15  +  [ displacement ] ] ]
[ test cl,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ and ecx,  [ addr ]  ]
[ or ecx,  [ argument ]  ]
[ mov byte ptr [r15  +  [ displacement ] ], cl ]
[ mov edi, dword ptr [rdx  +  [ displacement ] ] ]
[ cmp edi,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ test dil,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ lea rcx, ptr [rdx  +  [ displacement ] ] ]
[ lea rsi, ptr [rcx + rdi * 1] ]
[ mov qword ptr [rbp- [ displacement ] ], rsi ]
[ jmp  [ addr ]  ]
[ mov ebx, dword ptr [rcx  +  [ displacement ] ] ]
[ mov esi, r12d ]
[ mov r12d, dword ptr [rcx] ]
[ mov dword ptr [rbp- [ displacement ] ], ebx ]
[ mov r8d, ebx ]
[ cmp r12d, esi ]
[ jnb  [ addr ]  ]
[ mov rbx, r13 ]
[ add rbx,  [ argument ]  ]
[ cmp rbx, qword ptr [rbp- [ displacement ] ] ]
[ jb  [ addr ]  ]
[ jmp  [ addr ]  ]
[ lea rbx, ptr [rcx  +  [ displacement ] ] ]
[ mov esi, r8d ]
[ lea r8, ptr [rbx + rsi * 1] ]
[ cmp qword ptr [rbp- [ displacement ] ], r8 ]
[ jb  [ addr ]  ]
[ cmp r12d,  [ addr ]  ]
[ jz  [ addr ]  ]
[ jnbe  [ addr ]  ]
[ cmp dword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov r10d, dword ptr [rcx  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ mov ecx, dword ptr [rbp- [ displacement ] ] ]
[ add rcx,  [ argument ]  ]
[ and rcx,  [ addr ]  ]
[ lea rcx, ptr [rdi + rcx * 1 + [ displacement ] ] ]
[ and rcx,  [ addr ]  ]
[ add rdx, rcx ]
[ mov rcx, qword ptr [rbp- [ displacement ] ] ]
[ add rcx, rdx ]
[ cmp qword ptr [rbp- [ displacement ] ], rcx ]
[ jbe  [ addr ]  ]
[ mov ecx, dword ptr [rdx] ]
[ mov dword ptr [rbp- [ displacement ] ], ecx ]
[ cmp ecx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp dword ptr [rdx  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov edx, r10d ]
[ mov rbx, r13 ]
[ and edx,  [ argument ]  ]
[ and r10d,  [ argument ]  ]
[ jz  [ addr ]  ]
[ or byte ptr [r15  +  [ displacement ] ],  [ argument ]  ]
[ test edx, edx ]
[ jz  [ addr ]  ]
[ or byte ptr [r15  +  [ displacement ] ],  [ argument ]  ]
[ add rbx,  [ argument ]  ]
[ cmp rbx, qword ptr [rbp- [ displacement ] ] ]
[ jb  [ addr ]  ]
[ cmp edx,  [ addr ]  ]
[ jz  [ addr ]  ]
[ cmp edx,  [ addr ]  ]
[ jnz  [ addr ]  ]
[ movdqu xmm0, xmmword ptr [rbx  +  [ displacement ] ] ]
[ movdqu xmm3, xmmword ptr [rbx  +  [ displacement ] ] ]
[ add rbx,  [ argument ]  ]
[ shufpd xmm0, xmm3,  [ argument ]  ]
[ movups xmmword ptr [r15  +  [ displacement ] ], xmm0 ]
[ cmp rbx, qword ptr [rbp- [ displacement ] ] ]
[ jb  [ addr ]  ]
[ mov edx, dword ptr [rbx  +  [ displacement ] ] ]
[ add rbx,  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], edx ]
[ cmp rbx, qword ptr [rbp- [ displacement ] ] ]
[ jb  [ addr ]  ]
[ jmp  [ addr ]  ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ mov r13d, r14d ]
[ mov rcx, qword ptr [r15  +  [ displacement ] ] ]
[ mov r14, qword ptr [rbp- [ displacement ] ] ]
[ mov rdx, qword ptr [r15  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ add rax, qword ptr [r15] ]
[ mov qword ptr [r15  +  [ displacement ] ], rax ]
[ test rcx, rcx ]
[ jnz  [ addr ]  ]
[ mov qword ptr [r15  +  [ displacement ] ],  [ addr ]  ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ test rcx, rcx ]
[ jnz  [ addr ]  ]
[ mov qword ptr [r15  +  [ displacement ] ],  [ addr ]  ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ mov rbx, qword ptr [rip  +  [ displacement ] ] ]
[ test rbx, rbx ]
[ jz  [ addr ]  ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ mov rbx, qword ptr [rip  +  [ displacement ] ] ]
[ test rbx, rbx ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov r12, qword ptr [rax  +  [ displacement ] ] ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov rdi, qword ptr [rbx] ]
[ add r12, qword ptr [rax  +  [ displacement ] ] ]
[ mov rsi, r12 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac669eba
#call parent addr: 7f5eac669d61
#root size: 7
===============================================================
[ nop edx, edi ]
[ mov ecx, esi ]
[ mov eax, edi ]
[ and rcx,  [ argument ]  ]
[ and rax,  [ argument ]  ]
[ cmp ecx,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ cmp eax,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ movlpd xmm1, qword ptr [rdi] ]
[ movlpd xmm2, qword ptr [rsi] ]
[ movhpd xmm1, qword ptr [rdi  +  [ displacement ] ] ]
[ movhpd xmm2, qword ptr [rsi  +  [ displacement ] ] ]
[ pxor xmm0, xmm0 ]
[ pcmpeqb xmm0, xmm1 ]
[ pcmpeqb xmm1, xmm2 ]
[ psubb xmm1, xmm0 ]
[ pmovmskb edx, xmm1 ]
[ sub edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ bsf rdx, rdx ]
[ movzx ecx, byte ptr [rsi + rdx * 1] ]
[ movzx eax, byte ptr [rdi + rdx * 1] ]
[ sub eax, ecx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac669eba
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ test eax, eax ]
[ jz  [ addr ]  ]
[ mov qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ cmp qword ptr [rbx  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], r12 ]
[ mov dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rbx  +  [ displacement ] ], rax ]
[ test byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp byte ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rdx, qword ptr [r15  +  [ displacement ] ] ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rdx] ]
[ lea rcx, ptr [r15  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov r10d,  [ addr ]  ]
[ mov r9d,  [ addr ]  ]
[ mov ebx,  [ addr ]  ]
[ mov r8d,  [ addr ]  ]
[ mov r12d,  [ addr ]  ]
[ mov r11d,  [ addr ]  ]
[ jmp  [ addr ]  ]
[ cmp rax,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ mov qword ptr [rcx + rax * 8], rdx ]
[ mov rax, qword ptr [rdx  +  [ displacement ] ] ]
[ add rdx,  [ argument ]  ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [r15] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rsi, r10 ]
[ sub rsi, rax ]
[ cmp rsi,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ mov rsi, r11 ]
[ sub rsi, rax ]
[ mov qword ptr [rcx + rsi * 8], rdx ]
[ mov rax, qword ptr [rdx  +  [ displacement ] ] ]
[ add rdx,  [ argument ]  ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ cmp rax,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ lea esi, ptr [rax + rax * 1] ]
[ mov edi, esi ]
[ sar edi,  [ argument ]  ]
[ cmp esi,  [ addr ]  ]
[ jbe  [ addr ]  ]
[ mov eax,  [ argument ]  ]
[ sub eax, edi ]
[ mov qword ptr [rcx + rax * 8], rdx ]
[ jmp  [ addr ]  ]
[ mov rsi, r9 ]
[ sub rsi, rax ]
[ cmp rsi,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ mov rsi, r8 ]
[ sub rsi, rax ]
[ cmp rsi,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ mov rsi, rbx ]
[ sub rsi, rax ]
[ mov rax, rsi ]
[ jmp  [ addr ]  ]
[ mov qword ptr [rcx + rax * 8], rdx ]
[ mov rax, qword ptr [rdx  +  [ displacement ] ] ]
[ add rdx,  [ argument ]  ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [r15] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [r15  +  [ displacement ] ] ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [r15] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [r15  +  [ displacement ] ] ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ add qword ptr [rdx  +  [ displacement ] ], rax ]
[ mov rdx, qword ptr [r15  +  [ displacement ] ] ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [r15  +  [ displacement ] ] ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ add qword ptr [rdx  +  [ displacement ] ], rax ]
[ mov rdx, qword ptr [r15  +  [ displacement ] ] ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ add qword ptr [rdx  +  [ displacement ] ], rax ]
[ mov rdx, qword ptr [r15  +  [ displacement ] ] ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ add qword ptr [rdx  +  [ displacement ] ], rax ]
[ mov rdx, qword ptr [r15  +  [ displacement ] ] ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ add qword ptr [rdx  +  [ displacement ] ], rax ]
[ mov rdx, qword ptr [r15  +  [ displacement ] ] ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ add qword ptr [rdx  +  [ displacement ] ], rax ]
[ mov rdx, qword ptr [r15  +  [ displacement ] ] ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ add qword ptr [rdx  +  [ displacement ] ], rax ]
[ mov rdx, qword ptr [r15  +  [ displacement ] ] ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ add qword ptr [rdx  +  [ displacement ] ], rax ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ cmp qword ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [r15  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ cmp qword ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [rax  +  [ displacement ] ] ]
[ mov dword ptr [r15  +  [ displacement ] ], edx ]
[ test dl,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov qword ptr [r15  +  [ displacement ] ], rax ]
[ test dl,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov qword ptr [r15  +  [ displacement ] ], rax ]
[ and edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ test dl,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov qword ptr [r15  +  [ displacement ] ], rax ]
[ and edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ and edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ mov dword ptr [r15  +  [ displacement ] ], eax ]
[ mov edx, eax ]
[ test al,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov qword ptr [r15  +  [ displacement ] ], rax ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ mov dword ptr [r15  +  [ displacement ] ], eax ]
[ mov edx, eax ]
[ test al,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov byte ptr [r15  +  [ displacement ] ],  [ argument ]  ]
[ test byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ test byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ and edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [r15  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ mov qword ptr [r15  +  [ displacement ] ], rax ]
[ jmp  [ addr ]  ]
[ cmp qword ptr [r15  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov qword ptr [r15  +  [ displacement ] ],  [ argument ]  ]
[ mov rdi, r15 ]
[ call  [ addr.func ]  ]
[ mov rdi, r15 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66a0bf
#call parent addr: 7f5eac669d61
#root size: 7
===============================================================
RET========================================================
#ret target: 7f5eac66a0bf
#function name: _dl_rtld_di_serinfo
#func_id: 17
===========================================================
[ cmp dword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ xor r9d, r9d ]
[ xor r8d, r8d ]
[ xor ecx, ecx ]
[ mov edx,  [ argument ]  ]
[ mov rdi, rsi ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66a0f6
#call parent addr: 7f5eac669d61
#root size: 7
===============================================================
CALL===========================================================
#now call addr: 7f5eac674245
#call parent addr: 7f5eac66a0f6
#root size: 8
===============================================================
RET========================================================
#ret target: 7f5eac674245
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov edx, r15d ]
[ mov r13, rax ]
[ lea r11, ptr [rax  +  [ displacement ] ] ]
[ shl rdx,  [ argument ]  ]
[ lea rdi, ptr [rdx + rax * 1 + [ displacement ] ] ]
[ mov esi,  [ argument ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ], r11 ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac67426f
#call parent addr: 7f5eac66a0f6
#root size: 8
===============================================================
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ mov qword ptr [rip  +  [ displacement ] ], rcx ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ ret  ]
RET========================================================
#ret target: 7f5eac67426f
#function name: malloc
#func_id: 32
===========================================================
CALL===========================================================
#now call addr: 7f5eac6742b4
#call parent addr: 7f5eac66a0f6
#root size: 8
===============================================================
RET========================================================
#ret target: 7f5eac6742b4
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ lea rax, ptr [rbx + rbx * 8] ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [r14  +  [ displacement ] ],  [ argument ]  ]
[ shl rax,  [ argument ]  ]
[ lea rdi, ptr [r14  +  [ displacement ] ] ]
[ mov rax, qword ptr [rdx + rax * 1] ]
[ mov qword ptr [r14  +  [ displacement ] ], rdi ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ lea rdx, ptr [rax  +  [ displacement ] ] ]
[ mov qword ptr [r14  +  [ displacement ] ], rdx ]
[ test r12, r12 ]
[ jz  [ addr ]  ]
[ mov edx,  [ argument ]  ]
[ nop dword ptr [rax], eax ]
[ mov rax, r12 ]
[ mov r12, qword ptr [r12  +  [ displacement ] ] ]
[ test r12, r12 ]
[ jnz  [ addr ]  ]
[ mov rax, r14 ]
[ add rax,  [ argument ]  ]
[ cmp rax, rdx ]
[ jz  [ addr ]  ]
[ test byte ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov qword ptr [r14  +  [ displacement ] ], rdx ]
[ jmp  [ addr ]  ]
[ lea rdi, ptr [r14  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ mov qword ptr [rdi], rax ]
[ lea rax, ptr [r14  +  [ displacement ] ] ]
[ test sil, sil ]
[ mov byte ptr [rsp  +  [ displacement ] ], sil ]
[ mov qword ptr [r14  +  [ displacement ] ], rax ]
[ jz  [ addr ]  ]
[ mov rdi, qword ptr [rsp  +  [ displacement ] ] ]
[ xor ebp, ebp ]
[ call  [ addr.func ]  ]
[ mov r13, rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ xor edi, edi ]
[ mov rdx, qword ptr [rax  +  [ displacement ] ] ]
[ movzx esi, word ptr [rax  +  [ displacement ] ] ]
[ add rdx, rax ]
[ mov word ptr [r13  +  [ displacement ] ], si ]
[ mov qword ptr [r13  +  [ displacement ] ], rdx ]
[ test rsi, rsi ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ mov ecx, dword ptr [rdx] ]
[ cmp ecx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rcx, qword ptr [rdx  +  [ displacement ] ] ]
[ add rdi,  [ argument ]  ]
[ add rdx,  [ argument ]  ]
[ mov qword ptr [r13  +  [ displacement ] ], rcx ]
[ mov rcx, qword ptr [rdx- [ displacement ] ] ]
[ shr rcx,  [ argument ]  ]
[ mov word ptr [r13  +  [ displacement ] ], cx ]
[ cmp rdi, rsi ]
[ jnz  [ addr ]  ]
[ mov qword ptr [r13  +  [ displacement ] ], rax ]
[ sub rax, qword ptr [r13] ]
[ mov rcx, rax ]
[ add qword ptr [r13  +  [ displacement ] ], rax ]
[ add qword ptr [r13  +  [ displacement ] ], rax ]
[ add rcx, qword ptr [r13  +  [ displacement ] ] ]
[ mov qword ptr [r13], rax ]
[ mov qword ptr [r13  +  [ displacement ] ], rcx ]
[ jz  [ addr ]  ]
[ cmp ecx,  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp ecx,  [ argument ]  ]
[ jz  [ addr ]  ]
[ add rdi,  [ argument ]  ]
[ add rdx,  [ argument ]  ]
[ cmp rdi, rsi ]
[ jz  [ addr ]  ]
[ cmp qword ptr [r13],  [ argument ]  ]
[ mov rcx, qword ptr [rdx  +  [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov qword ptr [r13], rcx ]
[ add rcx, qword ptr [rdx  +  [ displacement ] ] ]
[ cmp rcx, qword ptr [r13  +  [ displacement ] ] ]
[ jb  [ addr ]  ]
[ mov qword ptr [r13  +  [ displacement ] ], rcx ]
[ test byte ptr [rdx  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp rcx, qword ptr [r13  +  [ displacement ] ] ]
[ jb  [ addr ]  ]
[ mov qword ptr [r13  +  [ displacement ] ], rcx ]
[ jmp  [ addr ]  ]
[ add rdi,  [ argument ]  ]
[ add rdx,  [ argument ]  ]
[ cmp rdi, rsi ]
[ jz  [ addr ]  ]
[ mov ecx, dword ptr [rdx] ]
[ cmp ecx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rcx, qword ptr [rdx  +  [ displacement ] ] ]
[ add rdi,  [ argument ]  ]
[ add rdx,  [ argument ]  ]
[ mov qword ptr [r13  +  [ displacement ] ], rcx ]
[ mov rcx, qword ptr [rdx- [ displacement ] ] ]
[ shr rcx,  [ argument ]  ]
[ mov word ptr [r13  +  [ displacement ] ], cx ]
[ cmp rdi, rsi ]
[ jnz  [ addr ]  ]
[ mov qword ptr [r13  +  [ displacement ] ], rax ]
[ sub rax, qword ptr [r13] ]
[ mov rcx, rax ]
[ add qword ptr [r13  +  [ displacement ] ], rax ]
[ add qword ptr [r13  +  [ displacement ] ], rax ]
[ add rcx, qword ptr [r13  +  [ displacement ] ] ]
[ mov qword ptr [r13], rax ]
[ mov qword ptr [r13  +  [ displacement ] ], rcx ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [rcx] ]
[ lea rsi, ptr [r13  +  [ displacement ] ] ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ mov r10d,  [ addr ]  ]
[ mov r9d,  [ addr ]  ]
[ mov ebx,  [ addr ]  ]
[ mov r12d,  [ addr ]  ]
[ mov r11d,  [ addr ]  ]
[ jmp  [ addr ]  ]
[ cmp rdx,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ mov qword ptr [rsi + rdx * 8], rcx ]
[ mov rdx, qword ptr [rcx  +  [ displacement ] ] ]
[ add rcx,  [ argument ]  ]
[ test rdx, rdx ]
[ jnz  [ addr ]  ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rdi, r10 ]
[ sub rdi, rdx ]
[ cmp rdi,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ mov rdi, r11 ]
[ sub rdi, rdx ]
[ mov qword ptr [rsi + rdi * 8], rcx ]
[ mov rdx, qword ptr [rcx  +  [ displacement ] ] ]
[ add rcx,  [ argument ]  ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ cmp rdx,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ lea edi, ptr [rdx + rdx * 1] ]
[ mov r8d, edi ]
[ sar r8d,  [ argument ]  ]
[ cmp edi,  [ addr ]  ]
[ jbe  [ addr ]  ]
[ mov edx,  [ argument ]  ]
[ sub edx, r8d ]
[ mov qword ptr [rsi + rdx * 8], rcx ]
[ jmp  [ addr ]  ]
[ mov rdi, r9 ]
[ sub rdi, rdx ]
[ cmp rdi,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ mov rdi, rbx ]
[ sub rdi, rdx ]
[ cmp rdi,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ mov rdi, r12 ]
[ sub rdi, rdx ]
[ mov rdx, rdi ]
[ jmp  [ addr ]  ]
[ mov qword ptr [rsi + rdx * 8], rcx ]
[ mov rdx, qword ptr [rcx  +  [ displacement ] ] ]
[ add rcx,  [ argument ]  ]
[ test rdx, rdx ]
[ jnz  [ addr ]  ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [r13  +  [ displacement ] ] ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [r13  +  [ displacement ] ] ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ mov rcx, qword ptr [rdx] ]
[ mov ebx,  [ argument ]  ]
[ mov edi,  [ argument ]  ]
[ mov r10d,  [ argument ]  ]
[ mov r8d,  [ argument ]  ]
[ mov esi,  [ argument ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], rcx ]
[ mov rcx, qword ptr [rdx  +  [ displacement ] ] ]
[ mov edx,  [ argument ]  ]
[ add rcx, rax ]
[ mov qword ptr [rip  +  [ displacement ] ], rcx ]
[ lea rcx, ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [r13  +  [ displacement ] ], rcx ]
[ mov ecx,  [ argument ]  ]
[ mov r11, qword ptr [r13  +  [ displacement ] ] ]
[ test r11, r11 ]
[ jz  [ addr ]  ]
[ mov r9, qword ptr [r13  +  [ displacement ] ] ]
[ test r9, r9 ]
[ jz  [ addr ]  ]
[ mov rbx, qword ptr [r9  +  [ displacement ] ] ]
[ lea r11, ptr [rip  +  [ displacement ] ] ]
[ add rdx, r11 ]
[ mov r11, qword ptr [r9] ]
[ add rbx, rax ]
[ mov qword ptr [rdx], r11 ]
[ mov qword ptr [rdx  +  [ displacement ] ], rbx ]
[ mov qword ptr [r13  +  [ displacement ] ], rdx ]
[ mov rdx, rcx ]
[ mov rcx, rsi ]
[ mov rsi, rdi ]
[ mov rdi, r8 ]
[ mov r8, r10 ]
[ mov r10, qword ptr [r13  +  [ displacement ] ] ]
[ test r10, r10 ]
[ jz  [ addr ]  ]
[ lea r9, ptr [rip  +  [ displacement ] ] ]
[ add rdx, r9 ]
[ mov r9, qword ptr [r10] ]
[ mov qword ptr [rdx], r9 ]
[ mov r9, qword ptr [r10  +  [ displacement ] ] ]
[ add r9, rax ]
[ mov qword ptr [rdx  +  [ displacement ] ], r9 ]
[ mov qword ptr [r13  +  [ displacement ] ], rdx ]
[ mov rdx, rcx ]
[ mov rcx, rsi ]
[ mov rsi, rdi ]
[ mov rdi, r8 ]
[ mov r9, qword ptr [r13  +  [ displacement ] ] ]
[ test r9, r9 ]
[ jz  [ addr ]  ]
[ mov r8, qword ptr [r13  +  [ displacement ] ] ]
[ test r8, r8 ]
[ jz  [ addr ]  ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ add rdx, rdi ]
[ mov rdi, qword ptr [r8] ]
[ mov qword ptr [rdx], rdi ]
[ mov rdi, qword ptr [r8  +  [ displacement ] ] ]
[ add rdi, rax ]
[ mov qword ptr [rdx  +  [ displacement ] ], rdi ]
[ mov qword ptr [r13  +  [ displacement ] ], rdx ]
[ mov rdx, rcx ]
[ mov rcx, rsi ]
[ mov rdi, qword ptr [r13  +  [ displacement ] ] ]
[ test rdi, rdi ]
[ jz  [ addr ]  ]
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ add rdx, rsi ]
[ mov rsi, qword ptr [rdi] ]
[ mov qword ptr [rdx], rsi ]
[ mov rsi, qword ptr [rdi  +  [ displacement ] ] ]
[ add rsi, rax ]
[ mov qword ptr [rdx  +  [ displacement ] ], rsi ]
[ mov qword ptr [r13  +  [ displacement ] ], rdx ]
[ mov rdx, rcx ]
[ mov rcx, qword ptr [r13  +  [ displacement ] ] ]
[ test rcx, rcx ]
[ jz  [ addr ]  ]
[ mov rdi, qword ptr [r13  +  [ displacement ] ] ]
[ test rdi, rdi ]
[ jz  [ addr ]  ]
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ add rdx, rsi ]
[ mov rsi, qword ptr [rdi] ]
[ mov qword ptr [rdx], rsi ]
[ mov rsi, qword ptr [rdi  +  [ displacement ] ] ]
[ add rsi, rax ]
[ mov qword ptr [rdx  +  [ displacement ] ], rsi ]
[ mov qword ptr [r13  +  [ displacement ] ], rdx ]
[ mov rdx, rcx ]
[ mov rcx, qword ptr [r13  +  [ displacement ] ] ]
[ test rcx, rcx ]
[ jz  [ addr ]  ]
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ add rax, qword ptr [rcx  +  [ displacement ] ] ]
[ add rdx, rsi ]
[ mov rsi, qword ptr [rcx] ]
[ mov qword ptr [rdx  +  [ displacement ] ], rax ]
[ mov qword ptr [rdx], rsi ]
[ mov qword ptr [r13  +  [ displacement ] ], rdx ]
[ mov rax, qword ptr [r13  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ cmp qword ptr [r13  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [r13  +  [ displacement ] ] ]
[ cmp qword ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [r13  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [r13  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [rax  +  [ displacement ] ] ]
[ mov dword ptr [r13  +  [ displacement ] ], edx ]
[ test dl,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov qword ptr [r13  +  [ displacement ] ], rax ]
[ test dl,  [ argument ]  ]
[ jz  [ addr ]  ]
[ and edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [r13  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ mov dword ptr [r13  +  [ displacement ] ], eax ]
[ mov edx, eax ]
[ test al,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [r13  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov qword ptr [r13  +  [ displacement ] ],  [ argument ]  ]
[ mov rdi, r13 ]
[ call  [ addr.func ]  ]
[ mov rdi, r13 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66a495
#call parent addr: 7f5eac66a0f6
#root size: 8
===============================================================
RET========================================================
#ret target: 7f5eac66a495
#function name: _dl_rtld_di_serinfo
#func_id: 17
===========================================================
[ mov rax, qword ptr [r13  +  [ displacement ] ] ]
[ lea rdx, ptr [r13  +  [ displacement ] ] ]
[ or byte ptr [r13  +  [ displacement ] ],  [ argument ]  ]
[ mov dword ptr [r13  +  [ displacement ] ],  [ argument ]  ]
[ mov dword ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rax], rdx ]
[ mov rax, qword ptr [r13  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [r13  +  [ displacement ] ] ]
[ mov r12, qword ptr [rax  +  [ displacement ] ] ]
[ add r12, qword ptr [rdx  +  [ displacement ] ] ]
[ mov rdi, r12 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66a4dd
#call parent addr: 7f5eac66a0f6
#root size: 8
===============================================================
RET========================================================
#ret target: 7f5eac66a4dd
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ lea rbx, ptr [rax  +  [ displacement ] ] ]
[ mov rdi, rbx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66a4e9
#call parent addr: 7f5eac66a0f6
#root size: 8
===============================================================
RET========================================================
#ret target: 7f5eac66a4e9
#function name: malloc
#func_id: 32
===========================================================
[ mov rdi, rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rdx, rbx ]
[ mov rsi, r12 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66a500
#call parent addr: 7f5eac66a0f6
#root size: 8
===============================================================
RET========================================================
#ret target: 7f5eac66a500
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov rdx, qword ptr [r13  +  [ displacement ] ] ]
[ mov qword ptr [r13  +  [ displacement ] ], rax ]
[ mov qword ptr [rdx], rax ]
[ xor esi, esi ]
[ mov rdi, r13 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66a515
#call parent addr: 7f5eac66a0f6
#root size: 8
===============================================================
CALL===========================================================
#now call addr: 7f5eac67417d
#call parent addr: 7f5eac66a515
#root size: 9
===============================================================
RET========================================================
#ret target: 7f5eac67417d
#function name: NULL
#func_id: 16
===========================================================
[ cmp qword ptr [r13  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp r15, qword ptr [r13  +  [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rip  +  [ displacement ] ], r13 ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov qword ptr [r13  +  [ displacement ] ], rax ]
[ lea rax, ptr [r13  +  [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov qword ptr [rip  +  [ displacement ] ], r13 ]
[ jmp  [ addr ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ pxor xmm0, xmm0 ]
[ lea rbx, ptr [rbp- [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov rsi, r13 ]
[ xor r9d, r9d ]
[ mov r8, rbx ]
[ lea r12, ptr [rbp- [ displacement ] ] ]
[ mov rax,  [ addr ]  ]
[ movaps xmmword ptr [rbp- [ displacement ] ], xmm0 ]
[ lea rcx, ptr [r13  +  [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ mov rdx, r12 ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ mov byte ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ push  [ argument ]  ]
[ push  [ argument ]  ]
[ call qword ptr [rip  +  [ displacement ] ] ]
CALL===========================================================
#now call addr: 7f5eac66a9a3
#call parent addr: 7f5eac66a515
#root size: 9
===============================================================
[ nop edx, edi ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ mov r13, rdi ]
[ push r12 ]
[ mov r12, rdx ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ movzx edx, byte ptr [rdi] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rsi ]
[ mov qword ptr [rsp  +  [ displacement ] ], rcx ]
[ mov qword ptr [rsp  +  [ displacement ] ], r8 ]
[ mov dword ptr [rsp  +  [ displacement ] ], r9d ]
[ test dl, dl ]
[ jz  [ addr ]  ]
[ mov rcx, rdi ]
[ mov eax,  [ argument ]  ]
[ nop word ptr [rax + rax * 1], ax ]
[ mov rsi, rax ]
[ add rcx,  [ argument ]  ]
[ shl rsi,  [ argument ]  ]
[ add rax, rsi ]
[ add rax, rdx ]
[ movzx edx, byte ptr [rcx] ]
[ test dl, dl ]
[ jnz  [ addr ]  ]
[ mov ebx, eax ]
[ add qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov eax,  [ addr ]  ]
[ pxor xmm0, xmm0 ]
[ cmp qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ movaps xmmword ptr [rsp  +  [ displacement ] ], xmm0 ]
[ jz  [ addr ]  ]
[ mov rsi, rax ]
[ add rcx,  [ argument ]  ]
[ shl rsi,  [ argument ]  ]
[ add rax, rsi ]
[ add rax, rdx ]
[ movzx edx, byte ptr [rcx] ]
[ test dl, dl ]
[ jnz  [ addr ]  ]
[ mov ebx, eax ]
[ add qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov eax,  [ addr ]  ]
[ pxor xmm0, xmm0 ]
[ cmp qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ movaps xmmword ptr [rsp  +  [ displacement ] ], xmm0 ]
[ jz  [ addr ]  ]
[ test byte ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ mov rcx, qword ptr [r12] ]
[ cmp qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov r9, qword ptr [rax] ]
[ jnz  [ addr ]  ]
[ test r9, r9 ]
[ jz  [ addr ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov rbp, rax ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ lea r15, ptr [rsp  +  [ displacement ] ] ]
[ lea r14, ptr [rsp  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ push qword ptr [rsp  +  [ displacement ] ] ]
[ mov edi, dword ptr [rsp  +  [ displacement ] ] ]
[ mov r8, r15 ]
[ mov rdx, r14 ]
[ mov rsi, rbx ]
[ push rdi ]
[ push qword ptr [rsp  +  [ displacement ] ] ]
[ mov edi, dword ptr [rsp  +  [ displacement ] ] ]
[ push rdi ]
[ mov rdi, r13 ]
[ push qword ptr [rsp  +  [ displacement ] ] ]
[ push rax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac66a9a3
#root size: 10
===============================================================
[ push r15 ]
[ push r14 ]
[ mov r14, rsi ]
[ push r13 ]
[ push r12 ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov r12d, dword ptr [r9  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdi ]
[ mov rbp, qword ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdx ]
[ mov r15, qword ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rcx ]
[ mov qword ptr [rsp  +  [ displacement ] ], r8 ]
[ shr rsi,  [ argument ]  ]
[ mov r11, r12 ]
[ mov qword ptr [rsp  +  [ displacement ] ], r14 ]
[ mov r12, r15 ]
[ mov eax, dword ptr [rsp  +  [ displacement ] ] ]
[ mov r13, qword ptr [r9] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rsi ]
[ and eax,  [ argument ]  ]
[ mov dword ptr [rsp  +  [ displacement ] ], eax ]
[ mov r15d, eax ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [r13 + rbp * 8] ]
[ mov rbx, qword ptr [rax  +  [ displacement ] ] ]
[ cmp rbx, r12 ]
[ jz  [ addr ]  ]
[ test r15d, r15d ]
[ jz  [ addr ]  ]
[ test byte ptr [rbx  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ test byte ptr [rbx  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ test byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [rbx  +  [ displacement ] ] ]
[ mov rcx, qword ptr [rbx  +  [ displacement ] ] ]
[ cmp byte ptr [rdx],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov esi, dword ptr [rbx  +  [ displacement ] ] ]
[ test esi, esi ]
[ jz  [ addr ]  ]
[ mov dword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rbx  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ mov rax, qword ptr [rbx  +  [ displacement ] ] ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ mov qword ptr [rsp], rax ]
[ mov rax, qword ptr [rbx  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rdi, qword ptr [rsp  +  [ displacement ] ] ]
[ mov ecx, dword ptr [rbx  +  [ displacement ] ] ]
[ mov edx, dword ptr [rsp  +  [ displacement ] ] ]
[ and edx, dword ptr [rbx  +  [ displacement ] ] ]
[ mov rax, qword ptr [rax + rdx * 8] ]
[ mov rdx, rdi ]
[ shr rdx, cl ]
[ mov rcx, rdx ]
[ mov rdx, rax ]
[ shr rdx, cl ]
[ mov ecx, edi ]
[ shr rax, cl ]
[ and rax, rdx ]
[ test al,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, rdi ]
[ xor edx, edx ]
[ div rsi ]
[ mov rax, qword ptr [rbx  +  [ displacement ] ] ]
[ mov eax, dword ptr [rax + rdx * 4] ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [rbx  +  [ displacement ] ] ]
[ mov dword ptr [rsp  +  [ displacement ] ], r15d ]
[ mov qword ptr [rsp  +  [ displacement ] ], r13 ]
[ mov r15d, dword ptr [rsp  +  [ displacement ] ] ]
[ lea r14, ptr [rdx + rax * 4] ]
[ lea rax, ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], r11 ]
[ mov r13, qword ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rbp ]
[ mov rbp, rdi ]
[ mov qword ptr [rsp  +  [ displacement ] ], r12 ]
[ mov r12, qword ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ jmp  [ addr ]  ]
[ mov eax, dword ptr [r14] ]
[ mov rdx, rax ]
[ xor rax, rbp ]
[ shr rax,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ sub rsp,  [ argument ]  ]
[ mov rax, r14 ]
[ sub rax, qword ptr [rbx  +  [ displacement ] ] ]
[ mov rsi, r12 ]
[ push qword ptr [rsp  +  [ displacement ] ] ]
[ sar rax,  [ argument ]  ]
[ mov edx, eax ]
[ lea rdx, ptr [rdx + rdx * 2] ]
[ lea rcx, ptr [rsp  +  [ displacement ] ] ]
[ push rcx ]
[ mov ecx, r15d ]
[ push rbx ]
[ push qword ptr [rsp  +  [ displacement ] ] ]
[ push rax ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ mov r8d, dword ptr [rsp  +  [ displacement ] ] ]
[ mov rdi, qword ptr [rsp  +  [ displacement ] ] ]
[ lea r9, ptr [rax + rdx * 8] ]
[ mov rdx, r13 ]
[ call  [ addr.func ]  ]
[ add r14,  [ argument ]  ]
[ and edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [r14] ]
[ mov rdx, rax ]
[ xor rax, rbp ]
[ shr rax,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ sub rsp,  [ argument ]  ]
[ mov rax, r14 ]
[ sub rax, qword ptr [rbx  +  [ displacement ] ] ]
[ mov rsi, r12 ]
[ push qword ptr [rsp  +  [ displacement ] ] ]
[ sar rax,  [ argument ]  ]
[ mov edx, eax ]
[ lea rdx, ptr [rdx + rdx * 2] ]
[ lea rcx, ptr [rsp  +  [ displacement ] ] ]
[ push rcx ]
[ mov ecx, r15d ]
[ push rbx ]
[ push qword ptr [rsp  +  [ displacement ] ] ]
[ push rax ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ mov r8d, dword ptr [rsp  +  [ displacement ] ] ]
[ mov rdi, qword ptr [rsp  +  [ displacement ] ] ]
[ lea r9, ptr [rax + rdx * 8] ]
[ mov rdx, r13 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 11
===============================================================
[ push r14 ]
[ mov r10, rdi ]
[ push r13 ]
[ mov r13, rdx ]
[ movzx edx, word ptr [r9  +  [ displacement ] ] ]
[ push r12 ]
[ push rbp ]
[ mov ebp, ecx ]
[ movzx ecx, byte ptr [r9  +  [ displacement ] ] ]
[ push rbx ]
[ mov rbx, r9 ]
[ mov r12, qword ptr [rsp  +  [ displacement ] ] ]
[ and ecx,  [ argument ]  ]
[ cmp qword ptr [r9  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov eax,  [ argument ]  ]
[ sar eax, cl ]
[ not eax ]
[ and eax,  [ argument ]  ]
[ test dx, dx ]
[ setz dl ]
[ movzx edx, dl ]
[ and r8d, edx ]
[ or eax, r8d ]
[ jnz  [ addr ]  ]
[ cmp rbx, rsi ]
[ jz  [ addr ]  ]
[ mov edi, dword ptr [rbx] ]
[ mov rsi, r10 ]
[ add rdi, qword ptr [rsp  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 12
===============================================================
[ and rsi,  [ addr ]  ]
[ and rdi,  [ addr ]  ]
[ mov edx,  [ argument ]  ]
[ xor r8d, r8d ]
[ and ecx,  [ argument ]  ]
[ and eax,  [ argument ]  ]
[ cmp ecx, eax ]
[ jz  [ addr ]  ]
[ jnbe  [ addr ]  ]
[ mov r8d, edx ]
[ xchg ecx, eax ]
[ xchg rdi, rsi ]
[ lea r9, ptr [rax  +  [ displacement ] ] ]
[ sub r9, rcx ]
[ lea r10, ptr [rip  +  [ displacement ] ] ]
[ movsxd r9, dword ptr [r10 + r9 * 4] ]
[ lea r10, ptr [r10 + r9 * 1] ]
[ jmp r10 ]
[ lea r9, ptr [rax  +  [ displacement ] ] ]
[ sub r9, rcx ]
[ lea r10, ptr [rip  +  [ displacement ] ] ]
[ movsxd r9, dword ptr [r10 + r9 * 4] ]
[ lea r10, ptr [r10 + r9 * 1] ]
[ jmp r10 ]
[ pxor xmm0, xmm0 ]
[ movdqa xmm2, xmmword ptr [rdi] ]
[ movdqa xmm1, xmmword ptr [rsi] ]
[ pcmpeqb xmm0, xmm1 ]
[ pslldq xmm2,  [ argument ]  ]
[ pcmpeqb xmm2, xmm1 ]
[ psubb xmm2, xmm0 ]
[ pmovmskb r9d, xmm2 ]
[ shr edx, cl ]
[ shr r9d, cl ]
[ sub edx, r9d ]
[ jnz  [ addr ]  ]
[ movdqa xmm3, xmmword ptr [rdi] ]
[ pxor xmm0, xmm0 ]
[ mov rcx,  [ argument ]  ]
[ mov r9d,  [ argument ]  ]
[ lea r10, ptr [rdi  +  [ displacement ] ] ]
[ and r10,  [ argument ]  ]
[ sub r10,  [ argument ]  ]
[ nop word ptr [rax + rax * 1], ax ]
[ add r10,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ movdqa xmm1, xmmword ptr [rsi + rcx * 1] ]
[ movdqa xmm2, xmmword ptr [rdi + rcx * 1] ]
[ movdqa xmm4, xmm2 ]
[ psrldq xmm3,  [ argument ]  ]
[ pslldq xmm2,  [ argument ]  ]
[ por xmm2, xmm3 ]
[ pcmpeqb xmm0, xmm1 ]
[ pcmpeqb xmm1, xmm2 ]
[ psubb xmm1, xmm0 ]
[ pmovmskb edx, xmm1 ]
[ sub edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ add rcx,  [ argument ]  ]
[ movdqa xmm3, xmm4 ]
[ add r10,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ movdqa xmm1, xmmword ptr [rsi + rcx * 1] ]
[ movdqa xmm2, xmmword ptr [rdi + rcx * 1] ]
[ movdqa xmm4, xmm2 ]
[ psrldq xmm3,  [ argument ]  ]
[ pslldq xmm2,  [ argument ]  ]
[ por xmm2, xmm3 ]
[ pcmpeqb xmm0, xmm1 ]
[ pcmpeqb xmm1, xmm2 ]
[ psubb xmm1, xmm0 ]
[ pmovmskb edx, xmm1 ]
[ sub edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ add rcx,  [ argument ]  ]
[ movdqa xmm3, xmm4 ]
[ jmp  [ addr ]  ]
[ lea rax, ptr [r9 + rcx * 1- [ displacement ] ] ]
[ lea rdi, ptr [rdi + rax * 1] ]
[ lea rsi, ptr [rsi + rcx * 1] ]
[ test r8d, r8d ]
[ jz  [ addr ]  ]
[ xchg rdi, rsi ]
[ nop word ptr [rax + rax * 1], ax ]
[ bsf rdx, rdx ]
[ movzx ecx, byte ptr [rsi + rdx * 1] ]
[ movzx eax, byte ptr [rdi + rdx * 1] ]
[ sub eax, ecx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ test r13, r13 ]
[ jz  [ addr ]  ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rdi, qword ptr [r13  +  [ displacement ] ] ]
[ test rdi, rdi ]
[ jz  [ addr ]  ]
[ mov rsi, r12 ]
[ call  [ addr.func ]  ]
[ mov rax, rbx ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ ret  ]
[ add rsp,  [ argument ]  ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ mov edx, dword ptr [r14] ]
[ jmp  [ addr ]  ]
[ mov r15d, dword ptr [rsp  +  [ displacement ] ] ]
[ mov r13, qword ptr [rsp  +  [ displacement ] ] ]
[ mov r8, rax ]
[ mov rbp, qword ptr [rsp  +  [ displacement ] ] ]
[ mov r12, qword ptr [rsp  +  [ displacement ] ] ]
[ mov r11, qword ptr [rsp  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ cmp qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ movzx eax, byte ptr [r8  +  [ displacement ] ] ]
[ and eax,  [ argument ]  ]
[ sub eax,  [ argument ]  ]
[ cmp eax,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ movzx eax, byte ptr [r8  +  [ displacement ] ] ]
[ shr al,  [ argument ]  ]
[ cmp al,  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp al,  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp al,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ movq xmm0, r8 ]
[ movq xmm1, rbx ]
[ punpcklqdq xmm0, xmm1 ]
[ movaps xmmword ptr [rax], xmm0 ]
[ mov eax,  [ argument ]  ]
[ jmp  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ add rsp,  [ argument ]  ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ mov rcx, qword ptr [r12] ]
[ cmp qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ test rcx, rcx ]
[ jz  [ addr ]  ]
[ movzx eax, byte ptr [rcx  +  [ displacement ] ] ]
[ and eax,  [ argument ]  ]
[ cmp al,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov r14, qword ptr [rsp  +  [ displacement ] ] ]
[ xor ebx, ebx ]
[ movzx eax, byte ptr [r14  +  [ displacement ] ] ]
[ and eax,  [ argument ]  ]
[ cmp al,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov ecx, dword ptr [r14  +  [ displacement ] ] ]
[ test ecx, ecx ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ test eax,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [r12], rax ]
[ add rsp,  [ argument ]  ]
[ mov rax, r14 ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ mov rdx, qword ptr [rbp- [ displacement ] ] ]
[ pop rcx ]
[ pop rsi ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ cmp word ptr [rdx  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rax] ]
[ mov rsi, qword ptr [rip  +  [ displacement ] ] ]
[ add rax, qword ptr [rdx  +  [ displacement ] ] ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ test rsi, rsi ]
[ jz  [ addr ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov rdx, r12 ]
[ xor r9d, r9d ]
[ mov r8, rbx ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ pxor xmm0, xmm0 ]
[ mov rax,  [ addr ]  ]
[ lea rcx, ptr [rsi  +  [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ movaps xmmword ptr [rbp- [ displacement ] ], xmm0 ]
[ mov qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov byte ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ push  [ argument ]  ]
[ push  [ argument ]  ]
[ call qword ptr [rip  +  [ displacement ] ] ]
CALL===========================================================
#now call addr: 7f5eac66aa5d
#call parent addr: 7f5eac672885
#root size: 12
===============================================================
[ nop edx, edi ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ mov r13, rdi ]
[ push r12 ]
[ mov r12, rdx ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ movzx edx, byte ptr [rdi] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rsi ]
[ mov qword ptr [rsp  +  [ displacement ] ], rcx ]
[ mov qword ptr [rsp  +  [ displacement ] ], r8 ]
[ mov dword ptr [rsp  +  [ displacement ] ], r9d ]
[ test dl, dl ]
[ jz  [ addr ]  ]
[ mov rcx, rdi ]
[ mov eax,  [ argument ]  ]
[ nop word ptr [rax + rax * 1], ax ]
[ mov rsi, rax ]
[ add rcx,  [ argument ]  ]
[ shl rsi,  [ argument ]  ]
[ add rax, rsi ]
[ add rax, rdx ]
[ movzx edx, byte ptr [rcx] ]
[ test dl, dl ]
[ jnz  [ addr ]  ]
[ mov ebx, eax ]
[ add qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov eax,  [ addr ]  ]
[ pxor xmm0, xmm0 ]
[ cmp qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ movaps xmmword ptr [rsp  +  [ displacement ] ], xmm0 ]
[ jz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac66aa5d
#root size: 13
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 14
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 15
===============================================================
[ add rsi,  [ argument ]  ]
[ add rdi,  [ argument ]  ]
[ nop word ptr [rax + rax * 1], ax ]
[ nop ]
[ and rsi,  [ addr ]  ]
[ and rdi,  [ addr ]  ]
[ mov edx,  [ argument ]  ]
[ xor r8d, r8d ]
[ and ecx,  [ argument ]  ]
[ and eax,  [ argument ]  ]
[ cmp ecx, eax ]
[ jz  [ addr ]  ]
[ jnbe  [ addr ]  ]
[ mov r8d, edx ]
[ xchg ecx, eax ]
[ xchg rdi, rsi ]
[ lea r9, ptr [rax  +  [ displacement ] ] ]
[ sub r9, rcx ]
[ lea r10, ptr [rip  +  [ displacement ] ] ]
[ movsxd r9, dword ptr [r10 + r9 * 4] ]
[ lea r10, ptr [r10 + r9 * 1] ]
[ jmp r10 ]
[ pxor xmm0, xmm0 ]
[ movdqa xmm2, xmmword ptr [rdi] ]
[ movdqa xmm1, xmmword ptr [rsi] ]
[ pcmpeqb xmm0, xmm1 ]
[ pslldq xmm2,  [ argument ]  ]
[ pcmpeqb xmm2, xmm1 ]
[ psubb xmm2, xmm0 ]
[ pmovmskb r9d, xmm2 ]
[ shr edx, cl ]
[ shr r9d, cl ]
[ sub edx, r9d ]
[ jnz  [ addr ]  ]
[ movdqa xmm3, xmmword ptr [rdi] ]
[ pxor xmm0, xmm0 ]
[ mov rcx,  [ argument ]  ]
[ mov r9d,  [ argument ]  ]
[ lea r10, ptr [rdi  +  [ displacement ] ] ]
[ and r10,  [ argument ]  ]
[ sub r10,  [ argument ]  ]
[ nop word ptr [rax + rax * 1], ax ]
[ add r10,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ movdqa xmm1, xmmword ptr [rsi + rcx * 1] ]
[ movdqa xmm2, xmmword ptr [rdi + rcx * 1] ]
[ movdqa xmm4, xmm2 ]
[ psrldq xmm3,  [ argument ]  ]
[ pslldq xmm2,  [ argument ]  ]
[ por xmm2, xmm3 ]
[ pcmpeqb xmm0, xmm1 ]
[ pcmpeqb xmm1, xmm2 ]
[ psubb xmm1, xmm0 ]
[ pmovmskb edx, xmm1 ]
[ sub edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ lea rdi, ptr [rdi + rax * 1] ]
[ lea rsi, ptr [rsi + rcx * 1] ]
[ test r8d, r8d ]
[ jz  [ addr ]  ]
[ xchg rdi, rsi ]
[ nop word ptr [rax + rax * 1], ax ]
[ bsf rdx, rdx ]
[ movzx ecx, byte ptr [rsi + rdx * 1] ]
[ movzx eax, byte ptr [rdi + rdx * 1] ]
[ sub eax, ecx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ test r13, r13 ]
[ jz  [ addr ]  ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [rbp- [ displacement ] ] ]
[ pop r11 ]
[ pop r13 ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ cmp word ptr [rdx  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rax] ]
[ mov rsi, qword ptr [rip  +  [ displacement ] ] ]
[ add rax, qword ptr [rdx  +  [ displacement ] ] ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ test rsi, rsi ]
[ jz  [ addr ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ xor r9d, r9d ]
[ mov rdx, r12 ]
[ mov r8, rbx ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ pxor xmm0, xmm0 ]
[ mov rax,  [ addr ]  ]
[ lea rcx, ptr [rsi  +  [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ movaps xmmword ptr [rbp- [ displacement ] ], xmm0 ]
[ mov qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov byte ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ push  [ argument ]  ]
[ push  [ argument ]  ]
[ call qword ptr [rip  +  [ displacement ] ] ]
CALL===========================================================
#now call addr: 7f5eac66ab19
#call parent addr: 7f5eac672885
#root size: 15
===============================================================
[ nop edx, edi ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ mov r13, rdi ]
[ push r12 ]
[ mov r12, rdx ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ movzx edx, byte ptr [rdi] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rsi ]
[ mov qword ptr [rsp  +  [ displacement ] ], rcx ]
[ mov qword ptr [rsp  +  [ displacement ] ], r8 ]
[ mov dword ptr [rsp  +  [ displacement ] ], r9d ]
[ test dl, dl ]
[ jz  [ addr ]  ]
[ mov rcx, rdi ]
[ mov eax,  [ argument ]  ]
[ nop word ptr [rax + rax * 1], ax ]
[ mov rsi, rax ]
[ add rcx,  [ argument ]  ]
[ shl rsi,  [ argument ]  ]
[ add rax, rsi ]
[ add rax, rdx ]
[ movzx edx, byte ptr [rcx] ]
[ test dl, dl ]
[ jnz  [ addr ]  ]
[ mov ebx, eax ]
[ add qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov eax,  [ addr ]  ]
[ pxor xmm0, xmm0 ]
[ cmp qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ movaps xmmword ptr [rsp  +  [ displacement ] ], xmm0 ]
[ jz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac66ab19
#root size: 16
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 17
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 18
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov rdx, qword ptr [rbp- [ displacement ] ] ]
[ pop r9 ]
[ pop r10 ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ cmp word ptr [rdx  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rax] ]
[ mov rsi, qword ptr [rip  +  [ displacement ] ] ]
[ add rax, qword ptr [rdx  +  [ displacement ] ] ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ test rsi, rsi ]
[ jz  [ addr ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov r8, rbx ]
[ mov rdx, r12 ]
[ xor r9d, r9d ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ pxor xmm0, xmm0 ]
[ mov rax,  [ addr ]  ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ lea rcx, ptr [rsi  +  [ displacement ] ] ]
[ movaps xmmword ptr [rbp- [ displacement ] ], xmm0 ]
[ mov qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov byte ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ push  [ argument ]  ]
[ push  [ argument ]  ]
[ call qword ptr [rip  +  [ displacement ] ] ]
CALL===========================================================
#now call addr: 7f5eac66abd5
#call parent addr: 7f5eac672885
#root size: 18
===============================================================
[ nop edx, edi ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ mov r13, rdi ]
[ push r12 ]
[ mov r12, rdx ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ movzx edx, byte ptr [rdi] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rsi ]
[ mov qword ptr [rsp  +  [ displacement ] ], rcx ]
[ mov qword ptr [rsp  +  [ displacement ] ], r8 ]
[ mov dword ptr [rsp  +  [ displacement ] ], r9d ]
[ test dl, dl ]
[ jz  [ addr ]  ]
[ mov rcx, rdi ]
[ mov eax,  [ argument ]  ]
[ nop word ptr [rax + rax * 1], ax ]
[ mov rsi, rax ]
[ add rcx,  [ argument ]  ]
[ shl rsi,  [ argument ]  ]
[ add rax, rsi ]
[ add rax, rdx ]
[ movzx edx, byte ptr [rcx] ]
[ test dl, dl ]
[ jnz  [ addr ]  ]
[ mov ebx, eax ]
[ add qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov eax,  [ addr ]  ]
[ pxor xmm0, xmm0 ]
[ cmp qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ movaps xmmword ptr [rsp  +  [ displacement ] ], xmm0 ]
[ jz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac66abd5
#root size: 19
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 20
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 21
===============================================================
[ pxor xmm0, xmm0 ]
[ movdqa xmm2, xmmword ptr [rdi] ]
[ movdqa xmm1, xmmword ptr [rsi] ]
[ pcmpeqb xmm0, xmm1 ]
[ pslldq xmm2,  [ argument ]  ]
[ pcmpeqb xmm2, xmm1 ]
[ psubb xmm2, xmm0 ]
[ pmovmskb r9d, xmm2 ]
[ shr edx, cl ]
[ shr r9d, cl ]
[ sub edx, r9d ]
[ jnz  [ addr ]  ]
[ movdqa xmm3, xmmword ptr [rdi] ]
[ pxor xmm0, xmm0 ]
[ mov rcx,  [ argument ]  ]
[ mov r9d,  [ argument ]  ]
[ lea r10, ptr [rdi  +  [ displacement ] ] ]
[ and r10,  [ argument ]  ]
[ sub r10,  [ argument ]  ]
[ nop word ptr [rax + rax * 1], ax ]
[ add r10,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ movdqa xmm1, xmmword ptr [rsi + rcx * 1] ]
[ movdqa xmm2, xmmword ptr [rdi + rcx * 1] ]
[ movdqa xmm4, xmm2 ]
[ psrldq xmm3,  [ argument ]  ]
[ pslldq xmm2,  [ argument ]  ]
[ por xmm2, xmm3 ]
[ pcmpeqb xmm0, xmm1 ]
[ pcmpeqb xmm1, xmm2 ]
[ psubb xmm1, xmm0 ]
[ pmovmskb edx, xmm1 ]
[ sub edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov rdx, qword ptr [rbp- [ displacement ] ] ]
[ pop rdi ]
[ pop r8 ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ cmp word ptr [rdx  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rax] ]
[ mov rsi, qword ptr [rip  +  [ displacement ] ] ]
[ add rax, qword ptr [rdx  +  [ displacement ] ] ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ test rsi, rsi ]
[ jz  [ addr ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov rdx, r12 ]
[ xor r9d, r9d ]
[ mov r8, rbx ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ pxor xmm0, xmm0 ]
[ mov rax,  [ addr ]  ]
[ lea rcx, ptr [rsi  +  [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ movaps xmmword ptr [rbp- [ displacement ] ], xmm0 ]
[ mov qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov byte ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ push  [ argument ]  ]
[ push  [ argument ]  ]
[ call qword ptr [rip  +  [ displacement ] ] ]
CALL===========================================================
#now call addr: 7f5eac66ac90
#call parent addr: 7f5eac672885
#root size: 21
===============================================================
[ nop edx, edi ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ mov r13, rdi ]
[ push r12 ]
[ mov r12, rdx ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ movzx edx, byte ptr [rdi] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rsi ]
[ mov qword ptr [rsp  +  [ displacement ] ], rcx ]
[ mov qword ptr [rsp  +  [ displacement ] ], r8 ]
[ mov dword ptr [rsp  +  [ displacement ] ], r9d ]
[ test dl, dl ]
[ jz  [ addr ]  ]
[ mov rcx, rdi ]
[ mov eax,  [ argument ]  ]
[ nop word ptr [rax + rax * 1], ax ]
[ mov rsi, rax ]
[ add rcx,  [ argument ]  ]
[ shl rsi,  [ argument ]  ]
[ add rax, rsi ]
[ add rax, rdx ]
[ movzx edx, byte ptr [rcx] ]
[ test dl, dl ]
[ jnz  [ addr ]  ]
[ mov ebx, eax ]
[ add qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov eax,  [ addr ]  ]
[ pxor xmm0, xmm0 ]
[ cmp qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ movaps xmmword ptr [rsp  +  [ displacement ] ], xmm0 ]
[ jz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac66ac90
#root size: 22
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 23
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 24
===============================================================
[ pxor xmm0, xmm0 ]
[ movdqa xmm2, xmmword ptr [rdi] ]
[ movdqa xmm1, xmmword ptr [rsi] ]
[ pcmpeqb xmm0, xmm1 ]
[ pslldq xmm2,  [ argument ]  ]
[ pcmpeqb xmm2, xmm1 ]
[ psubb xmm2, xmm0 ]
[ pmovmskb r9d, xmm2 ]
[ shr edx, cl ]
[ shr r9d, cl ]
[ sub edx, r9d ]
[ jnz  [ addr ]  ]
[ movdqa xmm3, xmmword ptr [rdi] ]
[ pxor xmm0, xmm0 ]
[ mov rcx,  [ argument ]  ]
[ mov r9d,  [ argument ]  ]
[ lea r10, ptr [rdi  +  [ displacement ] ] ]
[ and r10,  [ argument ]  ]
[ sub r10,  [ argument ]  ]
[ nop word ptr [rax + rax * 1], ax ]
[ add r10,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ movdqa xmm1, xmmword ptr [rsi + rcx * 1] ]
[ movdqa xmm2, xmmword ptr [rdi + rcx * 1] ]
[ movdqa xmm4, xmm2 ]
[ psrldq xmm3,  [ argument ]  ]
[ pslldq xmm2,  [ argument ]  ]
[ por xmm2, xmm3 ]
[ pcmpeqb xmm0, xmm1 ]
[ pcmpeqb xmm1, xmm2 ]
[ psubb xmm1, xmm0 ]
[ pmovmskb edx, xmm1 ]
[ sub edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ add rcx,  [ argument ]  ]
[ movdqa xmm3, xmm4 ]
[ add r10,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ movdqa xmm1, xmmword ptr [rsi + rcx * 1] ]
[ movdqa xmm2, xmmword ptr [rdi + rcx * 1] ]
[ movdqa xmm4, xmm2 ]
[ psrldq xmm3,  [ argument ]  ]
[ pslldq xmm2,  [ argument ]  ]
[ por xmm2, xmm3 ]
[ pcmpeqb xmm0, xmm1 ]
[ pcmpeqb xmm1, xmm2 ]
[ psubb xmm1, xmm0 ]
[ pmovmskb edx, xmm1 ]
[ sub edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ add rcx,  [ argument ]  ]
[ movdqa xmm3, xmm4 ]
[ jmp  [ addr ]  ]
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov rdx, qword ptr [rbp- [ displacement ] ] ]
[ pop rcx ]
[ pop rsi ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ cmp word ptr [rdx  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rax] ]
[ add rax, qword ptr [rdx  +  [ displacement ] ] ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ lea rbx, ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66acd1
#call parent addr: 7f5eac672885
#root size: 24
===============================================================
[ nop edx, edi ]
[ push r12 ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov rbx, qword ptr [rip  +  [ displacement ] ] ]
[ test rbx, rbx ]
[ jz  [ addr ]  ]
[ movzx r11d, word ptr [rbx  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rbx  +  [ displacement ] ] ]
[ test r11, r11 ]
[ jz  [ addr ]  ]
[ xor edi, edi ]
[ mov ebp,  [ argument ]  ]
[ jmp  [ addr ]  ]
[ cmp dword ptr [rsi],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov r8, qword ptr [rsi  +  [ displacement ] ] ]
[ mov rax, qword ptr [rbx] ]
[ add rax, qword ptr [rsi  +  [ displacement ] ] ]
[ cmp r8,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ mov r10, rbp ]
[ lea r9, ptr [rip  +  [ displacement ] ] ]
[ sub r10, rax ]
[ jmp  [ addr ]  ]
[ add rdi,  [ argument ]  ]
[ add rsi,  [ argument ]  ]
[ cmp rdi, r11 ]
[ jz  [ addr ]  ]
[ cmp dword ptr [rsi],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov r8, qword ptr [rsi  +  [ displacement ] ] ]
[ mov rax, qword ptr [rbx] ]
[ add rax, qword ptr [rsi  +  [ displacement ] ] ]
[ cmp r8,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ mov r10, rbp ]
[ lea r9, ptr [rip  +  [ displacement ] ] ]
[ sub r10, rax ]
[ jmp  [ addr ]  ]
[ mov rdx, qword ptr [rax] ]
[ mov rcx, qword ptr [rax  +  [ displacement ] ] ]
[ xor rdx, qword ptr [r9] ]
[ xor rcx, qword ptr [rip  +  [ displacement ] ] ]
[ or rcx, rdx ]
[ jnz  [ addr ]  ]
[ mov ecx, dword ptr [rip  +  [ displacement ] ] ]
[ cmp dword ptr [rax  +  [ displacement ] ], ecx ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rax  +  [ displacement ] ] ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ ret  ]
RET========================================================
#ret target: 7f5eac66acd1
#function name: __get_cpu_features
#func_id: 31
===========================================================
[ test eax, eax ]
[ js  [ addr ]  ]
[ mov edx, dword ptr [rip  +  [ displacement ] ] ]
[ test edx, edx ]
[ jnz  [ addr ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ cmp eax,  [ addr ]  ]
[ jnle  [ addr ]  ]
[ mov rdi, qword ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66ae69
#call parent addr: 7f5eac672885
#root size: 24
===============================================================
[ nop edx, edi ]
[ push rbp ]
[ lea rcx, ptr [rip  +  [ displacement ] ] ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ mov rbp, rsp ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov qword ptr [rbp- [ displacement ] ], rdi ]
[ mov rsi, qword ptr [rip  +  [ displacement ] ] ]
[ mov rdi, qword ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac671085
#call parent addr: 7f5eac66ae69
#root size: 25
===============================================================
[ nop edx, edi ]
[ push rbp ]
[ mov rbp, rsp ]
[ push r15 ]
[ mov r15, rdi ]
[ push r14 ]
[ lea rax, ptr [rbp- [ displacement ] ] ]
[ push r13 ]
[ push r12 ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov qword ptr [rbp- [ displacement ] ], rdi ]
[ mov edi,  [ argument ]  ]
[ mov qword ptr [rbp- [ displacement ] ], rsi ]
[ mov rsi, rax ]
[ mov qword ptr [rbp- [ displacement ] ], rdx ]
[ xor edx, edx ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov qword ptr [rbp- [ displacement ] ], rcx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac6777ad
#call parent addr: 7f5eac671085
#root size: 26
===============================================================
RET========================================================
#ret target: 7f5eac6777ad
#function name: __tunable_get_val
#func_id: 29
===========================================================
[ mov rbx, qword ptr [rbp- [ displacement ] ] ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ xor edx, edx ]
[ test r15, r15 ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ setnz dl ]
[ and rax, rbx ]
[ mov qword ptr [rbp- [ displacement ] ], rbx ]
[ mov r8, rax ]
[ jz  [ addr ]  ]
[ xor ecx, ecx ]
[ mov esi,  [ argument ]  ]
[ bt r8, rcx ]
[ lea r12, ptr [rdx  +  [ displacement ] ] ]
[ jnb  [ addr ]  ]
[ lea rax, ptr [rdx  +  [ displacement ] ] ]
[ mov rdx, r12 ]
[ mov r12, rax ]
[ add rcx,  [ argument ]  ]
[ mov rax, rsi ]
[ shl rax, cl ]
[ neg rax ]
[ test rax, r8 ]
[ jnz  [ addr ]  ]
[ add rcx,  [ argument ]  ]
[ mov rax, rsi ]
[ shl rax, cl ]
[ neg rax ]
[ test rax, r8 ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ movzx r15d, word ptr [rax  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rax  +  [ displacement ] ] ]
[ test r15, r15 ]
[ jz  [ addr ]  ]
[ bt r8, rcx ]
[ lea r12, ptr [rdx  +  [ displacement ] ] ]
[ jnb  [ addr ]  ]
[ lea rax, ptr [rdx  +  [ displacement ] ] ]
[ mov rdx, r12 ]
[ mov r12, rax ]
[ add rcx,  [ argument ]  ]
[ mov rax, rsi ]
[ shl rax, cl ]
[ neg rax ]
[ test rax, r8 ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ movzx r15d, word ptr [rax  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rax  +  [ displacement ] ] ]
[ test r15, r15 ]
[ jz  [ addr ]  ]
[ mov qword ptr [rbp- [ displacement ] ], r8 ]
[ xor ebx, ebx ]
[ mov r8, rax ]
[ jmp  [ addr ]  ]
[ cmp dword ptr [rsi],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov r14, qword ptr [rsi  +  [ displacement ] ] ]
[ cmp r14,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ lea rax, ptr [r14- [ displacement ] ] ]
[ test rax,  [ addr ]  ]
[ jnz  [ addr ]  ]
[ add rbx,  [ argument ]  ]
[ add rsi,  [ argument ]  ]
[ cmp r15, rbx ]
[ jz  [ addr ]  ]
[ cmp dword ptr [rsi],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov r14, qword ptr [rsi  +  [ displacement ] ] ]
[ cmp r14,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ lea rax, ptr [r14- [ displacement ] ] ]
[ test rax,  [ addr ]  ]
[ jnz  [ addr ]  ]
[ mov rdi, qword ptr [rsi  +  [ displacement ] ] ]
[ mov rdx, qword ptr [r8] ]
[ add rdx, qword ptr [rsi  +  [ displacement ] ] ]
[ cmp rdi,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ mov rcx, r14 ]
[ mov r9d,  [ argument ]  ]
[ lea r11, ptr [r14  +  [ displacement ] ] ]
[ neg rcx ]
[ lea r10, ptr [r14- [ displacement ] ] ]
[ sub r9, rdx ]
[ jmp  [ addr ]  ]
[ cmp dword ptr [rdx  +  [ displacement ] ],  [ argument ]  ]
[ mov eax, dword ptr [rdx] ]
[ mov r13d, dword ptr [rdx  +  [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ cmp eax,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp dword ptr [rdx  +  [ displacement ] ],  [ addr ]  ]
[ jnz  [ addr ]  ]
[ add rax, r11 ]
[ add r13, r10 ]
[ and rax, rcx ]
[ add rax, r13 ]
[ and rax, rcx ]
[ add rdx, rax ]
[ lea rax, ptr [rdx + r9 * 1] ]
[ cmp rax, rdi ]
[ jnb  [ addr ]  ]
[ cmp dword ptr [rdx  +  [ displacement ] ],  [ argument ]  ]
[ mov eax, dword ptr [rdx] ]
[ mov r13d, dword ptr [rdx  +  [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ cmp eax,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov r8, qword ptr [rbp- [ displacement ] ] ]
[ mov rax, r12 ]
[ mov rbx, rsp ]
[ shl rax,  [ argument ]  ]
[ add rax,  [ argument ]  ]
[ mov rdx, rax ]
[ and rdx,  [ addr ]  ]
[ sub rbx, rdx ]
[ mov rdx, rbx ]
[ cmp rsp, rdx ]
[ jz  [ addr ]  ]
[ sub rsp,  [ argument ]  ]
[ or qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ cmp rsp, rdx ]
[ jnz  [ addr ]  ]
[ and eax,  [ argument ]  ]
[ sub rsp, rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ and eax,  [ argument ]  ]
[ sub rsp, rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ or qword ptr [rsp + rax * 1- [ displacement ] ],  [ argument ]  ]
[ lea rax, ptr [rsp  +  [ displacement ] ] ]
[ mov ecx,  [ argument ]  ]
[ xor r13d, r13d ]
[ and rax,  [ addr ]  ]
[ mov rbx, rax ]
[ test r8, r8 ]
[ jz  [ addr ]  ]
[ lea r14, ptr [r13  +  [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], r12 ]
[ mov rdx, rbx ]
[ xor r15d, r15d ]
[ mov rax, r14 ]
[ mov rbx, r13 ]
[ mov r14, r8 ]
[ mov r8, rax ]
[ nop dword ptr [rax], eax ]
[ mov r13, rbx ]
[ shl r13,  [ argument ]  ]
[ bt r14, r15 ]
[ lea r12, ptr [rdx + r13 * 1] ]
[ jnb  [ addr ]  ]
[ add r15,  [ argument ]  ]
[ jmp  [ addr ]  ]
[ mov r13, rbx ]
[ shl r13,  [ argument ]  ]
[ bt r14, r15 ]
[ lea r12, ptr [rdx + r13 * 1] ]
[ jnb  [ addr ]  ]
[ movsxd rax, r15d ]
[ mov qword ptr [rbp- [ displacement ] ], r8 ]
[ lea rdi, ptr [rax + rax * 8 + [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rdx ]
[ add rdi, rax ]
[ mov qword ptr [r12], rdi ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac677ed6
#call parent addr: 7f5eac671085
#root size: 26
===============================================================
RET========================================================
#ret target: 7f5eac677ed6
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov ecx, r15d ]
[ mov esi,  [ argument ]  ]
[ mov rdi, r14 ]
[ shl rsi, cl ]
[ mov rdx, qword ptr [rbp- [ displacement ] ] ]
[ add r15,  [ argument ]  ]
[ mov qword ptr [r12  +  [ displacement ] ], rax ]
[ xor rdi, rsi ]
[ cmp r14, rsi ]
[ mov r8, qword ptr [rbp- [ displacement ] ] ]
[ lea rcx, ptr [rbx  +  [ displacement ] ] ]
[ lea rax, ptr [rdx + r13 * 1 + [ displacement ] ] ]
[ jz  [ addr ]  ]
[ mov rbx, r8 ]
[ mov r14, rdi ]
[ add r8,  [ argument ]  ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac677ed6
#call parent addr: 7f5eac671085
#root size: 26
===============================================================
RET========================================================
#ret target: 7f5eac677ed6
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov r12, qword ptr [rbp- [ displacement ] ] ]
[ mov rbx, rdx ]
[ jmp  [ addr ]  ]
[ mov rsi, qword ptr [rbp- [ displacement ] ] ]
[ test rsi, rsi ]
[ jz  [ addr ]  ]
[ mov qword ptr [rax], rsi ]
[ mov rsi, qword ptr [rbp- [ displacement ] ] ]
[ mov qword ptr [rax  +  [ displacement ] ], rsi ]
[ mov rax, rcx ]
[ add rcx,  [ argument ]  ]
[ shl rax,  [ argument ]  ]
[ add rax, rbx ]
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rax], rsi ]
[ cmp r12, rcx ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rbx  +  [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ cmp r12,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rcx, rax ]
[ mov rax, r12 ]
[ shl rax,  [ argument ]  ]
[ lea rdx, ptr [rbx + rax * 1- [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov rax, qword ptr [rdx  +  [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ lea rax, ptr [rax + rcx * 1 + [ displacement ] ] ]
[ cmp r12,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ lea rsi, ptr [r12- [ displacement ] ] ]
[ lea rcx, ptr [rax + rax * 1] ]
[ cmp rsi,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ mov rdi, rsi ]
[ movdqa xmm2, xmmword ptr [rip  +  [ displacement ] ] ]
[ mov rax, rbx ]
[ pxor xmm1, xmm1 ]
[ shr rdi,  [ argument ]  ]
[ shl rdi,  [ argument ]  ]
[ add rdi, rbx ]
[ nop dword ptr [rax], eax ]
[ movdqu xmm0, xmmword ptr [rax  +  [ displacement ] ] ]
[ movdqu xmm3, xmmword ptr [rax  +  [ displacement ] ] ]
[ add rax,  [ argument ]  ]
[ punpcklqdq xmm0, xmm3 ]
[ paddq xmm0, xmm2 ]
[ paddq xmm1, xmm0 ]
[ cmp rdi, rax ]
[ jnz  [ addr ]  ]
[ mov esi,  [ argument ]  ]
[ mov edi,  [ argument ]  ]
[ jmp  [ addr ]  ]
[ shl rsi,  [ argument ]  ]
[ mov rax, qword ptr [rbx + rsi * 1 + [ displacement ] ] ]
[ lea rsi, ptr [rdi  +  [ displacement ] ] ]
[ lea rax, ptr [rcx + rax * 1 + [ displacement ] ] ]
[ cmp rsi, r12 ]
[ jnb  [ addr ]  ]
[ mov rcx, rdi ]
[ shl rcx,  [ argument ]  ]
[ mov rcx, qword ptr [rbx + rcx * 1 + [ displacement ] ] ]
[ lea rax, ptr [rax + rcx * 1 + [ displacement ] ] ]
[ lea rcx, ptr [rdi  +  [ displacement ] ] ]
[ cmp r12, rcx ]
[ jbe  [ addr ]  ]
[ shl rsi,  [ argument ]  ]
[ add rdi,  [ argument ]  ]
[ mov rsi, qword ptr [rbx + rsi * 1 + [ displacement ] ] ]
[ lea rax, ptr [rax + rsi * 1 + [ displacement ] ] ]
[ cmp r12, rdi ]
[ jbe  [ addr ]  ]
[ cmp r12,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ mov ecx,  [ argument ]  ]
[ lea rdi, ptr [rax  +  [ displacement ] ] ]
[ mov esi, r12d ]
[ sub ecx, r12d ]
[ shr rdi, cl ]
[ test rdi, rdi ]
[ jnz  [ addr ]  ]
[ lea ecx, ptr [rsi- [ displacement ] ] ]
[ shl rax, cl ]
[ mov r8d,  [ argument ]  ]
[ mov ecx, esi ]
[ mov qword ptr [rbp- [ displacement ] ], rdx ]
[ mov edi, r8d ]
[ mov dword ptr [rbp- [ displacement ] ], esi ]
[ shl edi, cl ]
[ mov rcx, qword ptr [rbp- [ displacement ] ] ]
[ mov dword ptr [rbp- [ displacement ] ], edi ]
[ movsxd rdi, edi ]
[ mov qword ptr [rcx], rdi ]
[ mov r13, rdi ]
[ shl r13,  [ argument ]  ]
[ mov qword ptr [rbp- [ displacement ] ], rdi ]
[ lea rdi, ptr [r13 + rax * 1] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac677bc7
#call parent addr: 7f5eac671085
#root size: 26
===============================================================
RET========================================================
#ret target: 7f5eac677bc7
#function name: malloc
#func_id: 32
===========================================================
[ mov esi, dword ptr [rbp- [ displacement ] ] ]
[ mov rdx, qword ptr [rbp- [ displacement ] ] ]
[ mov r8d,  [ argument ]  ]
[ test rax, rax ]
[ mov r14, rax ]
[ jz  [ addr ]  ]
[ lea eax, ptr [rsi- [ displacement ] ] ]
[ lea rdi, ptr [r14 + r13 * 1] ]
[ mov ecx, eax ]
[ mov dword ptr [rbp- [ displacement ] ], eax ]
[ mov eax,  [ argument ]  ]
[ shl r8d, cl ]
[ mov ecx, esi ]
[ mov qword ptr [r14], rdi ]
[ shl rax, cl ]
[ mov qword ptr [r14  +  [ displacement ] ], rdi ]
[ mov dword ptr [rbp- [ displacement ] ], r8d ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ cmp r12,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rdx] ]
[ lea rsi, ptr [r12- [ displacement ] ] ]
[ movsxd r15, dword ptr [rbp- [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], r14 ]
[ mov qword ptr [rbp- [ displacement ] ], rsi ]
[ mov r13d,  [ argument ]  ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov rax, qword ptr [rbx] ]
[ mov qword ptr [rbp- [ displacement ] ], r12 ]
[ mov r12, r15 ]
[ mov r15, rax ]
[ nop dword ptr [rax + rax * 1], eax ]
[ mov rdx, qword ptr [rbp- [ displacement ] ] ]
[ mov rsi, qword ptr [rbp- [ displacement ] ] ]
[ sub r12,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac677c5c
#call parent addr: 7f5eac671085
#root size: 26
===============================================================
[ nop edx, edi ]
[ mov rax, rdi ]
[ add rax, rdx ]
[ jmp  [ addr ]  ]
[ cmp rdx,  [ argument ]  ]
[ jb  [ addr ]  ]
[ cmp rdx,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ movups xmm0, xmmword ptr [rsi] ]
[ movups xmm1, xmmword ptr [rsi + rdx * 1- [ displacement ] ] ]
[ movups xmmword ptr [rdi], xmm0 ]
[ movups xmmword ptr [rdi + rdx * 1- [ displacement ] ], xmm1 ]
[ ret  ]
[ movzx ecx, word ptr [rsi + rdx * 1- [ displacement ] ] ]
[ movzx esi, word ptr [rsi] ]
[ mov word ptr [rdi + rdx * 1- [ displacement ] ], cx ]
[ mov word ptr [rdi], si ]
[ ret  ]
RET========================================================
#ret target: 7f5eac677c5c
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov r14, qword ptr [rbp- [ displacement ] ] ]
[ mov rdi, rax ]
[ mov byte ptr [rax],  [ argument ]  ]
[ add rdi,  [ argument ]  ]
[ jmp  [ addr ]  ]
[ mov eax, r13d ]
[ mov ecx, r14d ]
[ shl eax, cl ]
[ cdqe  ]
[ test rax, r12 ]
[ jz  [ addr ]  ]
[ mov rax, r14 ]
[ shl rax,  [ argument ]  ]
[ mov rdx, qword ptr [rbx + rax * 1 + [ displacement ] ] ]
[ mov rsi, qword ptr [rbx + rax * 1] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac677c9d
#call parent addr: 7f5eac671085
#root size: 26
===============================================================
[ mov ecx, dword ptr [rsi + rdx * 1- [ displacement ] ] ]
[ mov esi, dword ptr [rsi] ]
[ mov dword ptr [rdi + rdx * 1- [ displacement ] ], ecx ]
[ mov dword ptr [rdi], esi ]
[ ret  ]
RET========================================================
#ret target: 7f5eac677c9d
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov byte ptr [rax],  [ argument ]  ]
[ lea rdi, ptr [rax  +  [ displacement ] ] ]
[ sub r14,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rdx, qword ptr [rbp- [ displacement ] ] ]
[ mov rsi, r15 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac677c9d
#call parent addr: 7f5eac671085
#root size: 26
===============================================================
[ mov rcx, qword ptr [rsi + rdx * 1- [ displacement ] ] ]
[ mov rsi, qword ptr [rsi] ]
[ mov qword ptr [rdi + rdx * 1- [ displacement ] ], rcx ]
[ mov qword ptr [rdi], rsi ]
[ ret  ]
RET========================================================
#ret target: 7f5eac677c9d
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov byte ptr [rax],  [ argument ]  ]
[ lea rdi, ptr [rax  +  [ displacement ] ] ]
[ sub r14,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rdx, qword ptr [rbp- [ displacement ] ] ]
[ mov rsi, r15 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac677cb6
#call parent addr: 7f5eac671085
#root size: 26
===============================================================
RET========================================================
#ret target: 7f5eac677cb6
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov byte ptr [rax],  [ argument ]  ]
[ lea rdi, ptr [rax  +  [ displacement ] ] ]
[ test r12, r12 ]
[ jnz  [ addr ]  ]
[ mov r12, qword ptr [rbp- [ displacement ] ] ]
[ mov r14, qword ptr [rbp- [ displacement ] ] ]
[ mov rcx, qword ptr [rbp- [ displacement ] ] ]
[ xor eax, eax ]
[ nop dword ptr [rax + rax * 1], eax ]
[ mov rdx, rax ]
[ add rax,  [ argument ]  ]
[ shl rdx,  [ argument ]  ]
[ mov qword ptr [r14 + rdx * 1 + [ displacement ] ],  [ argument ]  ]
[ cmp rax, rcx ]
[ jb  [ addr ]  ]
[ mov r10, qword ptr [rbp- [ displacement ] ] ]
[ test r10, r10 ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [rbp- [ displacement ] ] ]
[ mov rsi, qword ptr [rbp- [ displacement ] ] ]
[ sub r12,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac677c5c
#call parent addr: 7f5eac671085
#root size: 26
===============================================================
RET========================================================
#ret target: 7f5eac677c5c
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac677c9d
#call parent addr: 7f5eac671085
#root size: 26
===============================================================
RET========================================================
#ret target: 7f5eac677c9d
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ sub r14,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov eax, r13d ]
[ mov ecx, r14d ]
[ shl eax, cl ]
[ cdqe  ]
[ test rax, r12 ]
[ jz  [ addr ]  ]
[ mov rax, r14 ]
[ shl rax,  [ argument ]  ]
[ mov rdx, qword ptr [rbx + rax * 1 + [ displacement ] ] ]
[ mov rsi, qword ptr [rbx + rax * 1] ]
[ call  [ addr.func ]  ]
[ mov rdx, qword ptr [rbp- [ displacement ] ] ]
[ mov rsi, r15 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac677cb6
#call parent addr: 7f5eac671085
#root size: 26
===============================================================
RET========================================================
#ret target: 7f5eac677cb6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac677c5c
#call parent addr: 7f5eac671085
#root size: 26
===============================================================
RET========================================================
#ret target: 7f5eac677c5c
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac677c9d
#call parent addr: 7f5eac671085
#root size: 26
===============================================================
RET========================================================
#ret target: 7f5eac677c9d
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac677cb6
#call parent addr: 7f5eac671085
#root size: 26
===============================================================
RET========================================================
#ret target: 7f5eac677cb6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac677c5c
#call parent addr: 7f5eac671085
#root size: 26
===============================================================
RET========================================================
#ret target: 7f5eac677c5c
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac677cb6
#call parent addr: 7f5eac671085
#root size: 26
===============================================================
RET========================================================
#ret target: 7f5eac677cb6
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov rdx, rax ]
[ add rax,  [ argument ]  ]
[ shl rdx,  [ argument ]  ]
[ mov qword ptr [r14 + rdx * 1 + [ displacement ] ],  [ argument ]  ]
[ cmp rax, rcx ]
[ jb  [ addr ]  ]
[ mov r10, qword ptr [rbp- [ displacement ] ] ]
[ test r10, r10 ]
[ jz  [ addr ]  ]
[ add rbx, qword ptr [rbp- [ displacement ] ] ]
[ mov edi,  [ argument ]  ]
[ mov rcx, r12 ]
[ nop dword ptr [rax], eax ]
[ sub rcx,  [ argument ]  ]
[ mov esi, edi ]
[ mov rdx, r14 ]
[ mov rax, r10 ]
[ shl esi, cl ]
[ movsxd rsi, esi ]
[ sub rax,  [ argument ]  ]
[ add rdx,  [ argument ]  ]
[ test rsi, rax ]
[ jz  [ addr ]  ]
[ mov r9, qword ptr [rdx- [ displacement ] ] ]
[ mov r8, qword ptr [rbx- [ displacement ] ] ]
[ sub rax,  [ argument ]  ]
[ add rdx,  [ argument ]  ]
[ lea r8, ptr [r9 + r8 * 1 + [ displacement ] ] ]
[ mov qword ptr [rdx- [ displacement ] ], r8 ]
[ test rsi, rax ]
[ jnz  [ addr ]  ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ sub rbx,  [ argument ]  ]
[ test rcx, rcx ]
[ jnz  [ addr ]  ]
[ sub rax,  [ argument ]  ]
[ add rdx,  [ argument ]  ]
[ test rsi, rax ]
[ jz  [ addr ]  ]
[ mov r9, qword ptr [rdx- [ displacement ] ] ]
[ mov r8, qword ptr [rbx- [ displacement ] ] ]
[ sub rax,  [ argument ]  ]
[ add rdx,  [ argument ]  ]
[ lea r8, ptr [r9 + r8 * 1 + [ displacement ] ] ]
[ mov qword ptr [rdx- [ displacement ] ], r8 ]
[ test rsi, rax ]
[ jnz  [ addr ]  ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ sub rbx,  [ argument ]  ]
[ test rcx, rcx ]
[ jnz  [ addr ]  ]
[ mov r8d, dword ptr [rbp- [ displacement ] ] ]
[ movzx ecx, byte ptr [rbp- [ displacement ] ] ]
[ mov eax,  [ argument ]  ]
[ lea rsi, ptr [r14  +  [ displacement ] ] ]
[ sub r8d,  [ argument ]  ]
[ shl rax, cl ]
[ movsxd r8, r8d ]
[ mov rcx, rax ]
[ cmp r8, rax ]
[ jz  [ addr ]  ]
[ sub rcx,  [ argument ]  ]
[ mov esi, edi ]
[ mov rdx, r14 ]
[ mov rax, r10 ]
[ shl esi, cl ]
[ movsxd rsi, esi ]
[ sub rax,  [ argument ]  ]
[ add rdx,  [ argument ]  ]
[ test rsi, rax ]
[ jz  [ addr ]  ]
[ mov r9, qword ptr [rdx- [ displacement ] ] ]
[ mov r8, qword ptr [rbx- [ displacement ] ] ]
[ sub rax,  [ argument ]  ]
[ add rdx,  [ argument ]  ]
[ lea r8, ptr [r9 + r8 * 1 + [ displacement ] ] ]
[ mov qword ptr [rdx- [ displacement ] ], r8 ]
[ test rsi, rax ]
[ jnz  [ addr ]  ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ sub rbx,  [ argument ]  ]
[ test rcx, rcx ]
[ jnz  [ addr ]  ]
[ mov r8d, dword ptr [rbp- [ displacement ] ] ]
[ movzx ecx, byte ptr [rbp- [ displacement ] ] ]
[ mov eax,  [ argument ]  ]
[ lea rsi, ptr [r14  +  [ displacement ] ] ]
[ sub r8d,  [ argument ]  ]
[ shl rax, cl ]
[ movsxd r8, r8d ]
[ mov rcx, rax ]
[ cmp r8, rax ]
[ jz  [ addr ]  ]
[ mov rax, rsi ]
[ mov rdx, r8 ]
[ data16 nop ]
[ sub rdx,  [ argument ]  ]
[ test dl,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rdi, qword ptr [rax- [ displacement ] ] ]
[ add rdi, qword ptr [rax- [ displacement ] ] ]
[ add rax,  [ argument ]  ]
[ mov qword ptr [rax- [ displacement ] ], rdi ]
[ cmp rdx, rcx ]
[ jnz  [ addr ]  ]
[ sub r8, rcx ]
[ shl r8,  [ argument ]  ]
[ add rsi, r8 ]
[ mov edx, dword ptr [rbp- [ displacement ] ] ]
[ mov rdi, qword ptr [rbp- [ displacement ] ] ]
[ neg edx ]
[ add rdi,  [ argument ]  ]
[ movsxd rdx, edx ]
[ shl rdx,  [ argument ]  ]
[ mov rax, qword ptr [rsi + rdx * 1] ]
[ add rsi,  [ argument ]  ]
[ add rax, rdi ]
[ mov qword ptr [rsi- [ displacement ] ], rax ]
[ sub rcx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [r14  +  [ displacement ] ] ]
[ mov rbx, qword ptr [rbp- [ displacement ] ] ]
[ mov qword ptr [rbx], rax ]
[ lea rsp, ptr [rbp- [ displacement ] ] ]
[ mov rax, r14 ]
[ pop rbx ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ pop rbp ]
[ ret  ]
[ sub rdx,  [ argument ]  ]
[ test dl,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rdi, qword ptr [rax- [ displacement ] ] ]
[ add rdi, qword ptr [rax- [ displacement ] ] ]
[ add rax,  [ argument ]  ]
[ mov qword ptr [rax- [ displacement ] ], rdi ]
[ cmp rdx, rcx ]
[ jnz  [ addr ]  ]
[ sub r8, rcx ]
[ shl r8,  [ argument ]  ]
[ add rsi, r8 ]
[ mov edx, dword ptr [rbp- [ displacement ] ] ]
[ mov rdi, qword ptr [rbp- [ displacement ] ] ]
[ neg edx ]
[ add rdi,  [ argument ]  ]
[ movsxd rdx, edx ]
[ shl rdx,  [ argument ]  ]
[ mov rax, qword ptr [rsi + rdx * 1] ]
[ add rsi,  [ argument ]  ]
[ add rax, rdi ]
[ mov qword ptr [rsi- [ displacement ] ], rax ]
[ sub rcx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rdi, qword ptr [rax- [ displacement ] ] ]
[ add rax,  [ argument ]  ]
[ mov qword ptr [rax- [ displacement ] ], rdi ]
[ cmp rdx, rcx ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ sub r8, rcx ]
[ shl r8,  [ argument ]  ]
[ add rsi, r8 ]
[ mov edx, dword ptr [rbp- [ displacement ] ] ]
[ mov rdi, qword ptr [rbp- [ displacement ] ] ]
[ neg edx ]
[ add rdi,  [ argument ]  ]
[ movsxd rdx, edx ]
[ shl rdx,  [ argument ]  ]
[ mov rax, qword ptr [rsi + rdx * 1] ]
[ add rsi,  [ argument ]  ]
[ add rax, rdi ]
[ mov qword ptr [rsi- [ displacement ] ], rax ]
[ sub rcx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [r14  +  [ displacement ] ] ]
[ mov rbx, qword ptr [rbp- [ displacement ] ] ]
[ mov qword ptr [rbx], rax ]
[ lea rsp, ptr [rbp- [ displacement ] ] ]
[ mov rax, r14 ]
[ pop rbx ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ pop rbp ]
[ ret  ]
[ mov rax, qword ptr [rsi + rdx * 1] ]
[ add rsi,  [ argument ]  ]
[ add rax, rdi ]
[ mov qword ptr [rsi- [ displacement ] ], rax ]
[ sub rcx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [r14  +  [ displacement ] ] ]
[ mov rbx, qword ptr [rbp- [ displacement ] ] ]
[ mov qword ptr [rbx], rax ]
[ lea rsp, ptr [rbp- [ displacement ] ] ]
[ mov rax, r14 ]
[ pop rbx ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ pop rbp ]
[ ret  ]
[ mov edi,  [ argument ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac671096
#call parent addr: 7f5eac671085
#root size: 26
===============================================================
RET========================================================
#ret target: 7f5eac671096
#function name: malloc
#func_id: 32
===========================================================
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rcx,  [ addr ]  ]
[ mov r14, rax ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ lea r13, ptr [rax * 4] ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ lea rdx, ptr [r13  +  [ displacement ] ] ]
[ mov rax, rdx ]
[ mul rcx ]
[ shr rdx,  [ argument ]  ]
[ lea rbx, ptr [rdx + rdx * 4] ]
[ mov rdi, rbx ]
[ shl rdi,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac6710e4
#call parent addr: 7f5eac671085
#root size: 26
===============================================================
RET========================================================
#ret target: 7f5eac6710e4
#function name: malloc
#func_id: 32
===========================================================
[ mov qword ptr [r14], rax ]
[ mov r15, rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ add r14,  [ argument ]  ]
[ lea r12, ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [r15  +  [ displacement ] ], rax ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [r15  +  [ displacement ] ], rax ]
[ lea rax, ptr [rbx * 8] ]
[ lea rbx, ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ neg rax ]
[ cmp qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [r15  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [r15  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ jz  [ addr ]  ]
[ lea rdi, ptr [r15  +  [ displacement ] ] ]
[ mov rdx, r13 ]
[ xor esi, esi ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac671164
#call parent addr: 7f5eac671085
#root size: 26
===============================================================
[ nop edx, edi ]
[ movd xmm0, esi ]
[ mov rax, rdi ]
[ punpcklbw xmm0, xmm0 ]
[ punpcklwd xmm0, xmm0 ]
[ pshufd xmm0, xmm0,  [ argument ]  ]
[ cmp rdx,  [ argument ]  ]
[ jb  [ addr ]  ]
[ cmp rdx,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ movdqu xmmword ptr [rdi + rdx * 1- [ displacement ] ], xmm0 ]
[ movdqu xmmword ptr [rdi], xmm0 ]
[ ret  ]
[ cmp rdx,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ movdqu xmmword ptr [rdi], xmm0 ]
[ movdqu xmmword ptr [rdi  +  [ displacement ] ], xmm0 ]
[ movdqu xmmword ptr [rdi + rdx * 1- [ displacement ] ], xmm0 ]
[ movdqu xmmword ptr [rdi + rdx * 1- [ displacement ] ], xmm0 ]
[ ret  ]
RET========================================================
#ret target: 7f5eac671164
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ cmp rax, r12 ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ add r15, qword ptr [rbp- [ displacement ] ] ]
[ add r14,  [ argument ]  ]
[ add r12,  [ argument ]  ]
[ mov qword ptr [r14- [ displacement ] ], r15 ]
[ mov qword ptr [r15 + rax * 1], r15 ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [r15  +  [ displacement ] ], rax ]
[ mov rax, qword ptr [r12] ]
[ cmp byte ptr [rbx],  [ argument ]  ]
[ mov qword ptr [r15  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [r15  +  [ displacement ] ], rax ]
[ lea rax, ptr [rbx + rax * 1 + [ displacement ] ] ]
[ mov qword ptr [r15  +  [ displacement ] ], rbx ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov rbx, rax ]
[ jnz  [ addr ]  ]
[ lea rdi, ptr [r15  +  [ displacement ] ] ]
[ mov rdx, r13 ]
[ xor esi, esi ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac671164
#call parent addr: 7f5eac671085
#root size: 26
===============================================================
RET========================================================
#ret target: 7f5eac671164
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac671164
#call parent addr: 7f5eac671085
#root size: 26
===============================================================
RET========================================================
#ret target: 7f5eac671164
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac671164
#call parent addr: 7f5eac671085
#root size: 26
===============================================================
RET========================================================
#ret target: 7f5eac671164
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov rbx, qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [r15],  [ argument ]  ]
[ mov qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [r14],  [ argument ]  ]
[ test rbx, rbx ]
[ jz  [ addr ]  ]
[ movzx eax, byte ptr [rbx  +  [ displacement ] ] ]
[ and eax,  [ argument ]  ]
[ cmp al,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rbx  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rbx  +  [ displacement ] ] ]
[ mov qword ptr [rbx  +  [ displacement ] ],  [ addr ]  ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rcx, qword ptr [rbx  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rax  +  [ displacement ] ] ]
[ lea rsi, ptr [rbx  +  [ displacement ] ] ]
[ lea rdi, ptr [rbx  +  [ displacement ] ] ]
[ lea r8, ptr [rip  +  [ displacement ] ] ]
[ add rdx, qword ptr [rcx  +  [ displacement ] ] ]
[ mov rcx, rbx ]
[ call  [ addr.func ]  ]
[ mov qword ptr [rbx  +  [ displacement ] ],  [ addr ]  ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ cmp byte ptr [rax],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov qword ptr [rip  +  [ displacement ] ],  [ addr ]  ]
[ lea rsp, ptr [rbp- [ displacement ] ] ]
[ pop rbx ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ pop rbp ]
[ ret  ]
[ mov rdi, rax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac6712c8
#call parent addr: 7f5eac671085
#root size: 26
===============================================================
[ and rax,  [ addr ]  ]
[ pcmpeqb xmm1, xmmword ptr [rax  +  [ displacement ] ] ]
[ pcmpeqb xmm2, xmmword ptr [rax  +  [ displacement ] ] ]
[ pcmpeqb xmm3, xmmword ptr [rax  +  [ displacement ] ] ]
[ pmovmskb edx, xmm1 ]
[ pmovmskb r8d, xmm2 ]
[ pmovmskb ecx, xmm3 ]
[ shl rdx,  [ argument ]  ]
[ shl rcx,  [ argument ]  ]
[ or rcx, r8 ]
[ shl rcx,  [ argument ]  ]
[ or rdx, rcx ]
[ mov rcx, rdi ]
[ xor rcx, rax ]
[ and rax,  [ addr ]  ]
[ sar rdx, cl ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ bsf rax, rdx ]
[ ret  ]
[ movdqa xmm0, xmmword ptr [rax  +  [ displacement ] ] ]
[ pminub xmm0, xmmword ptr [rax  +  [ displacement ] ] ]
[ pminub xmm0, xmmword ptr [rax  +  [ displacement ] ] ]
[ pminub xmm0, xmmword ptr [rax  +  [ displacement ] ] ]
[ pcmpeqb xmm0, xmm3 ]
[ pmovmskb edx, xmm0 ]
[ test edx, edx ]
[ jnz  [ addr ]  ]
[ sub rax,  [ addr ]  ]
[ movdqa xmm0, xmmword ptr [rax] ]
[ pminub xmm0, xmmword ptr [rax  +  [ displacement ] ] ]
[ pminub xmm0, xmmword ptr [rax  +  [ displacement ] ] ]
[ pminub xmm0, xmmword ptr [rax  +  [ displacement ] ] ]
[ pcmpeqb xmm0, xmm3 ]
[ pmovmskb edx, xmm0 ]
[ test edx, edx ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ add rax,  [ argument ]  ]
[ pxor xmm0, xmm0 ]
[ pcmpeqb xmm0, xmmword ptr [rax] ]
[ pcmpeqb xmm1, xmmword ptr [rax  +  [ displacement ] ] ]
[ pcmpeqb xmm2, xmmword ptr [rax  +  [ displacement ] ] ]
[ pcmpeqb xmm3, xmmword ptr [rax  +  [ displacement ] ] ]
[ pmovmskb esi, xmm0 ]
[ pmovmskb edx, xmm1 ]
[ pmovmskb r8d, xmm2 ]
[ pmovmskb ecx, xmm3 ]
[ shl rdx,  [ argument ]  ]
[ shl rcx,  [ argument ]  ]
[ or rdx, rsi ]
[ or rcx, r8 ]
[ shl rcx,  [ argument ]  ]
[ or rdx, rcx ]
[ bsf rdx, rdx ]
[ add rax, rdx ]
[ sub rax, rdi ]
[ ret  ]
RET========================================================
#ret target: 7f5eac6712c8
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov rcx, rsp ]
[ lea r8, ptr [rax  +  [ displacement ] ] ]
[ add rax,  [ argument ]  ]
[ mov rdx, rax ]
[ and rax,  [ addr ]  ]
[ sub rcx, rax ]
[ and rdx,  [ addr ]  ]
[ mov rax, rcx ]
[ cmp rsp, rax ]
[ jz  [ addr ]  ]
[ sub rsp,  [ argument ]  ]
[ or qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ jmp  [ addr ]  ]
[ and edx,  [ argument ]  ]
[ sub rsp, rdx ]
[ test rdx, rdx ]
[ jnz  [ addr ]  ]
[ mov rsi, qword ptr [rbp- [ displacement ] ] ]
[ lea rdi, ptr [rsp  +  [ displacement ] ] ]
[ mov rdx, r8 ]
[ and rdi,  [ addr ]  ]
[ call  [ addr.func ]  ]
[ or qword ptr [rsp + rdx * 1- [ displacement ] ],  [ argument ]  ]
[ jmp  [ addr ]  ]
[ mov rsi, qword ptr [rbp- [ displacement ] ] ]
[ lea rdi, ptr [rsp  +  [ displacement ] ] ]
[ mov rdx, r8 ]
[ and rdi,  [ addr ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac671334
#call parent addr: 7f5eac671085
#root size: 26
===============================================================
[ cmp rdx,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ cmp rdx,  [ argument ]  ]
[ jb  [ addr ]  ]
[ movups xmm0, xmmword ptr [rsi] ]
[ movups xmm1, xmmword ptr [rsi  +  [ displacement ] ] ]
[ movups xmm2, xmmword ptr [rsi  +  [ displacement ] ] ]
[ movups xmm3, xmmword ptr [rsi  +  [ displacement ] ] ]
[ movups xmm4, xmmword ptr [rsi + rdx * 1- [ displacement ] ] ]
[ movups xmm5, xmmword ptr [rsi + rdx * 1- [ displacement ] ] ]
[ movups xmm6, xmmword ptr [rsi + rdx * 1- [ displacement ] ] ]
[ movups xmm7, xmmword ptr [rsi + rdx * 1- [ displacement ] ] ]
[ movups xmmword ptr [rdi], xmm0 ]
[ movups xmmword ptr [rdi  +  [ displacement ] ], xmm1 ]
[ movups xmmword ptr [rdi  +  [ displacement ] ], xmm2 ]
[ movups xmmword ptr [rdi  +  [ displacement ] ], xmm3 ]
[ movups xmmword ptr [rdi + rdx * 1- [ displacement ] ], xmm4 ]
[ movups xmmword ptr [rdi + rdx * 1- [ displacement ] ], xmm5 ]
[ movups xmmword ptr [rdi + rdx * 1- [ displacement ] ], xmm6 ]
[ movups xmmword ptr [rdi + rdx * 1- [ displacement ] ], xmm7 ]
[ ret  ]
[ movups xmm0, xmmword ptr [rsi] ]
[ movups xmm1, xmmword ptr [rsi  +  [ displacement ] ] ]
[ movups xmm2, xmmword ptr [rsi + rdx * 1- [ displacement ] ] ]
[ movups xmm3, xmmword ptr [rsi + rdx * 1- [ displacement ] ] ]
[ movups xmmword ptr [rdi], xmm0 ]
[ movups xmmword ptr [rdi  +  [ displacement ] ], xmm1 ]
[ movups xmmword ptr [rdi + rdx * 1- [ displacement ] ], xmm2 ]
[ movups xmmword ptr [rdi + rdx * 1- [ displacement ] ], xmm3 ]
[ ret  ]
RET========================================================
#ret target: 7f5eac671334
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov r12, rax ]
[ movzx eax, byte ptr [rax] ]
[ test al, al ]
[ jz  [ addr ]  ]
[ mov rdx, r12 ]
[ mov esi,  [ argument ]  ]
[ nop ]
[ sub eax,  [ argument ]  ]
[ lea rcx, ptr [rsi  +  [ displacement ] ] ]
[ cmp al,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ lea rax, ptr [rsi  +  [ displacement ] ] ]
[ mov rsi, rcx ]
[ mov rcx, rax ]
[ movzx eax, byte ptr [rdx  +  [ displacement ] ] ]
[ add rdx,  [ argument ]  ]
[ test al, al ]
[ jnz  [ addr ]  ]
[ movzx eax, byte ptr [rdx  +  [ displacement ] ] ]
[ add rdx,  [ argument ]  ]
[ test al, al ]
[ jnz  [ addr ]  ]
[ lea rdi, ptr [rcx * 8] ]
[ call  [ addr.func ]  ]
[ sub eax,  [ argument ]  ]
[ lea rcx, ptr [rsi  +  [ displacement ] ] ]
[ cmp al,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ lea rax, ptr [rsi  +  [ displacement ] ] ]
[ mov rsi, rcx ]
[ mov rcx, rax ]
[ movzx eax, byte ptr [rdx  +  [ displacement ] ] ]
[ add rdx,  [ argument ]  ]
[ test al, al ]
[ jnz  [ addr ]  ]
[ lea rdi, ptr [rcx * 8] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac671379
#call parent addr: 7f5eac671085
#root size: 26
===============================================================
RET========================================================
#ret target: 7f5eac671379
#function name: malloc
#func_id: 32
===========================================================
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ mov rsi, rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ xor r8d, r8d ]
[ mov rdi, r12 ]
[ lea rcx, ptr [rip  +  [ displacement ] ] ]
[ mov r9, rbx ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac6713a8
#call parent addr: 7f5eac671085
#root size: 26
===============================================================
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ mov r12, rsi ]
[ push rbp ]
[ push rbx ]
[ xor ebx, ebx ]
[ sub rsp,  [ argument ]  ]
[ lea rax, ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdi ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdx ]
[ mov qword ptr [rsp  +  [ displacement ] ], rcx ]
[ mov qword ptr [rsp  +  [ displacement ] ], r8 ]
[ mov qword ptr [rsp  +  [ displacement ] ], r9 ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ nop word ptr [rax + rax * 1], ax ]
[ mov rsi, qword ptr [rsp  +  [ displacement ] ] ]
[ mov rdi, qword ptr [rsp  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac670bba
#call parent addr: 7f5eac6713a8
#root size: 27
===============================================================
[ nop edx, edi ]
[ cmp byte ptr [rsi],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov r8, qword ptr [rdi] ]
[ test r8, r8 ]
[ jz  [ addr ]  ]
[ movzx edx, byte ptr [r8] ]
[ test dl, dl ]
[ jz  [ addr ]  ]
[ mov rcx, r8 ]
[ nop dword ptr [rax], eax ]
[ mov rax, rsi ]
[ jmp  [ addr ]  ]
[ cmp byte ptr [rax], dl ]
[ jnz  [ addr ]  ]
[ mov byte ptr [rcx],  [ argument ]  ]
[ lea rax, ptr [rcx  +  [ displacement ] ] ]
[ mov qword ptr [rdi], rax ]
[ mov rax, r8 ]
[ ret  ]
[ add rax,  [ argument ]  ]
[ cmp byte ptr [rax],  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp byte ptr [rax], dl ]
[ jnz  [ addr ]  ]
[ mov byte ptr [rcx],  [ argument ]  ]
[ lea rax, ptr [rcx  +  [ displacement ] ] ]
[ mov qword ptr [rdi], rax ]
[ mov rax, r8 ]
[ ret  ]
[ movzx edx, byte ptr [rcx  +  [ displacement ] ] ]
[ add rcx,  [ argument ]  ]
[ test dl, dl ]
[ jnz  [ addr ]  ]
[ xor eax, eax ]
[ jmp  [ addr ]  ]
[ mov rax, rsi ]
[ jmp  [ addr ]  ]
RET========================================================
#ret target: 7f5eac670bba
#function name: realloc
#func_id: 35
===========================================================
[ mov r15, rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ cmp byte ptr [r15],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rdi, qword ptr [rsp  +  [ displacement ] ] ]
[ mov rsi, r15 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac670bdd
#call parent addr: 7f5eac6713a8
#root size: 27
===============================================================
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ mov r12, rdi ]
[ push rbp ]
[ mov rbp, rsi ]
[ mov esi,  [ argument ]  ]
[ push rbx ]
[ mov rdi, rbp ]
[ sub rsp,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac6709ec
#call parent addr: 7f5eac670bdd
#root size: 28
===============================================================
[ nop edx, edi ]
[ movd xmm1, esi ]
[ mov eax, edi ]
[ and eax,  [ argument ]  ]
[ punpcklbw xmm1, xmm1 ]
[ cmp eax,  [ argument ]  ]
[ punpcklwd xmm1, xmm1 ]
[ pshufd xmm1, xmm1,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ movdqu xmm0, xmmword ptr [rdi] ]
[ pxor xmm3, xmm3 ]
[ movdqa xmm4, xmm0 ]
[ pcmpeqb xmm0, xmm1 ]
[ pcmpeqb xmm4, xmm3 ]
[ por xmm0, xmm4 ]
[ pmovmskb eax, xmm0 ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ bsf eax, eax ]
[ mov edx,  [ argument ]  ]
[ lea rax, ptr [rdi + rax * 1] ]
[ cmp byte ptr [rax], sil ]
[ cmovnz rax, rdx ]
[ ret  ]
[ movdqu xmm0, xmmword ptr [rdi  +  [ displacement ] ] ]
[ movdqa xmm4, xmm0 ]
[ pcmpeqb xmm0, xmm1 ]
[ pcmpeqb xmm4, xmm3 ]
[ por xmm0, xmm4 ]
[ pmovmskb ecx, xmm0 ]
[ movdqu xmm0, xmmword ptr [rdi  +  [ displacement ] ] ]
[ movdqa xmm4, xmm0 ]
[ pcmpeqb xmm0, xmm1 ]
[ shl rcx,  [ argument ]  ]
[ pcmpeqb xmm4, xmm3 ]
[ por xmm0, xmm4 ]
[ pmovmskb eax, xmm0 ]
[ movdqu xmm0, xmmword ptr [rdi  +  [ displacement ] ] ]
[ pcmpeqb xmm3, xmm0 ]
[ shl rax,  [ argument ]  ]
[ pcmpeqb xmm0, xmm1 ]
[ or rax, rcx ]
[ por xmm0, xmm3 ]
[ pmovmskb ecx, xmm0 ]
[ shl rcx,  [ argument ]  ]
[ or rax, rcx ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ nop word ptr [rax + rax * 1], ax ]
[ nop dword ptr [rax], eax ]
[ pxor xmm6, xmm6 ]
[ and rdi,  [ addr ]  ]
[ add rdi,  [ argument ]  ]
[ movdqa xmm5, xmmword ptr [rdi] ]
[ movdqa xmm2, xmmword ptr [rdi  +  [ displacement ] ] ]
[ movdqa xmm3, xmmword ptr [rdi  +  [ displacement ] ] ]
[ pxor xmm5, xmm1 ]
[ movdqa xmm4, xmmword ptr [rdi  +  [ displacement ] ] ]
[ pxor xmm2, xmm1 ]
[ pxor xmm3, xmm1 ]
[ pminub xmm5, xmmword ptr [rdi] ]
[ pxor xmm4, xmm1 ]
[ pminub xmm2, xmmword ptr [rdi  +  [ displacement ] ] ]
[ pminub xmm3, xmmword ptr [rdi  +  [ displacement ] ] ]
[ pminub xmm5, xmm2 ]
[ pminub xmm4, xmmword ptr [rdi  +  [ displacement ] ] ]
[ pminub xmm5, xmm3 ]
[ pminub xmm5, xmm4 ]
[ pcmpeqb xmm5, xmm6 ]
[ pmovmskb eax, xmm5 ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ movdqa xmm5, xmmword ptr [rdi] ]
[ movdqa xmm0, xmm5 ]
[ pcmpeqb xmm5, xmm1 ]
[ pcmpeqb xmm0, xmm6 ]
[ por xmm5, xmm0 ]
[ pcmpeqb xmm2, xmm6 ]
[ pcmpeqb xmm3, xmm6 ]
[ pcmpeqb xmm4, xmm6 ]
[ pmovmskb ecx, xmm5 ]
[ pmovmskb eax, xmm2 ]
[ shl rax,  [ argument ]  ]
[ pmovmskb r8d, xmm3 ]
[ pmovmskb edx, xmm4 ]
[ shl r8,  [ argument ]  ]
[ or rax, r8 ]
[ or rax, rcx ]
[ shl rdx,  [ argument ]  ]
[ or rax, rdx ]
[ bsf rax, rax ]
[ mov edx,  [ argument ]  ]
[ lea rax, ptr [rdi + rax * 1] ]
[ cmp byte ptr [rax], sil ]
[ bsf rax, rax ]
[ mov edx,  [ argument ]  ]
[ lea rax, ptr [rdi + rax * 1] ]
[ cmp byte ptr [rax], sil ]
[ cmovnz rax, rdx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac6709ec
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ mov rdi, rbp ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ jmp  [ addr ]  ]
[ nop edx, edi ]
[ push r12 ]
[ push rbp ]
[ mov rbp, rdi ]
[ sub rsp,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac6865be
#call parent addr: 7f5eac670bdd
#root size: 28
===============================================================
RET========================================================
#ret target: 7f5eac6865be
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ lea r12, ptr [rax  +  [ displacement ] ] ]
[ mov rdi, r12 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac6865ca
#call parent addr: 7f5eac670bdd
#root size: 28
===============================================================
RET========================================================
#ret target: 7f5eac6865ca
#function name: malloc
#func_id: 32
===========================================================
[ test rax, rax ]
[ jz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ mov rdx, r12 ]
[ mov rsi, rbp ]
[ mov rdi, rax ]
[ pop rbp ]
[ pop r12 ]
[ jmp  [ addr ]  ]
[ mov r15, rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rdi, rax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac670bed
#call parent addr: 7f5eac670bdd
#root size: 28
===============================================================
RET========================================================
#ret target: 7f5eac670bed
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov r13, rax ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ cmp r13,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp byte ptr [r15],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov qword ptr [rsp], r15 ]
[ mov rbp, qword ptr [rip  +  [ displacement ] ] ]
[ test rbp, rbp ]
[ jz  [ addr ]  ]
[ cmp byte ptr [r15 + r13 * 1- [ displacement ] ],  [ argument ]  ]
[ lea rax, ptr [r13- [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov r13, rax ]
[ cmp r13,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp byte ptr [r15],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov byte ptr [r15 + r13 * 1],  [ argument ]  ]
[ add r13,  [ argument ]  ]
[ mov qword ptr [rsp], r15 ]
[ jmp  [ addr ]  ]
[ mov rbp, qword ptr [rip  +  [ displacement ] ] ]
[ test rbp, rbp ]
[ jz  [ addr ]  ]
[ mov r14, rbp ]
[ jmp  [ addr ]  ]
[ cmp qword ptr [r14  +  [ displacement ] ], r13 ]
[ jnz  [ addr ]  ]
[ mov rsi, qword ptr [r14  +  [ displacement ] ] ]
[ mov rdx, r13 ]
[ mov rdi, r15 ]
[ call  [ addr.func ]  ]
[ mov r14, qword ptr [r14] ]
[ test r14, r14 ]
[ jz  [ addr ]  ]
[ cmp qword ptr [r14  +  [ displacement ] ], r13 ]
[ jnz  [ addr ]  ]
[ mov rsi, qword ptr [r14  +  [ displacement ] ] ]
[ mov rdx, r13 ]
[ mov rdi, r15 ]
[ call  [ addr.func ]  ]
[ cmp qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rdi, qword ptr [rsp  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ jmp  [ addr ]  ]
[ mov r14, qword ptr [rip  +  [ displacement ] ] ]
[ lea rsi, ptr [r14 * 4  +  [ displacement ] ] ]
[ lea rax, ptr [rsi  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rsi ]
[ lea rdi, ptr [rax + r13 * 1] ]
[ add rdi, qword ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac670cf5
#call parent addr: 7f5eac670bdd
#root size: 28
===============================================================
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ mov rdx, rcx ]
[ lea rbp, ptr [rcx + rbx * 1- [ displacement ] ] ]
[ neg rdx ]
[ and rbp, rdx ]
[ jnz  [ addr ]  ]
[ test rbx, rbx ]
[ jnz  [ addr ]  ]
[ add rbp, rcx ]
[ mov edx,  [ argument ]  ]
[ xor r9d, r9d ]
[ mov ecx,  [ argument ]  ]
[ mov r8d,  [ addr ]  ]
[ mov rsi, rbp ]
[ xor edi, edi ]
[ call  [ addr.func ]  ]
[ add rbp, rcx ]
[ mov edx,  [ argument ]  ]
[ xor r9d, r9d ]
[ mov ecx,  [ argument ]  ]
[ mov r8d,  [ addr ]  ]
[ mov rsi, rbp ]
[ xor edi, edi ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac68452b
#call parent addr: 7f5eac670cf5
#root size: 29
===============================================================
[ nop edx, edi ]
[ test r9d,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ push rbp ]
[ mov rbp, rdi ]
[ push rbx ]
[ mov ebx, ecx ]
[ test rdi, rdi ]
[ jz  [ addr ]  ]
[ mov r10d, ebx ]
[ mov rdi, rbp ]
[ mov eax,  [ argument ]  ]
[ syscall  ]
[ test dl,  [ argument ]  ]
[ jz  [ addr ]  ]
[ test byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov r10d, ecx ]
[ mov ecx,  [ argument ]  ]
[ xor edi, edi ]
[ or r10d,  [ argument ]  ]
[ mov eax, ecx ]
[ syscall  ]
[ mov r10d, ebx ]
[ mov rdi, rbp ]
[ mov eax,  [ argument ]  ]
[ syscall  ]
[ cmp rax,  [ addr ]  ]
[ jnbe  [ addr ]  ]
[ pop rbx ]
[ pop rbp ]
[ ret  ]
RET========================================================
#ret target: 7f5eac68452b
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov rdx, rax ]
[ cmp rax,  [ addr ]  ]
[ jz  [ addr ]  ]
[ cmp qword ptr [rip  +  [ displacement ] ], rax ]
[ jz  [ addr ]  ]
[ add rdx, rbp ]
[ lea rcx, ptr [rax + rbx * 1] ]
[ mov qword ptr [rip  +  [ displacement ] ], rdx ]
[ jmp  [ addr ]  ]
[ mov rsi, qword ptr [rsp  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ lea rdi, ptr [rax + rsi * 1] ]
[ mov rdx, r13 ]
[ mov rsi, r15 ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ mov qword ptr [rax  +  [ displacement ] ], rdi ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac670d1b
#call parent addr: 7f5eac670cf5
#root size: 29
===============================================================
RET========================================================
#ret target: 7f5eac670d1b
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov rcx, qword ptr [rsp  +  [ displacement ] ] ]
[ cmp qword ptr [rip  +  [ displacement ] ], r13 ]
[ mov byte ptr [rax],  [ argument ]  ]
[ mov qword ptr [rcx  +  [ displacement ] ], r13 ]
[ jnb  [ addr ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], r13 ]
[ xor r8d, r8d ]
[ cmp byte ptr [r15],  [ argument ]  ]
[ setnz r8b ]
[ add r8d, r8d ]
[ test r14, r14 ]
[ jz  [ addr ]  ]
[ lea rax, ptr [r14- [ displacement ] ] ]
[ cmp rax,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ mov rdi, r14 ]
[ movd xmm1, r8d ]
[ xor eax, eax ]
[ shr rdi,  [ argument ]  ]
[ pshufd xmm0, xmm1,  [ argument ]  ]
[ mov rdx, rax ]
[ add rax,  [ argument ]  ]
[ shl rdx,  [ argument ]  ]
[ movups xmmword ptr [rcx + rdx * 1 + [ displacement ] ], xmm0 ]
[ cmp rax, rdi ]
[ jnz  [ addr ]  ]
[ mov rax, r14 ]
[ and rax,  [ addr ]  ]
[ test r14b,  [ argument ]  ]
[ jz  [ addr ]  ]
[ lea rsi, ptr [rcx + rax * 4] ]
[ lea rdi, ptr [rax  +  [ displacement ] ] ]
[ mov dword ptr [rsi  +  [ displacement ] ], r8d ]
[ cmp r14, rdi ]
[ jbe  [ addr ]  ]
[ mov rdx, rax ]
[ add rax,  [ argument ]  ]
[ shl rdx,  [ argument ]  ]
[ movups xmmword ptr [rcx + rdx * 1 + [ displacement ] ], xmm0 ]
[ cmp rax, rdi ]
[ jnz  [ addr ]  ]
[ mov rax, r14 ]
[ and rax,  [ addr ]  ]
[ test r14b,  [ argument ]  ]
[ jz  [ addr ]  ]
[ lea rsi, ptr [rcx + rax * 4] ]
[ lea rdi, ptr [rax  +  [ displacement ] ] ]
[ mov dword ptr [rsi  +  [ displacement ] ], r8d ]
[ cmp r14, rdi ]
[ jbe  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ cmp qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rcx  +  [ displacement ] ], rax ]
[ jz  [ addr ]  ]
[ mov r14, qword ptr [rsp  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rcx ]
[ mov rsi, qword ptr [rsp  +  [ displacement ] ] ]
[ add r14, r13 ]
[ lea rdi, ptr [rcx + r14 * 1] ]
[ call  [ addr.func ]  ]
[ mov qword ptr [rcx  +  [ displacement ] ],  [ argument ]  ]
[ jmp  [ addr ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], rcx ]
[ mov qword ptr [rcx], rbp ]
[ mov qword ptr [r12 + rbx * 8], rcx ]
[ add rbx,  [ argument ]  ]
[ jmp  [ addr ]  ]
[ mov rdi, qword ptr [rsp] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac670c8b
#call parent addr: 7f5eac670cf5
#root size: 29
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ cmp rcx, rdi ]
[ jz  [ addr ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5eac670c8b
#function name: free
#func_id: 34
===========================================================
[ jmp  [ addr ]  ]
[ mov rsi, qword ptr [rsp  +  [ displacement ] ] ]
[ mov rdi, qword ptr [rsp  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac670bba
#call parent addr: 7f5eac670cf5
#root size: 29
===============================================================
RET========================================================
#ret target: 7f5eac670bba
#function name: realloc
#func_id: 35
===========================================================
CALL===========================================================
#now call addr: 7f5eac670bdd
#call parent addr: 7f5eac670cf5
#root size: 29
===============================================================
CALL===========================================================
#now call addr: 7f5eac6709ec
#call parent addr: 7f5eac670bdd
#root size: 30
===============================================================
RET========================================================
#ret target: 7f5eac6709ec
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6865be
#call parent addr: 7f5eac670bdd
#root size: 30
===============================================================
RET========================================================
#ret target: 7f5eac6865be
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6865ca
#call parent addr: 7f5eac670bdd
#root size: 30
===============================================================
RET========================================================
#ret target: 7f5eac6865ca
#function name: malloc
#func_id: 32
===========================================================
CALL===========================================================
#now call addr: 7f5eac670bed
#call parent addr: 7f5eac670bdd
#root size: 30
===============================================================
RET========================================================
#ret target: 7f5eac670bed
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac670c58
#call parent addr: 7f5eac670bdd
#root size: 30
===============================================================
[ nop edx, edi ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ cmp rdx,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ sub rsi, rdi ]
[ mov r10, rdx ]
[ cmp r10,  [ argument ]  ]
[ jnb  [ addr ]  ]
[ test r10,  [ argument ]  ]
[ jz  [ addr ]  ]
[ movzx eax, byte ptr [rdi] ]
[ movzx edx, byte ptr [rdi + rsi * 1] ]
[ sub r10,  [ argument ]  ]
[ jz  [ addr ]  ]
[ add rdi,  [ argument ]  ]
[ sub eax, edx ]
[ jnz  [ addr ]  ]
[ test r10,  [ argument ]  ]
[ jz  [ addr ]  ]
[ movzx eax, word ptr [rdi] ]
[ movzx edx, word ptr [rdi + rsi * 1] ]
[ sub r10,  [ argument ]  ]
[ jz  [ addr ]  ]
[ add rdi,  [ argument ]  ]
[ cmp eax, edx ]
[ jnz  [ addr ]  ]
[ test r10,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [rdi] ]
[ mov edx, dword ptr [rdi + rsi * 1] ]
[ sub r10,  [ argument ]  ]
[ jz  [ addr ]  ]
[ add rdi,  [ argument ]  ]
[ cmp eax, edx ]
[ jnz  [ addr ]  ]
[ test r10,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rdi] ]
[ mov rdx, qword ptr [rdi + rsi * 1] ]
[ sub r10,  [ argument ]  ]
[ jz  [ addr ]  ]
[ add rdi,  [ argument ]  ]
[ cmp rax, rdx ]
[ jnz  [ addr ]  ]
[ movdqu xmm1, xmmword ptr [rdi] ]
[ movdqu xmm0, xmmword ptr [rdi + rsi * 1] ]
[ pcmpeqb xmm1, xmm0 ]
[ pmovmskb edx, xmm1 ]
[ xor eax, eax ]
[ sub edx,  [ argument ]  ]
[ jz  [ addr ]  ]
[ bsf ecx, edx ]
[ lea rcx, ptr [rdi + rcx * 1] ]
[ movzx eax, byte ptr [rcx] ]
[ movzx edx, byte ptr [rsi + rcx * 1] ]
[ jmp  [ addr ]  ]
[ xor eax, eax ]
[ ret  ]
RET========================================================
#ret target: 7f5eac670c58
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ xor eax, eax ]
[ test rbx, rbx ]
[ jz  [ addr ]  ]
[ nop dword ptr [rax + rax * 1], eax ]
[ cmp qword ptr [r12 + rax * 8], r14 ]
[ jz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac670c8b
#call parent addr: 7f5eac670bdd
#root size: 30
===============================================================
[ sub rsp,  [ argument ]  ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ xor esi, esi ]
[ mov rdi, rcx ]
[ sub rdx, rcx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac68461b
#call parent addr: 7f5eac670c8b
#root size: 31
===============================================================
RET========================================================
#ret target: 7f5eac68461b
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ add rsp,  [ argument ]  ]
[ ret  ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac670bba
#call parent addr: 7f5eac670c8b
#root size: 31
===============================================================
[ xor eax, eax ]
[ jmp  [ addr ]  ]
[ mov qword ptr [rdi], rax ]
[ mov rax, r8 ]
[ ret  ]
RET========================================================
#ret target: 7f5eac670bba
#function name: realloc
#func_id: 35
===========================================================
[ mov rbp, qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rsp],  [ argument ]  ]
[ xor r13d, r13d ]
[ test rbp, rbp ]
[ jnz  [ addr ]  ]
[ nop ]
[ cmp qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rdi, qword ptr [rsp  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
[ mov r14, rbp ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac670cf5
#call parent addr: 7f5eac670c8b
#root size: 31
===============================================================
RET========================================================
#ret target: 7f5eac670cf5
#function name: malloc
#func_id: 32
===========================================================
CALL===========================================================
#now call addr: 7f5eac670d1b
#call parent addr: 7f5eac670c8b
#root size: 31
===============================================================
[ ret  ]
RET========================================================
#ret target: 7f5eac670d1b
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov rcx, qword ptr [rsp  +  [ displacement ] ] ]
[ cmp qword ptr [rip  +  [ displacement ] ], r13 ]
[ mov byte ptr [rax],  [ argument ]  ]
[ mov qword ptr [rcx  +  [ displacement ] ], r13 ]
[ jnb  [ addr ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], r13 ]
[ xor r8d, r8d ]
[ cmp byte ptr [r15],  [ argument ]  ]
[ setnz r8b ]
[ add r8d, r8d ]
[ test r14, r14 ]
[ jz  [ addr ]  ]
[ lea rax, ptr [r14- [ displacement ] ] ]
[ cmp rax,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ xor r8d, r8d ]
[ cmp byte ptr [r15],  [ argument ]  ]
[ setnz r8b ]
[ add r8d, r8d ]
[ test r14, r14 ]
[ jz  [ addr ]  ]
[ lea rax, ptr [r14- [ displacement ] ] ]
[ cmp rax,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ mov rdi, r14 ]
[ movd xmm1, r8d ]
[ xor eax, eax ]
[ shr rdi,  [ argument ]  ]
[ pshufd xmm0, xmm1,  [ argument ]  ]
[ mov rdx, rax ]
[ add rax,  [ argument ]  ]
[ shl rdx,  [ argument ]  ]
[ movups xmmword ptr [rcx + rdx * 1 + [ displacement ] ], xmm0 ]
[ cmp rax, rdi ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac670c8b
#call parent addr: 7f5eac670c8b
#root size: 31
===============================================================
RET========================================================
#ret target: 7f5eac670c8b
#function name: free
#func_id: 34
===========================================================
CALL===========================================================
#now call addr: 7f5eac670bba
#call parent addr: 7f5eac670c8b
#root size: 31
===============================================================
[ mov rax, r8 ]
[ ret  ]
RET========================================================
#ret target: 7f5eac670bba
#function name: realloc
#func_id: 35
===========================================================
[ mov qword ptr [r12 + rbx * 8],  [ argument ]  ]
[ add rsp,  [ argument ]  ]
[ mov rax, r12 ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ mov rdi, qword ptr [rip  +  [ displacement ] ] ]
[ cmp qword ptr [rdi],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ lea rsp, ptr [rbp- [ displacement ] ] ]
[ pop rbx ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ pop rbp ]
[ ret  ]
[ mov rdi, qword ptr [rip  +  [ displacement ] ] ]
[ xor esi, esi ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66ae77
#call parent addr: 7f5eac670c8b
#root size: 31
===============================================================
[ nop edx, edi ]
[ test rsi, rsi ]
[ jz  [ addr ]  ]
[ lea rax, ptr [rsi + rsi * 8] ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ shl rax,  [ argument ]  ]
[ lea rax, ptr [rdx + rax * 1 + [ displacement ] ] ]
[ cmp qword ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ test rdi, rdi ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ cmp qword ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov dword ptr [rax],  [ argument ]  ]
[ test rdi, rdi ]
[ jnz  [ addr ]  ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ mov rdi, qword ptr [rdx  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ lea rdx, ptr [rsi + rsi * 8] ]
[ lea rcx, ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rax  +  [ displacement ] ], rdi ]
[ shl rdx,  [ argument ]  ]
[ mov rdx, qword ptr [rcx + rdx * 1] ]
[ lea rcx, ptr [rip- [ displacement ] ] ]
[ mov qword ptr [rax  +  [ displacement ] ], rcx ]
[ mov qword ptr [rax  +  [ displacement ] ], rdx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac66ae77
#function name: _dl_debug_state
#func_id: 18
===========================================================
[ cmp qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov dword ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ movzx eax, byte ptr [rip  +  [ displacement ] ] ]
[ add dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ and eax,  [ addr ]  ]
[ or eax,  [ argument ]  ]
[ mov byte ptr [rip  +  [ displacement ] ], al ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ mov qword ptr [r15  +  [ displacement ] ], rax ]
[ add qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ cmp qword ptr [rip  +  [ displacement ] ],  [ addr ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], r15 ]
[ jz  [ addr ]  ]
[ cmp word ptr [rip- [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax, qword ptr [rax] ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ jmp  [ addr ]  ]
[ movzx eax, byte ptr [rip  +  [ displacement ] ] ]
[ add dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ and eax,  [ addr ]  ]
[ or eax,  [ argument ]  ]
[ mov byte ptr [rip  +  [ displacement ] ], al ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ mov qword ptr [r15  +  [ displacement ] ], rax ]
[ add qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ cmp qword ptr [rip  +  [ displacement ] ],  [ addr ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], r15 ]
[ jz  [ addr ]  ]
[ cmp word ptr [rip- [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp word ptr [rip- [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ xor eax, eax ]
[ cmp qword ptr [r15],  [ argument ]  ]
[ setz al ]
[ neg rax ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ jmp  [ addr ]  ]
[ cmp word ptr [rip- [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp word ptr [rip- [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ movzx eax, word ptr [rip- [ displacement ] ] ]
[ lea rdx, ptr [rip- [ displacement ] ] ]
[ add rdx, qword ptr [rip- [ displacement ] ] ]
[ mov qword ptr [rip  +  [ displacement ] ], rdx ]
[ lea rcx, ptr [rax * 8] ]
[ mov word ptr [rip  +  [ displacement ] ], ax ]
[ sub rcx, rax ]
[ lea rcx, ptr [rdx + rcx * 8- [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ lea rbx, ptr [rip  +  [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov rdx, rcx ]
[ sub rax,  [ argument ]  ]
[ sub rcx,  [ argument ]  ]
[ cmp dword ptr [rdx],  [ addr ]  ]
[ jz  [ addr ]  ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ movdqu xmm0, xmmword ptr [rdx  +  [ displacement ] ] ]
[ movdqu xmm1, xmmword ptr [rdx  +  [ displacement ] ] ]
[ cmp qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ shufpd xmm0, xmm1,  [ argument ]  ]
[ movups xmmword ptr [rip  +  [ displacement ] ], xmm0 ]
[ jz  [ addr ]  ]
[ call  [ addr.func ]  ]
[ cmp qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ lea rbx, ptr [rip  +  [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rbx] ]
[ mov byte ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66af84
#call parent addr: 7f5eac670c8b
#root size: 31
===============================================================
[ nop edx, edi ]
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov r8, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax, r8 ]
[ ret  ]
RET========================================================
#ret target: 7f5eac66af84
#function name: _dl_mcount
#func_id: 19
===========================================================
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rcx, qword ptr [rbp- [ displacement ] ] ]
[ mov qword ptr [rax  +  [ displacement ] ], rcx ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rcx, qword ptr [rbp- [ displacement ] ] ]
[ mov qword ptr [rax  +  [ displacement ] ], rcx ]
[ mov rbx, qword ptr [rbp- [ displacement ] ] ]
[ mov dword ptr [rbx  +  [ displacement ] ],  [ argument ]  ]
[ call  [ addr.func ]  ]
[ mov rbx, qword ptr [rbp- [ displacement ] ] ]
[ mov dword ptr [rbx  +  [ displacement ] ],  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66afcc
#call parent addr: 7f5eac670c8b
#root size: 31
===============================================================
[ nop edx, edi ]
[ ret  ]
RET========================================================
#ret target: 7f5eac66afcc
#function name: _dl_debug_state
#func_id: 18
===========================================================
[ nop ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ cmp qword ptr [rax],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ xor r13d, r13d ]
[ cmp qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov esi,  [ argument ]  ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66b01c
#call parent addr: 7f5eac670c8b
#root size: 31
===============================================================
[ nop edx, edi ]
[ mov eax,  [ argument ]  ]
[ syscall  ]
[ cmp rax,  [ addr ]  ]
[ jnbe  [ addr ]  ]
[ ret  ]
[ neg eax ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ mov eax,  [ addr ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5eac66b01c
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ test eax, eax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ mov rsi, qword ptr [rax] ]
[ test rsi, rsi ]
[ jnz  [ addr ]  ]
[ rdtsc  ]
[ xor ebx, ebx ]
[ mov r12, rax ]
[ shl rdx,  [ argument ]  ]
[ mov rdi, r15 ]
[ or r12, rdx ]
[ cmp dword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov edx, r13d ]
[ setz bl ]
[ xor r8d, r8d ]
[ mov ecx, ebx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66b05f
#call parent addr: 7f5eac670c8b
#root size: 31
===============================================================
[ nop edx, edi ]
[ push rbp ]
[ lea eax, ptr [rdx  +  [ displacement ] ] ]
[ lea rax, ptr [rax + rax * 2] ]
[ lea rax, ptr [rax * 8  +  [ displacement ] ] ]
[ mov rbp, rsp ]
[ push r15 ]
[ shr rax,  [ argument ]  ]
[ push r14 ]
[ shl rax,  [ argument ]  ]
[ push r13 ]
[ push r12 ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov dword ptr [rbp- [ displacement ] ], ecx ]
[ mov rcx, rax ]
[ and rcx,  [ addr ]  ]
[ mov rbx, rsp ]
[ mov qword ptr [rbp- [ displacement ] ], rdi ]
[ sub rbx, rcx ]
[ mov dword ptr [rbp- [ displacement ] ], r8d ]
[ mov rcx, rbx ]
[ cmp rsp, rcx ]
[ jz  [ addr ]  ]
[ sub rsp,  [ argument ]  ]
[ or qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ cmp rsp, rcx ]
[ jnz  [ addr ]  ]
[ and eax,  [ argument ]  ]
[ sub rsp, rax ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ and eax,  [ argument ]  ]
[ sub rsp, rax ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ mov rbx, qword ptr [rbp- [ displacement ] ] ]
[ lea r10, ptr [rsp  +  [ displacement ] ] ]
[ and r10,  [ addr ]  ]
[ movzx eax, byte ptr [rbx  +  [ displacement ] ] ]
[ lea rcx, ptr [r10  +  [ displacement ] ] ]
[ mov qword ptr [r10  +  [ displacement ] ], rbx ]
[ mov r15, r10 ]
[ mov dword ptr [r10],  [ argument ]  ]
[ mov byte ptr [rbp- [ displacement ] ], al ]
[ and eax,  [ addr ]  ]
[ or eax,  [ argument ]  ]
[ mov qword ptr [r10  +  [ displacement ] ], rcx ]
[ mov byte ptr [rbx  +  [ displacement ] ], al ]
[ test edx, edx ]
[ jz  [ addr ]  ]
[ lea eax, ptr [rdx  +  [ displacement ] ] ]
[ mov edi,  [ argument ]  ]
[ mov dword ptr [rbp- [ displacement ] ], eax ]
[ nop word ptr [rax + rax * 1], ax ]
[ lea eax, ptr [rdi  +  [ displacement ] ] ]
[ mov r8, qword ptr [rsi] ]
[ mov r9d, edi ]
[ mov dword ptr [rcx],  [ argument ]  ]
[ mov rdi, rax ]
[ lea rax, ptr [rax + rax * 2] ]
[ add rsi,  [ argument ]  ]
[ add rcx,  [ argument ]  ]
[ lea rax, ptr [r10 + rax * 8] ]
[ movq xmm0, r8 ]
[ movq xmm1, rax ]
[ punpcklqdq xmm0, xmm1 ]
[ movups xmmword ptr [rcx- [ displacement ] ], xmm0 ]
[ movzx eax, byte ptr [r8  +  [ displacement ] ] ]
[ and eax,  [ addr ]  ]
[ or eax,  [ argument ]  ]
[ mov byte ptr [r8  +  [ displacement ] ], al ]
[ cmp edx, r9d ]
[ jnz  [ addr ]  ]
[ or qword ptr [rsp + rax * 1- [ displacement ] ],  [ argument ]  ]
[ jmp  [ addr ]  ]
[ mov rbx, qword ptr [rbp- [ displacement ] ] ]
[ lea r10, ptr [rsp  +  [ displacement ] ] ]
[ and r10,  [ addr ]  ]
[ movzx eax, byte ptr [rbx  +  [ displacement ] ] ]
[ lea rcx, ptr [r10  +  [ displacement ] ] ]
[ mov qword ptr [r10  +  [ displacement ] ], rbx ]
[ mov r15, r10 ]
[ mov dword ptr [r10],  [ argument ]  ]
[ mov byte ptr [rbp- [ displacement ] ], al ]
[ and eax,  [ addr ]  ]
[ or eax,  [ argument ]  ]
[ mov qword ptr [r10  +  [ displacement ] ], rcx ]
[ mov byte ptr [rbx  +  [ displacement ] ], al ]
[ test edx, edx ]
[ jz  [ addr ]  ]
[ lea eax, ptr [rdx  +  [ displacement ] ] ]
[ mov edi,  [ argument ]  ]
[ mov dword ptr [rbp- [ displacement ] ], eax ]
[ nop word ptr [rax + rax * 1], ax ]
[ lea eax, ptr [rdi  +  [ displacement ] ] ]
[ mov r8, qword ptr [rsi] ]
[ mov r9d, edi ]
[ mov dword ptr [rcx],  [ argument ]  ]
[ mov rdi, rax ]
[ lea rax, ptr [rax + rax * 2] ]
[ add rsi,  [ argument ]  ]
[ add rcx,  [ argument ]  ]
[ lea rax, ptr [r10 + rax * 8] ]
[ movq xmm0, r8 ]
[ movq xmm1, rax ]
[ punpcklqdq xmm0, xmm1 ]
[ movups xmmword ptr [rcx- [ displacement ] ], xmm0 ]
[ movzx eax, byte ptr [r8  +  [ displacement ] ] ]
[ and eax,  [ addr ]  ]
[ or eax,  [ argument ]  ]
[ mov byte ptr [r8  +  [ displacement ] ], al ]
[ cmp edx, r9d ]
[ jnz  [ addr ]  ]
[ lea eax, ptr [rdx- [ displacement ] ] ]
[ mov r13, qword ptr [r10  +  [ displacement ] ] ]
[ lea rax, ptr [rax + rax * 2 + [ displacement ] ] ]
[ lea rax, ptr [r10 + rax * 8] ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov qword ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ lea rax, ptr [rbp- [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rbp- [ displacement ] ], r10 ]
[ mov qword ptr [rbp- [ displacement ] ], r15 ]
[ mov dword ptr [rbp- [ displacement ] ], eax ]
[ mov rax, r10 ]
[ mov dword ptr [rax],  [ argument ]  ]
[ mov rax, qword ptr [r13  +  [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov qword ptr [rbp- [ displacement ] ], r10 ]
[ mov r13, rbx ]
[ mov rax, r10 ]
[ mov dword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ jmp  [ addr ]  ]
[ mov qword ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ lea rax, ptr [rbp- [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rbp- [ displacement ] ], r10 ]
[ mov qword ptr [rbp- [ displacement ] ], r15 ]
[ mov dword ptr [rbp- [ displacement ] ], eax ]
[ mov rax, r10 ]
[ mov dword ptr [rax],  [ argument ]  ]
[ mov rax, qword ptr [r13  +  [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ cmp qword ptr [r13  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [r13  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [r13  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [rbp- [ displacement ] ], r13 ]
[ jz  [ addr ]  ]
[ movzx eax, word ptr [r13  +  [ displacement ] ] ]
[ test ax, ax ]
[ jz  [ addr ]  ]
[ cmp qword ptr [r13  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [r13  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ xor r15d, r15d ]
[ cmp qword ptr [r13  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [r13  +  [ displacement ] ] ]
[ mov r12, qword ptr [r13  +  [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], r13 ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ mov dword ptr [rbp- [ displacement ] ], eax ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ mov dword ptr [rbp- [ displacement ] ], eax ]
[ mov rax, qword ptr [r12] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rbx, qword ptr [rbp- [ displacement ] ] ]
[ lea rcx, ptr [rbp- [ displacement ] ] ]
[ xor r15d, r15d ]
[ mov qword ptr [rbp- [ displacement ] ], rcx ]
[ mov qword ptr [rbp- [ displacement ] ], rbx ]
[ lea rbx, ptr [rbp- [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rbx ]
[ cmp rax,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ nop dword ptr [rax], eax ]
[ mov r14, qword ptr [rbp- [ displacement ] ] ]
[ add r14, qword ptr [r12  +  [ displacement ] ] ]
[ mov rdi, r14 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac67684f
#call parent addr: 7f5eac66b05f
#root size: 32
===============================================================
[ nop edx, edi ]
[ push r14 ]
[ mov esi,  [ argument ]  ]
[ push r13 ]
[ push r12 ]
[ xor r12d, r12d ]
[ push rbp ]
[ push rbx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac6707b4
#call parent addr: 7f5eac67684f
#root size: 33
===============================================================
RET========================================================
#ret target: 7f5eac6707b4
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ pop rbx ]
[ mov rax, r12 ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ ret  ]
[ mov rbx, rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov r10d, dword ptr [rip  +  [ displacement ] ] ]
[ test r10d, r10d ]
[ jnz  [ addr ]  ]
[ mov rdi, r14 ]
[ call  [ addr.func ]  ]
[ mov rax, r14 ]
[ jmp  [ addr ]  ]
[ mov rdx, qword ptr [rbp- [ displacement ] ] ]
[ mov rdi, qword ptr [rbp- [ displacement ] ] ]
[ lea rsi, ptr [rip- [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac67694e
#call parent addr: 7f5eac67684f
#root size: 33
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ push r12 ]
[ sub rsp,  [ argument ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rsp], rdi ]
[ mov qword ptr [rsp  +  [ displacement ] ], rsi ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdx ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ test rdi, rdi ]
[ jz  [ addr ]  ]
[ lea rax, ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdi ]
[ xor esi, esi ]
[ lea rdi, ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ lea rax, ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac684c8e
#call parent addr: 7f5eac67694e
#root size: 34
===============================================================
[ nop edx, edi ]
[ mov qword ptr [rdi], rbx ]
[ mov rax, rbp ]
[ xor rax, qword ptr [rip  +  [ displacement ] ] ]
[ rol rax,  [ argument ]  ]
[ mov qword ptr [rdi  +  [ displacement ] ], rax ]
[ mov qword ptr [rdi  +  [ displacement ] ], r12 ]
[ mov qword ptr [rdi  +  [ displacement ] ], r13 ]
[ mov qword ptr [rdi  +  [ displacement ] ], r14 ]
[ mov qword ptr [rdi  +  [ displacement ] ], r15 ]
[ lea rdx, ptr [rsp  +  [ displacement ] ] ]
[ xor rdx, qword ptr [rip  +  [ displacement ] ] ]
[ rol rdx,  [ argument ]  ]
[ mov qword ptr [rdi  +  [ displacement ] ], rdx ]
[ mov rax, qword ptr [rsp] ]
[ nop ]
[ xor rax, qword ptr [rip  +  [ displacement ] ] ]
[ rol rax,  [ argument ]  ]
[ mov qword ptr [rdi  +  [ displacement ] ], rax ]
[ xor eax, eax ]
[ nop rax, rcx ]
[ mov qword ptr [rdi  +  [ displacement ] ], rax ]
[ xor eax, eax ]
[ ret  ]
RET========================================================
#ret target: 7f5eac684c8e
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ nop edx, edi ]
[ mov r12d, eax ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov rcx, qword ptr [rsp  +  [ displacement ] ] ]
[ mov rdi, qword ptr [rsp  +  [ displacement ] ] ]
[ call rcx ]
CALL===========================================================
#now call addr: 7f5eac684ca8
#call parent addr: 7f5eac67694e
#root size: 34
===============================================================
[ nop edx, edi ]
[ push rbx ]
[ mov rbx, rdi ]
[ mov rdi, qword ptr [rdi] ]
[ mov ecx, dword ptr [rbx  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rbx  +  [ displacement ] ] ]
[ movzx eax, byte ptr [rdi  +  [ displacement ] ] ]
[ mov r8d, dword ptr [rbx  +  [ displacement ] ] ]
[ mov r9, qword ptr [rdi  +  [ displacement ] ] ]
[ mov edx, eax ]
[ and edx,  [ argument ]  ]
[ test al,  [ argument ]  ]
[ mov eax,  [ argument ]  ]
[ cmovz edx, eax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac676500
#call parent addr: 7f5eac684ca8
#root size: 35
===============================================================
[ nop edx, edi ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov dword ptr [rsp], edx ]
[ mov dword ptr [rsp  +  [ displacement ] ], ecx ]
[ test r9, r9 ]
[ js  [ addr ]  ]
[ cmp qword ptr [rip  +  [ displacement ] ], r9 ]
[ mov rbp, r9 ]
[ lea r14, ptr [rip  +  [ displacement ] ] ]
[ jbe  [ addr ]  ]
[ lea rax, ptr [r9 + r9 * 8] ]
[ mov r12, rdi ]
[ mov r13, rsi ]
[ mov ebx, r8d ]
[ shl rax,  [ argument ]  ]
[ mov r15, qword ptr [r14 + rax * 1] ]
[ test r15, r15 ]
[ jnz  [ addr ]  ]
[ movzx eax, byte ptr [r15  +  [ displacement ] ] ]
[ mov edx, eax ]
[ shr al,  [ argument ]  ]
[ shr dl,  [ argument ]  ]
[ or eax, edx ]
[ test al,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rsi, r15 ]
[ mov rdi, r13 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac676500
#root size: 36
===============================================================
[ nop edx, edi ]
[ push rbp ]
[ mov rbp, rdi ]
[ push rbx ]
[ mov rbx, rsi ]
[ sub rsp,  [ argument ]  ]
[ mov rsi, qword ptr [rsi  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 37
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov r8d, eax ]
[ mov eax,  [ argument ]  ]
[ test r8d, r8d ]
[ jz  [ addr ]  ]
[ mov rbx, qword ptr [rbx  +  [ displacement ] ] ]
[ test rbx, rbx ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ mov rsi, qword ptr [rbx] ]
[ mov rdi, rbp ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 37
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov eax,  [ argument ]  ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ ret  ]
[ mov rbx, qword ptr [rbx  +  [ displacement ] ] ]
[ test rbx, rbx ]
[ jz  [ addr ]  ]
[ mov rsi, qword ptr [rbx] ]
[ mov rdi, rbp ]
[ call  [ addr.func ]  ]
[ add rsp,  [ argument ]  ]
[ xor eax, eax ]
[ pop rbx ]
[ pop rbp ]
[ ret  ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ test byte ptr [r15  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov r15, qword ptr [r15  +  [ displacement ] ] ]
[ test r15, r15 ]
[ jz  [ addr ]  ]
[ movzx eax, byte ptr [r15  +  [ displacement ] ] ]
[ mov edx, eax ]
[ shr al,  [ argument ]  ]
[ shr dl,  [ argument ]  ]
[ or eax, edx ]
[ test al,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rsi, r15 ]
[ mov rdi, r13 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac6714e4
#root size: 37
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 38
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 38
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 38
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov rdx, qword ptr [r15  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rax  +  [ displacement ] ] ]
[ mov rdi, r13 ]
[ add rsi, qword ptr [rdx  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac671512
#call parent addr: 7f5eac6714e4
#root size: 38
===============================================================
RET========================================================
#ret target: 7f5eac671512
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov rdi, qword ptr [r15  +  [ displacement ] ] ]
[ mov rsi, r13 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac6714e4
#root size: 38
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 39
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 39
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac671512
#call parent addr: 7f5eac6714e4
#root size: 39
===============================================================
RET========================================================
#ret target: 7f5eac671512
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov eax, ebx ]
[ mov edx, dword ptr [rip  +  [ displacement ] ] ]
[ and eax,  [ addr ]  ]
[ mov dword ptr [rsp  +  [ displacement ] ], eax ]
[ test dl,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov r10d, dword ptr [rip  +  [ displacement ] ] ]
[ test r10d, r10d ]
[ jnz  [ addr ]  ]
[ mov esi,  [ argument ]  ]
[ mov rdi, r13 ]
[ mov byte ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac671588
#call parent addr: 7f5eac6714e4
#root size: 39
===============================================================
RET========================================================
#ret target: 7f5eac671588
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ test rax, rax ]
[ jz  [ addr ]  ]
[ test r12, r12 ]
[ jz  [ addr ]  ]
[ mov rdi, r12 ]
[ mov rsi, r13 ]
[ call  [ addr.func ]  ]
[ mov rdi, r13 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac671735
#call parent addr: 7f5eac6714e4
#root size: 39
===============================================================
RET========================================================
#ret target: 7f5eac671735
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ add rax,  [ argument ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ test byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ test r12, r12 ]
[ jz  [ addr ]  ]
[ cmp qword ptr [r12  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rbp ]
[ mov byte ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov rbp, qword ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ lea rax, ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], r12 ]
[ mov r15, rax ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ lea r11, ptr [r12  +  [ displacement ] ] ]
[ cmp rax,  [ addr ]  ]
[ jz  [ addr ]  ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov r12, qword ptr [r12  +  [ displacement ] ] ]
[ test r12, r12 ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ lea r11, ptr [r12  +  [ displacement ] ] ]
[ cmp rax,  [ addr ]  ]
[ jz  [ addr ]  ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ cmp byte ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov r12, qword ptr [rsp  +  [ displacement ] ] ]
[ mov rbp, qword ptr [rsp  +  [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov rcx, qword ptr [rsp  +  [ displacement ] ] ]
[ test rcx, rcx ]
[ jz  [ addr ]  ]
[ movzx eax, byte ptr [rcx  +  [ displacement ] ] ]
[ mov byte ptr [rsp  +  [ displacement ] ], al ]
[ and eax,  [ argument ]  ]
[ cmp al,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rcx  +  [ displacement ] ] ]
[ lea r15, ptr [rcx  +  [ displacement ] ] ]
[ cmp rax,  [ addr ]  ]
[ jz  [ addr ]  ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ test r12, r12 ]
[ mov edx, ebx ]
[ mov rdi, r13 ]
[ cmovnz rax, r12 ]
[ sub rsp,  [ argument ]  ]
[ mov rcx, rax ]
[ lea rax, ptr [rsp  +  [ displacement ] ] ]
[ push rax ]
[ push  [ argument ]  ]
[ push rcx ]
[ mov rsi, qword ptr [rsp  +  [ displacement ] ] ]
[ mov rcx, r15 ]
[ lea r9, ptr [rsp  +  [ displacement ] ] ]
[ lea r8, ptr [rsp  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
[ cmp qword ptr [rip  +  [ displacement ] ],  [ addr ]  ]
[ jz  [ addr ]  ]
[ test r12, r12 ]
[ jnz  [ addr ]  ]
[ sub rsp,  [ argument ]  ]
[ lea rcx, ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rsp  +  [ displacement ] ] ]
[ push rax ]
[ push  [ argument ]  ]
[ push qword ptr [rip  +  [ displacement ] ] ]
[ lea r9, ptr [rsp  +  [ displacement ] ] ]
[ lea r8, ptr [rsp  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ sub rsp,  [ argument ]  ]
[ mov edx, ebx ]
[ lea rcx, ptr [rip  +  [ displacement ] ] ]
[ mov rdi, r13 ]
[ lea rax, ptr [rsp  +  [ displacement ] ] ]
[ push rax ]
[ push  [ argument ]  ]
[ push r12 ]
[ mov rsi, qword ptr [rsp  +  [ displacement ] ] ]
[ lea r9, ptr [rsp  +  [ displacement ] ] ]
[ lea r8, ptr [rsp  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac67179e
#call parent addr: 7f5eac6714e4
#root size: 39
===============================================================
[ push rbp ]
[ mov rbp, rsp ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov rax, qword ptr [rcx] ]
[ mov qword ptr [rbp- [ displacement ] ], rdi ]
[ mov qword ptr [rbp- [ displacement ] ], rsi ]
[ mov r14, qword ptr [rbp  +  [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rcx ]
[ mov qword ptr [rbp- [ displacement ] ], r8 ]
[ mov qword ptr [rbp- [ displacement ] ], r9 ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ add rax, qword ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rsi + rax * 1 + [ displacement ] ] ]
[ mov rsi, rsp ]
[ mov rcx, rax ]
[ and rax,  [ addr ]  ]
[ sub rsi, rax ]
[ and rcx,  [ addr ]  ]
[ mov rax, rsi ]
[ cmp rsp, rax ]
[ jz  [ addr ]  ]
[ sub rsp,  [ argument ]  ]
[ or qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ cmp rsp, rax ]
[ jnz  [ addr ]  ]
[ and ecx,  [ argument ]  ]
[ sub rsp, rcx ]
[ test rcx, rcx ]
[ jnz  [ addr ]  ]
[ and edx,  [ addr ]  ]
[ lea rax, ptr [rsp  +  [ displacement ] ] ]
[ mov dword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov r12, r14 ]
[ mov dword ptr [rbp- [ displacement ] ], edx ]
[ and rax,  [ addr ]  ]
[ mov qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov r15, rax ]
[ nop dword ptr [rax + rax * 1], eax ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ mov rbx, qword ptr [rax] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov eax, dword ptr [rax] ]
[ mov dword ptr [rbp- [ displacement ] ], eax ]
[ and eax,  [ argument ]  ]
[ mov r13d, eax ]
[ jnz  [ addr ]  ]
[ mov rdx, qword ptr [rbx  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rbx  +  [ displacement ] ] ]
[ mov rdi, r15 ]
[ xor r13d, r13d ]
[ call  [ addr.func ]  ]
[ or qword ptr [rsp + rcx * 1- [ displacement ] ],  [ argument ]  ]
[ jmp  [ addr ]  ]
[ and edx,  [ addr ]  ]
[ lea rax, ptr [rsp  +  [ displacement ] ] ]
[ mov dword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov r12, r14 ]
[ mov dword ptr [rbp- [ displacement ] ], edx ]
[ and rax,  [ addr ]  ]
[ mov qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov r15, rax ]
[ nop dword ptr [rax + rax * 1], eax ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ mov rbx, qword ptr [rax] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov eax, dword ptr [rax] ]
[ mov dword ptr [rbp- [ displacement ] ], eax ]
[ and eax,  [ argument ]  ]
[ mov r13d, eax ]
[ jnz  [ addr ]  ]
[ mov rdx, qword ptr [rbx  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rbx  +  [ displacement ] ] ]
[ mov rdi, r15 ]
[ xor r13d, r13d ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66fb4b
#call parent addr: 7f5eac67179e
#root size: 40
===============================================================
RET========================================================
#ret target: 7f5eac66fb4b
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov dword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov r14, rax ]
[ lea rax, ptr [rbp- [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ not rax ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov rax, r14 ]
[ mov r14, rbx ]
[ mov rbx, r13 ]
[ mov r13, rax ]
[ nop dword ptr [rax + rax * 1], eax ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ cmp rax, rbx ]
[ jbe  [ addr ]  ]
[ cmp dword ptr [r14 + rbx * 4 + [ displacement ] ],  [ argument ]  ]
[ lea r9, ptr [rbx  +  [ displacement ] ] ]
[ jz  [ addr ]  ]
[ mov rax, rbx ]
[ mov rdi, r13 ]
[ shl rax,  [ argument ]  ]
[ add rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rax  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rax] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac67179e
#root size: 40
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov rdx, qword ptr [rbp- [ displacement ] ] ]
[ mov rsi, qword ptr [rbp- [ displacement ] ] ]
[ mov rdi, rax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac67179e
#root size: 40
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ sub rax, r15 ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ test byte ptr [rax],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov r8, qword ptr [rbp  +  [ displacement ] ] ]
[ mov ecx, dword ptr [rbp  +  [ displacement ] ] ]
[ mov rdx, r12 ]
[ mov rdi, r15 ]
[ mov rsi, qword ptr [rbp- [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac67179e
#root size: 40
===============================================================
[ push rbp ]
[ mov rbp, rsp ]
[ push r15 ]
[ push r14 ]
[ mov r14, rsi ]
[ push r13 ]
[ mov r13, rdi ]
[ push r12 ]
[ push rbx ]
[ mov rbx, r8 ]
[ sub rsp,  [ argument ]  ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ test ecx, ecx ]
[ jnz  [ addr ]  ]
[ mov esi,  [ addr ]  ]
[ mov rdi, r13 ]
[ xor eax, eax ]
[ call  [ addr.func ]  ]
[ mov esi,  [ addr ]  ]
[ mov rdi, r13 ]
[ xor eax, eax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 41
===============================================================
[ nop edx, edi ]
[ mov r10d, esi ]
[ mov qword ptr [rsp- [ displacement ] ], rdx ]
[ mov r9, rdi ]
[ mov r8d, esi ]
[ and r10d,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov eax, esi ]
[ and eax,  [ addr ]  ]
[ cmp eax,  [ addr ]  ]
[ jz  [ addr ]  ]
[ mov edx, r8d ]
[ mov rsi, r9 ]
[ mov edi,  [ addr ]  ]
[ mov eax,  [ argument ]  ]
[ syscall  ]
[ cmp rax,  [ addr ]  ]
[ jnbe  [ addr ]  ]
[ ret  ]
[ neg eax ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ mov eax,  [ addr ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov r12d, eax ]
[ cmp eax,  [ addr ]  ]
[ jz  [ addr ]  ]
[ lea rax, ptr [r14  +  [ displacement ] ] ]
[ xor esi, esi ]
[ mov r15d,  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov qword ptr [r14],  [ argument ]  ]
[ mov rdx, r15 ]
[ mov edi, r12d ]
[ sub rdx, rsi ]
[ add rsi, qword ptr [rbp- [ displacement ] ] ]
[ call  [ addr.func ]  ]
[ mov r12d,  [ addr ]  ]
[ lea rsp, ptr [rbp- [ displacement ] ] ]
[ mov eax, r12d ]
[ pop rbx ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ pop rbp ]
[ ret  ]
[ mov r8d, eax ]
[ mov eax, dword ptr [r14 + rbx * 4 + [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ cmp r8d,  [ addr ]  ]
[ jz  [ addr ]  ]
[ mov dword ptr [r14 + rbx * 4 + [ displacement ] ],  [ argument ]  ]
[ mov dword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ test r12, r12 ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ lea rcx, ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rax + rax * 8] ]
[ shl rax,  [ argument ]  ]
[ mov rax, qword ptr [rcx + rax * 1] ]
[ test byte ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov dword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ mov rcx, qword ptr [rbp- [ displacement ] ] ]
[ mov rsi, r15 ]
[ mov edi,  [ argument ]  ]
[ mov rdx, qword ptr [rbp- [ displacement ] ] ]
[ add rax, r15 ]
[ mov byte ptr [rax + rcx * 1],  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66fe84
#call parent addr: 7f5eac66fc11
#root size: 41
===============================================================
[ nop edx, edi ]
[ mov r8d, edi ]
[ mov rdi, rsi ]
[ mov rsi, rdx ]
[ cmp r8d,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ mov eax,  [ argument ]  ]
[ syscall  ]
[ cmp rax,  [ addr ]  ]
[ jnbe  [ addr ]  ]
[ ret  ]
[ neg eax ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ mov eax,  [ addr ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5eac66fe84
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov r8d, eax ]
[ mov eax,  [ argument ]  ]
[ test r8d, r8d ]
[ jnz  [ addr ]  ]
[ mov edx, dword ptr [rbp- [ displacement ] ] ]
[ xor eax, eax ]
[ and edx,  [ argument ]  ]
[ cmp edx,  [ argument ]  ]
[ setz al ]
[ add eax,  [ argument ]  ]
[ cmp edx,  [ argument ]  ]
[ mov edx,  [ argument ]  ]
[ cmovnz edx, dword ptr [rbp- [ displacement ] ] ]
[ mov dword ptr [rbp- [ displacement ] ], edx ]
[ mov dword ptr [r14 + rbx * 4 + [ displacement ] ], eax ]
[ jmp  [ addr ]  ]
[ mov dword ptr [r14 + rbx * 4 + [ displacement ] ], eax ]
[ jmp  [ addr ]  ]
[ add rbx,  [ argument ]  ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ cmp rax, rbx ]
[ jbe  [ addr ]  ]
[ cmp dword ptr [r14 + rbx * 4 + [ displacement ] ],  [ argument ]  ]
[ lea r9, ptr [rbx  +  [ displacement ] ] ]
[ jz  [ addr ]  ]
[ mov rax, rbx ]
[ mov rdi, r13 ]
[ shl rax,  [ argument ]  ]
[ add rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rax  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rax] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 41
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 41
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 41
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 42
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fe84
#call parent addr: 7f5eac66fc11
#root size: 42
===============================================================
RET========================================================
#ret target: 7f5eac66fe84
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 42
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 42
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 42
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 43
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fe84
#call parent addr: 7f5eac66fc11
#root size: 43
===============================================================
RET========================================================
#ret target: 7f5eac66fe84
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 43
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov rdx, qword ptr [rbp- [ displacement ] ] ]
[ mov rsi, qword ptr [rbp- [ displacement ] ] ]
[ mov rdi, rax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 43
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 43
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 44
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fe84
#call parent addr: 7f5eac66fc11
#root size: 44
===============================================================
RET========================================================
#ret target: 7f5eac66fe84
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 44
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 44
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 44
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 45
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fe84
#call parent addr: 7f5eac66fc11
#root size: 45
===============================================================
RET========================================================
#ret target: 7f5eac66fe84
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 45
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 45
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 45
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 46
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fe84
#call parent addr: 7f5eac66fc11
#root size: 46
===============================================================
RET========================================================
#ret target: 7f5eac66fe84
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 46
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 46
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 46
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 47
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fe84
#call parent addr: 7f5eac66fc11
#root size: 47
===============================================================
RET========================================================
#ret target: 7f5eac66fe84
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 47
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov rdx, qword ptr [rbp- [ displacement ] ] ]
[ mov rsi, qword ptr [rbp- [ displacement ] ] ]
[ mov rdi, rax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 47
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 47
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 48
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fe84
#call parent addr: 7f5eac66fc11
#root size: 48
===============================================================
RET========================================================
#ret target: 7f5eac66fe84
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 48
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 48
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 48
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 49
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fe84
#call parent addr: 7f5eac66fc11
#root size: 49
===============================================================
RET========================================================
#ret target: 7f5eac66fe84
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 49
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 49
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 49
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 50
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fe84
#call parent addr: 7f5eac66fc11
#root size: 50
===============================================================
RET========================================================
#ret target: 7f5eac66fe84
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 50
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 50
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 50
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 51
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fe84
#call parent addr: 7f5eac66fc11
#root size: 51
===============================================================
RET========================================================
#ret target: 7f5eac66fe84
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 51
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 51
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 51
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 52
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fe84
#call parent addr: 7f5eac66fc11
#root size: 52
===============================================================
RET========================================================
#ret target: 7f5eac66fe84
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 52
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 52
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 52
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 53
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fe84
#call parent addr: 7f5eac66fc11
#root size: 53
===============================================================
RET========================================================
#ret target: 7f5eac66fe84
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 53
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 53
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 53
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 54
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fe84
#call parent addr: 7f5eac66fc11
#root size: 54
===============================================================
RET========================================================
#ret target: 7f5eac66fe84
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 54
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 54
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 54
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 55
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fe84
#call parent addr: 7f5eac66fc11
#root size: 55
===============================================================
RET========================================================
#ret target: 7f5eac66fe84
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 55
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov rdx, qword ptr [rbp- [ displacement ] ] ]
[ mov rsi, qword ptr [rbp- [ displacement ] ] ]
[ mov rdi, rax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 55
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 55
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 56
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fe84
#call parent addr: 7f5eac66fc11
#root size: 56
===============================================================
RET========================================================
#ret target: 7f5eac66fe84
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov r8d, eax ]
[ mov eax,  [ argument ]  ]
[ test r8d, r8d ]
[ jnz  [ addr ]  ]
[ mov edx, dword ptr [rbp- [ displacement ] ] ]
[ xor eax, eax ]
[ and edx,  [ argument ]  ]
[ cmp edx,  [ argument ]  ]
[ setz al ]
[ add eax,  [ argument ]  ]
[ cmp edx,  [ argument ]  ]
[ mov edx,  [ argument ]  ]
[ cmovnz edx, dword ptr [rbp- [ displacement ] ] ]
[ mov dword ptr [rbp- [ displacement ] ], edx ]
[ mov dword ptr [r14 + rbx * 4 + [ displacement ] ], eax ]
[ jmp  [ addr ]  ]
[ mov edx, dword ptr [rbp- [ displacement ] ] ]
[ test edx, edx ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ cmp eax,  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp eax,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ add qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ mov ecx, dword ptr [rbp- [ displacement ] ] ]
[ or dword ptr [rbp- [ displacement ] ], ecx ]
[ cmp qword ptr [rax],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov esi, dword ptr [rbp- [ displacement ] ] ]
[ test esi, esi ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ mov ecx, dword ptr [rax  +  [ displacement ] ] ]
[ test ecx, ecx ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ mov rbx, qword ptr [rax] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov eax, dword ptr [rax] ]
[ mov dword ptr [rbp- [ displacement ] ], eax ]
[ and eax,  [ argument ]  ]
[ mov r13d, eax ]
[ jnz  [ addr ]  ]
[ mov rdx, qword ptr [rbx  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rbx  +  [ displacement ] ] ]
[ mov rdi, r15 ]
[ xor r13d, r13d ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66fb4b
#call parent addr: 7f5eac66fc11
#root size: 56
===============================================================
RET========================================================
#ret target: 7f5eac66fb4b
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov dword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov r14, rax ]
[ lea rax, ptr [rbp- [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ not rax ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov rax, r14 ]
[ mov r14, rbx ]
[ mov rbx, r13 ]
[ mov r13, rax ]
[ nop dword ptr [rax + rax * 1], eax ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ cmp rax, rbx ]
[ jbe  [ addr ]  ]
[ cmp dword ptr [r14 + rbx * 4 + [ displacement ] ],  [ argument ]  ]
[ lea r9, ptr [rbx  +  [ displacement ] ] ]
[ jz  [ addr ]  ]
[ mov rax, rbx ]
[ mov rdi, r13 ]
[ shl rax,  [ argument ]  ]
[ add rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rax  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rax] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 56
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 56
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 56
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 57
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ cmp eax,  [ argument ]  ]
[ setnz al ]
[ movzx eax, al ]
[ or dword ptr [rbp- [ displacement ] ], eax ]
[ cmp r8d,  [ addr ]  ]
[ jnz  [ addr ]  ]
[ add rbx,  [ argument ]  ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 57
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 57
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 57
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 58
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 58
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 58
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 58
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 59
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 59
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 59
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 59
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 60
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 60
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 60
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 60
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 61
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 61
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 61
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 61
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 62
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 62
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 62
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 62
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 63
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 63
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 63
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 63
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 64
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 64
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 64
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 64
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 65
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 65
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 65
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 65
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 66
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 66
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 66
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 66
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 67
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 67
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 67
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 67
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 68
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 68
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 68
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 68
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 69
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 69
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 69
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 69
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 70
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 70
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 70
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 70
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 71
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 71
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 71
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 71
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 72
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov r8d,  [ addr ]  ]
[ lea rsp, ptr [rbp- [ displacement ] ] ]
[ mov eax, r8d ]
[ pop rbx ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ pop rbp ]
[ ret  ]
[ add rsp,  [ argument ]  ]
[ mov edx, eax ]
[ cmp eax,  [ addr ]  ]
[ jnz  [ addr ]  ]
[ test r12, r12 ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ lea r15, ptr [r12  +  [ displacement ] ] ]
[ cmp rax,  [ addr ]  ]
[ jz  [ addr ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ test ebx,  [ addr ]  ]
[ jnz  [ addr ]  ]
[ mov r8d, dword ptr [rip  +  [ displacement ] ] ]
[ test r8d, r8d ]
[ jnz  [ addr ]  ]
[ mov rdi, r13 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac671985
#call parent addr: 7f5eac66fc11
#root size: 72
===============================================================
[ nop edx, edi ]
[ push rbp ]
[ mov rbp, rsp ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ push rbx ]
[ mov rbx, rdi ]
[ sub rsp,  [ argument ]  ]
[ test byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov r8, qword ptr [rip  +  [ displacement ] ] ]
[ test r8, r8 ]
[ jz  [ addr ]  ]
[ cmp r8,  [ addr ]  ]
[ jz  [ addr ]  ]
[ mov edx,  [ argument ]  ]
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac680b53
#call parent addr: 7f5eac671985
#root size: 73
===============================================================
[ nop edx, edi ]
[ push r13 ]
[ xor eax, eax ]
[ mov r13d, edx ]
[ push r12 ]
[ mov r12,  [ addr ]  ]
[ push rbp ]
[ push rbx ]
[ mov rbx, rsi ]
[ mov esi,  [ addr ]  ]
[ sub rsp,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac679905
#call parent addr: 7f5eac680b53
#root size: 74
===============================================================
RET========================================================
#ret target: 7f5eac679905
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ test eax, eax ]
[ jns  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ mov rax, r12 ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ ret  ]
[ mov rdx, rsp ]
[ mov esi, eax ]
[ mov edi,  [ argument ]  ]
[ mov ebp, eax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac67992c
#call parent addr: 7f5eac680b53
#root size: 74
===============================================================
[ nop edx, edi ]
[ mov r8d, edi ]
[ mov edi, esi ]
[ mov rsi, rdx ]
[ cmp r8d,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ mov eax,  [ argument ]  ]
[ syscall  ]
[ cmp rax,  [ addr ]  ]
[ jnbe  [ addr ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5eac67992c
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ test eax, eax ]
[ js  [ addr ]  ]
[ mov rsi, qword ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [rbx], rsi ]
[ test rsi, rsi ]
[ jnz  [ addr ]  ]
[ mov r12,  [ addr ]  ]
[ mov edi, ebp ]
[ call  [ addr.func ]  ]
[ xor r9d, r9d ]
[ mov r8d, ebp ]
[ mov ecx,  [ argument ]  ]
[ mov edx, r13d ]
[ xor edi, edi ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac679968
#call parent addr: 7f5eac680b53
#root size: 74
===============================================================
RET========================================================
#ret target: 7f5eac679968
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov r12, rax ]
[ jmp  [ addr ]  ]
[ mov edi, ebp ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac67994b
#call parent addr: 7f5eac680b53
#root size: 74
===============================================================
[ nop edx, edi ]
[ mov eax,  [ argument ]  ]
[ syscall  ]
[ cmp rax,  [ addr ]  ]
[ jnbe  [ addr ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5eac67994b
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ jmp  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ mov rax, r12 ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ ret  ]
[ mov r8, rax ]
[ cmp rax,  [ addr ]  ]
[ jz  [ addr ]  ]
[ mov r12, qword ptr [rip  +  [ displacement ] ] ]
[ cmp r12,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ mov rdx,  [ addr ]  ]
[ xor rdx, qword ptr [rax  +  [ displacement ] ] ]
[ mov rax,  [ addr ]  ]
[ xor rax, qword ptr [r8] ]
[ or rdx, rax ]
[ jnz  [ addr ]  ]
[ cmp dword ptr [r8  +  [ displacement ] ],  [ addr ]  ]
[ jnz  [ addr ]  ]
[ movzx eax, byte ptr [r8  +  [ displacement ] ] ]
[ test al, al ]
[ jz  [ addr ]  ]
[ and eax,  [ argument ]  ]
[ cmp al,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], r8 ]
[ mov qword ptr [rip  +  [ displacement ] ], r8 ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ lea r13, ptr [r8 + r12 * 1] ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ cmp rax,  [ addr ]  ]
[ jz  [ addr ]  ]
[ mov r12, qword ptr [rip  +  [ displacement ] ] ]
[ sub r13d, eax ]
[ test r12, r12 ]
[ jz  [ addr ]  ]
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ mov rdi, r12 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac6806ec
#call parent addr: 7f5eac680b53
#root size: 74
===============================================================
RET========================================================
#ret target: 7f5eac6806ec
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov rdx,  [ addr ]  ]
[ mov qword ptr [rbp- [ displacement ] ], rdx ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ mov rdi, r12 ]
[ call  [ addr.func ]  ]
[ lea rsi, ptr [rbp- [ displacement ] ] ]
[ xor edx, edx ]
[ mov edi,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac680738
#call parent addr: 7f5eac680b53
#root size: 74
===============================================================
RET========================================================
#ret target: 7f5eac680738
#function name: __tunable_get_val
#func_id: 29
===========================================================
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov eax, dword ptr [rax  +  [ displacement ] ] ]
[ mov r12d, eax ]
[ mov dword ptr [rbp- [ displacement ] ], eax ]
[ sub r12d,  [ argument ]  ]
[ js  [ addr ]  ]
[ xor r15d, r15d ]
[ nop dword ptr [rax], eax ]
[ lea r11d, ptr [r15 + r12 * 1] ]
[ sar r11d,  [ argument ]  ]
[ movsxd rax, r11d ]
[ lea rdx, ptr [rax + rax * 2] ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ lea r14, ptr [rdx * 8] ]
[ mov esi, dword ptr [rax + r14 * 1 + [ displacement ] ] ]
[ cmp r13d, esi ]
[ jbe  [ addr ]  ]
[ add rsi, qword ptr [rbp- [ displacement ] ] ]
[ mov rdi, rbx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac68079b
#call parent addr: 7f5eac680b53
#root size: 74
===============================================================
[ nop edx, edi ]
[ movsx eax, byte ptr [rdi] ]
[ movsx edx, byte ptr [rsi] ]
[ test al, al ]
[ jz  [ addr ]  ]
[ lea r8d, ptr [rax- [ displacement ] ] ]
[ lea ecx, ptr [rdx- [ displacement ] ] ]
[ cmp r8b,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ cmp cl,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ cmp al, dl ]
[ jnz  [ addr ]  ]
[ movsx eax, byte ptr [rdi  +  [ displacement ] ] ]
[ movsx edx, byte ptr [rsi  +  [ displacement ] ] ]
[ add rdi,  [ argument ]  ]
[ add rsi,  [ argument ]  ]
[ test al, al ]
[ jnz  [ addr ]  ]
[ movsx eax, dl ]
[ neg eax ]
[ ret  ]
[ lea r8d, ptr [rax- [ displacement ] ] ]
[ lea ecx, ptr [rdx- [ displacement ] ] ]
[ cmp r8b,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ cmp cl,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ cmp al, dl ]
[ jnz  [ addr ]  ]
[ movsx eax, byte ptr [rdi  +  [ displacement ] ] ]
[ movsx edx, byte ptr [rsi  +  [ displacement ] ] ]
[ add rdi,  [ argument ]  ]
[ add rsi,  [ argument ]  ]
[ test al, al ]
[ jnz  [ addr ]  ]
[ movsx eax, dl ]
[ neg eax ]
[ ret  ]
[ sub eax, edx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac68079b
#function name: _dl_exception_free
#func_id: 28
===========================================================
[ test eax, eax ]
[ jz  [ addr ]  ]
[ js  [ addr ]  ]
[ lea r12d, ptr [r11- [ displacement ] ] ]
[ cmp r15d, r12d ]
[ jle  [ addr ]  ]
[ lea r11d, ptr [r15 + r12 * 1] ]
[ sar r11d,  [ argument ]  ]
[ movsxd rax, r11d ]
[ lea rdx, ptr [rax + rax * 2] ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ lea r14, ptr [rdx * 8] ]
[ mov esi, dword ptr [rax + r14 * 1 + [ displacement ] ] ]
[ cmp r13d, esi ]
[ jbe  [ addr ]  ]
[ add rsi, qword ptr [rbp- [ displacement ] ] ]
[ mov rdi, rbx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac68079b
#call parent addr: 7f5eac680b53
#root size: 74
===============================================================
RET========================================================
#ret target: 7f5eac68079b
#function name: _dl_exception_free
#func_id: 28
===========================================================
CALL===========================================================
#now call addr: 7f5eac68079b
#call parent addr: 7f5eac680b53
#root size: 74
===============================================================
RET========================================================
#ret target: 7f5eac68079b
#function name: _dl_exception_free
#func_id: 28
===========================================================
[ lea r15d, ptr [r11  +  [ displacement ] ] ]
[ cmp r15d, r12d ]
[ jle  [ addr ]  ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac68079b
#call parent addr: 7f5eac680b53
#root size: 74
===============================================================
RET========================================================
#ret target: 7f5eac68079b
#function name: _dl_exception_free
#func_id: 28
===========================================================
CALL===========================================================
#now call addr: 7f5eac68079b
#call parent addr: 7f5eac680b53
#root size: 74
===============================================================
RET========================================================
#ret target: 7f5eac68079b
#function name: _dl_exception_free
#func_id: 28
===========================================================
CALL===========================================================
#now call addr: 7f5eac68079b
#call parent addr: 7f5eac680b53
#root size: 74
===============================================================
RET========================================================
#ret target: 7f5eac68079b
#function name: _dl_exception_free
#func_id: 28
===========================================================
CALL===========================================================
#now call addr: 7f5eac68079b
#call parent addr: 7f5eac680b53
#root size: 74
===============================================================
[ cmp cl,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ lea ecx, ptr [rax- [ displacement ] ] ]
[ movsx eax, byte ptr [rdi  +  [ displacement ] ] ]
[ lea r10, ptr [rdi  +  [ displacement ] ] ]
[ lea r8d, ptr [rdx- [ displacement ] ] ]
[ lea r9, ptr [rsi  +  [ displacement ] ] ]
[ mov rdi, r10 ]
[ lea edx, ptr [rax- [ displacement ] ] ]
[ cmp dl,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ nop dword ptr [rax + rax * 1], eax ]
[ lea edx, ptr [rcx + rcx * 4] ]
[ add rdi,  [ argument ]  ]
[ lea ecx, ptr [rax + rdx * 2- [ displacement ] ] ]
[ movsx eax, byte ptr [rdi] ]
[ lea edx, ptr [rax- [ displacement ] ] ]
[ cmp dl,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ movsx edx, byte ptr [rsi  +  [ displacement ] ] ]
[ lea esi, ptr [rdx- [ displacement ] ] ]
[ cmp sil,  [ argument ]  ]
[ mov rsi, r9 ]
[ jnbe  [ addr ]  ]
[ data16 nop ]
[ add rsi,  [ argument ]  ]
[ lea r8d, ptr [r8 + r8 * 4] ]
[ lea r8d, ptr [rdx + r8 * 2- [ displacement ] ] ]
[ movsx edx, byte ptr [rsi] ]
[ lea r9d, ptr [rdx- [ displacement ] ] ]
[ cmp r9b,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ cmp ecx, r8d ]
[ jz  [ addr ]  ]
[ cmp ecx, r8d ]
[ jz  [ addr ]  ]
[ mov eax, ecx ]
[ sub eax, r8d ]
[ ret  ]
[ test al, al ]
[ jz  [ addr ]  ]
[ lea r8d, ptr [rax- [ displacement ] ] ]
[ lea ecx, ptr [rdx- [ displacement ] ] ]
[ cmp r8b,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ cmp cl,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ movsx eax, dl ]
[ neg eax ]
[ ret  ]
RET========================================================
#ret target: 7f5eac68079b
#function name: _dl_exception_free
#func_id: 28
===========================================================
[ test eax, eax ]
[ jz  [ addr ]  ]
[ js  [ addr ]  ]
[ lea r12d, ptr [r11- [ displacement ] ] ]
[ cmp r15d, r12d ]
[ jle  [ addr ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ lea rcx, ptr [rax + r14 * 1 + [ displacement ] ] ]
[ mov r14d, r11d ]
[ jmp  [ addr ]  ]
[ test r14d, r14d ]
[ jnz  [ addr ]  ]
[ mov rcx,  [ addr ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ and rax, qword ptr [rbp- [ displacement ] ] ]
[ or rax, rcx ]
[ cmp dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ not rax ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ mov dword ptr [rbp- [ displacement ] ], eax ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [rbp- [ displacement ] ] ]
[ test eax, eax ]
[ movsxd rax, r14d ]
[ mov r15d,  [ argument ]  ]
[ lea rax, ptr [rax + rax * 2] ]
[ lea rcx, ptr [rdx + rax * 8 + [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov esi, dword ptr [rcx] ]
[ mov qword ptr [rbp- [ displacement ] ], rcx ]
[ lea r15d, ptr [r14- [ displacement ] ] ]
[ cmp r13d, esi ]
[ jbe  [ addr ]  ]
[ add rsi, qword ptr [rbp- [ displacement ] ] ]
[ mov rdi, rbx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac6807f6
#call parent addr: 7f5eac680b53
#root size: 74
===============================================================
RET========================================================
#ret target: 7f5eac6807f6
#function name: _dl_exception_free
#func_id: 28
===========================================================
[ mov rcx, qword ptr [rbp- [ displacement ] ] ]
[ sub rcx,  [ argument ]  ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov r14d, r15d ]
[ test r14d, r14d ]
[ jnz  [ addr ]  ]
[ mov rcx,  [ addr ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ and rax, qword ptr [rbp- [ displacement ] ] ]
[ or rax, rcx ]
[ cmp dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ not rax ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ mov dword ptr [rbp- [ displacement ] ], eax ]
[ jz  [ addr ]  ]
[ mov rcx,  [ addr ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ and rax, qword ptr [rbp- [ displacement ] ] ]
[ or rax, rcx ]
[ cmp dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ not rax ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ mov dword ptr [rbp- [ displacement ] ], eax ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [rbp- [ displacement ] ] ]
[ test eax, eax ]
[ movsxd rax, r14d ]
[ mov r15d,  [ argument ]  ]
[ lea rax, ptr [rax + rax * 2] ]
[ lea rcx, ptr [rdx + rax * 8 + [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ mov rdx, qword ptr [rbp- [ displacement ] ] ]
[ movsxd rax, r14d ]
[ lea rax, ptr [rax + rax * 2] ]
[ lea r15, ptr [rdx + rax * 8 + [ displacement ] ] ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ cmp r14d, r11d ]
[ jle  [ addr ]  ]
[ mov esi, dword ptr [r15  +  [ displacement ] ] ]
[ cmp esi, r13d ]
[ jnb  [ addr ]  ]
[ add rsi, qword ptr [rbp- [ displacement ] ] ]
[ mov rdi, rbx ]
[ call  [ addr.func ]  ]
[ cmp dword ptr [r15],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [r15  +  [ displacement ] ] ]
[ cmp eax, r13d ]
[ jnb  [ addr ]  ]
[ mov rsi, qword ptr [r15  +  [ displacement ] ] ]
[ test qword ptr [rbp- [ displacement ] ], rsi ]
[ jnz  [ addr ]  ]
[ mov edx, dword ptr [rbp- [ displacement ] ] ]
[ cmp edx, dword ptr [r15  +  [ displacement ] ] ]
[ jb  [ addr ]  ]
[ mov rdx,  [ addr ]  ]
[ and rsi, rdx ]
[ jz  [ addr ]  ]
[ cmp rsi, qword ptr [rbp- [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov r15, qword ptr [rbp- [ displacement ] ] ]
[ add r15, rax ]
[ nop dword ptr [rax + rax * 1], eax ]
[ test byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ test r15, r15 ]
[ jz  [ addr ]  ]
[ mov rdi, r15 ]
[ mov rbx, rsp ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac680a1c
#call parent addr: 7f5eac680b53
#root size: 74
===============================================================
RET========================================================
#ret target: 7f5eac680a1c
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ lea rdx, ptr [rax  +  [ displacement ] ] ]
[ mov rcx, rdx ]
[ and rdx,  [ addr ]  ]
[ sub rbx, rdx ]
[ and rcx,  [ addr ]  ]
[ mov rdx, rbx ]
[ cmp rsp, rdx ]
[ jz  [ addr ]  ]
[ sub rsp,  [ argument ]  ]
[ or qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ cmp rsp, rdx ]
[ jnz  [ addr ]  ]
[ and ecx,  [ argument ]  ]
[ sub rsp, rcx ]
[ test rcx, rcx ]
[ jnz  [ addr ]  ]
[ and ecx,  [ argument ]  ]
[ sub rsp, rcx ]
[ test rcx, rcx ]
[ jnz  [ addr ]  ]
[ lea rdi, ptr [rsp  +  [ displacement ] ] ]
[ mov rsi, r15 ]
[ lea rdx, ptr [rax  +  [ displacement ] ] ]
[ and rdi,  [ addr ]  ]
[ call  [ addr.func ]  ]
[ or qword ptr [rsp + rcx * 1- [ displacement ] ],  [ argument ]  ]
[ jmp  [ addr ]  ]
[ lea rdi, ptr [rsp  +  [ displacement ] ] ]
[ mov rsi, r15 ]
[ lea rdx, ptr [rax  +  [ displacement ] ] ]
[ and rdi,  [ addr ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac680a75
#call parent addr: 7f5eac680b53
#root size: 74
===============================================================
RET========================================================
#ret target: 7f5eac680a75
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov rdi, rax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac680a7d
#call parent addr: 7f5eac680b53
#root size: 74
===============================================================
CALL===========================================================
#now call addr: 7f5eac6865be
#call parent addr: 7f5eac680a7d
#root size: 75
===============================================================
RET========================================================
#ret target: 7f5eac6865be
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6865ca
#call parent addr: 7f5eac680a7d
#root size: 75
===============================================================
RET========================================================
#ret target: 7f5eac6865ca
#function name: malloc
#func_id: 32
===========================================================
[ lea rsp, ptr [rbp- [ displacement ] ] ]
[ pop rbx ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ pop rbp ]
[ ret  ]
[ mov rdi, rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ test r12, r12 ]
[ jz  [ addr ]  ]
[ test byte ptr [r12  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rdx, r12 ]
[ lea r15, ptr [rsp  +  [ displacement ] ] ]
[ lea r8, ptr [rsp  +  [ displacement ] ] ]
[ mov ecx,  [ argument ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdi ]
[ mov rsi, r15 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac6719c8
#call parent addr: 7f5eac680a7d
#root size: 75
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac6719c8
#root size: 76
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov r12d, eax ]
[ cmp eax,  [ addr ]  ]
[ jz  [ addr ]  ]
[ lea rax, ptr [r14  +  [ displacement ] ] ]
[ xor esi, esi ]
[ mov r15d,  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov qword ptr [r14],  [ argument ]  ]
[ mov rdx, r15 ]
[ mov edi, r12d ]
[ sub rdx, rsi ]
[ add rsi, qword ptr [rbp- [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66f3f5
#call parent addr: 7f5eac6719c8
#root size: 76
===============================================================
[ nop edx, edi ]
[ xor eax, eax ]
[ syscall  ]
[ cmp rax,  [ addr ]  ]
[ jnbe  [ addr ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5eac66f3f5
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ test rax, rax ]
[ jle  [ addr ]  ]
[ add rax, qword ptr [r14] ]
[ mov qword ptr [r14], rax ]
[ mov rsi, rax ]
[ cmp rax,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ cmp rsi,  [ argument ]  ]
[ jle  [ addr ]  ]
[ mov rax,  [ addr ]  ]
[ cmp qword ptr [r14  +  [ displacement ] ], rax ]
[ jnz  [ addr ]  ]
[ movzx eax, byte ptr [r14  +  [ displacement ] ] ]
[ test al, al ]
[ jnz  [ addr ]  ]
[ mov edi, dword ptr [rip  +  [ displacement ] ] ]
[ cmp dword ptr [r14  +  [ displacement ] ], edi ]
[ jz  [ addr ]  ]
[ movzx ecx, word ptr [rip  +  [ displacement ] ] ]
[ cmp word ptr [r14  +  [ displacement ] ], cx ]
[ jnz  [ addr ]  ]
[ movzx ecx, byte ptr [rip  +  [ displacement ] ] ]
[ cmp byte ptr [r14  +  [ displacement ] ], cl ]
[ jnz  [ addr ]  ]
[ xor edi, edi ]
[ cmp dword ptr [r14  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp word ptr [r14  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ movzx eax, word ptr [r14  +  [ displacement ] ] ]
[ sub eax,  [ argument ]  ]
[ cmp ax,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ cmp word ptr [r14  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ movzx edx, word ptr [r14  +  [ displacement ] ] ]
[ mov rcx, qword ptr [r14  +  [ displacement ] ] ]
[ lea rbx, ptr [rdx * 8] ]
[ sub rbx, rdx ]
[ shl rbx,  [ argument ]  ]
[ lea rdi, ptr [rbx + rcx * 1] ]
[ mov rax, rbx ]
[ cmp rdi, rsi ]
[ jnbe  [ addr ]  ]
[ mov rdi, qword ptr [rbp- [ displacement ] ] ]
[ lea r8, ptr [rdi + rcx * 1] ]
[ add rax, r8 ]
[ cmp r8, rax ]
[ jnb  [ addr ]  ]
[ mov rbx, r8 ]
[ xor r9d, r9d ]
[ jmp  [ addr ]  ]
[ cmp dword ptr [rbx],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov r11, qword ptr [rbx  +  [ displacement ] ] ]
[ cmp r11,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ mov rax, qword ptr [rbx  +  [ displacement ] ] ]
[ sub rax,  [ argument ]  ]
[ test rax,  [ addr ]  ]
[ jnz  [ addr ]  ]
[ lea rax, ptr [rdx * 8] ]
[ add rbx,  [ argument ]  ]
[ sub rax, rdx ]
[ lea rax, ptr [r8 + rax * 8] ]
[ cmp rbx, rax ]
[ jnb  [ addr ]  ]
[ cmp dword ptr [rbx],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov r11, qword ptr [rbx  +  [ displacement ] ] ]
[ cmp r11,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ mov rax, qword ptr [rbx  +  [ displacement ] ] ]
[ sub rax,  [ argument ]  ]
[ test rax,  [ addr ]  ]
[ jnz  [ addr ]  ]
[ mov rcx, qword ptr [rbx  +  [ displacement ] ] ]
[ lea rax, ptr [r11 + rcx * 1] ]
[ cmp rax, qword ptr [r14] ]
[ jbe  [ addr ]  ]
[ cmp r11,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ lea r15, ptr [rax + rcx * 1] ]
[ jmp  [ addr ]  ]
[ lea rcx, ptr [rip  +  [ displacement ] ] ]
[ mov rax, qword ptr [r15] ]
[ mov rdx, qword ptr [r15  +  [ displacement ] ] ]
[ xor rax, qword ptr [rcx] ]
[ xor rdx, qword ptr [rip  +  [ displacement ] ] ]
[ or rdx, rax ]
[ jnz  [ addr ]  ]
[ test r11, r11 ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [r15  +  [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rbx  +  [ displacement ] ] ]
[ mov edx, dword ptr [r15] ]
[ mov edi, dword ptr [r15  +  [ displacement ] ] ]
[ mov rsi, rax ]
[ lea rdx, ptr [rax + rdx * 1 + [ displacement ] ] ]
[ neg rsi ]
[ lea rax, ptr [rax + rdi * 1- [ displacement ] ] ]
[ and rdx, rsi ]
[ add rdx, rax ]
[ lea rax, ptr [r11- [ displacement ] ] ]
[ and rdx, rsi ]
[ cmp rdx, rax ]
[ jnbe  [ addr ]  ]
[ sub r11, rdx ]
[ add r15, rdx ]
[ jmp  [ addr ]  ]
[ movzx edx, word ptr [r14  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ mov rdi, r9 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66f803
#call parent addr: 7f5eac6719c8
#root size: 76
===============================================================
RET========================================================
#ret target: 7f5eac66f803
#function name: free
#func_id: 34
===========================================================
[ jmp  [ addr ]  ]
[ lea rsp, ptr [rbp- [ displacement ] ] ]
[ mov eax, r12d ]
[ pop rbx ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ pop rbp ]
[ ret  ]
[ mov rdi, qword ptr [rsp  +  [ displacement ] ] ]
[ cmp eax,  [ addr ]  ]
[ mov edx, eax ]
[ jz  [ addr ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdi ]
[ jmp  [ addr ]  ]
[ test byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov edi, dword ptr [rsp  +  [ displacement ] ] ]
[ mov eax,  [ argument ]  ]
[ test edi, edi ]
[ cmovnz r12, rax ]
[ cmp edx,  [ addr ]  ]
[ jz  [ addr ]  ]
[ lea r15, ptr [rsp  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov rcx, r15 ]
[ mov r9, r12 ]
[ mov rdi, r13 ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ push rbp ]
[ lea rax, ptr [rsp  +  [ displacement ] ] ]
[ push rax ]
[ push rbx ]
[ mov eax, dword ptr [rsp  +  [ displacement ] ] ]
[ push rax ]
[ mov r8, qword ptr [rsp  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rsp  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac671616
#call parent addr: 7f5eac6719c8
#root size: 76
===============================================================
[ push rbp ]
[ mov rbp, rsp ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ mov r13, r9 ]
[ push r12 ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov qword ptr [rbp- [ displacement ] ], rsi ]
[ mov rsi, qword ptr [rbp  +  [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rdi ]
[ xor edi, edi ]
[ mov dword ptr [rbp- [ displacement ] ], edx ]
[ mov qword ptr [rbp- [ displacement ] ], rcx ]
[ mov qword ptr [rbp- [ displacement ] ], r8 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66ddff
#call parent addr: 7f5eac671616
#root size: 77
===============================================================
[ test rdi, rdi ]
[ jz  [ addr ]  ]
[ mov dword ptr [rax],  [ argument ]  ]
[ lea rdx, ptr [rsi + rsi * 8] ]
[ lea rcx, ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rax  +  [ displacement ] ], rdi ]
[ shl rdx,  [ argument ]  ]
[ mov rdx, qword ptr [rcx + rdx * 1] ]
[ lea rcx, ptr [rip- [ displacement ] ] ]
[ mov qword ptr [rax  +  [ displacement ] ], rcx ]
[ mov qword ptr [rax  +  [ displacement ] ], rdx ]
[ ret  ]
[ ret  ]
RET========================================================
#ret target: 7f5eac66ddff
#function name: _dl_debug_state
#func_id: 18
===========================================================
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov eax, dword ptr [rbp  +  [ displacement ] ] ]
[ and eax,  [ addr ]  ]
[ mov dword ptr [rbp- [ displacement ] ], eax ]
[ jz  [ addr ]  ]
[ cmp qword ptr [rbp  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ pxor xmm0, xmm0 ]
[ movaps xmmword ptr [rbp- [ displacement ] ], xmm0 ]
[ mov eax, dword ptr [rbp  +  [ displacement ] ] ]
[ and eax,  [ argument ]  ]
[ mov dword ptr [rbp- [ displacement ] ], eax ]
[ jnz  [ addr ]  ]
[ mov esi, dword ptr [rbp- [ displacement ] ] ]
[ lea rdx, ptr [rbp- [ displacement ] ] ]
[ mov edi,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66e032
#call parent addr: 7f5eac671616
#root size: 77
===============================================================
RET========================================================
#ret target: 7f5eac66e032
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ test eax, eax ]
[ js  [ addr ]  ]
[ mov rdi, qword ptr [rbp  +  [ displacement ] ] ]
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ movdqa xmm3, xmmword ptr [rbp- [ displacement ] ] ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ mov rcx, qword ptr [rbp- [ displacement ] ] ]
[ lea rdx, ptr [rdi + rdi * 8] ]
[ movaps xmmword ptr [rbp- [ displacement ] ], xmm3 ]
[ shl rdx,  [ argument ]  ]
[ mov r12, qword ptr [rsi + rdx * 1] ]
[ test r12, r12 ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ test byte ptr [r12  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [r12  +  [ displacement ] ], rax ]
[ jnz  [ addr ]  ]
[ cmp rcx, qword ptr [r12  +  [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov r12, qword ptr [r12  +  [ displacement ] ] ]
[ test r12, r12 ]
[ jz  [ addr ]  ]
[ test byte ptr [r12  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [r12  +  [ displacement ] ], rax ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [rbp  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp qword ptr [rip  +  [ displacement ] ], rax ]
[ jz  [ addr ]  ]
[ mov rdi, qword ptr [rbp- [ displacement ] ] ]
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
[ mov eax, dword ptr [rbp  +  [ displacement ] ] ]
[ and eax,  [ argument ]  ]
[ mov dword ptr [rbp- [ displacement ] ], eax ]
[ jnz  [ addr ]  ]
[ test byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ mov ebx, dword ptr [rax  +  [ displacement ] ] ]
[ test ebx, ebx ]
[ jz  [ addr ]  ]
[ cmp ebx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov byte ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov r9, qword ptr [rbp  +  [ displacement ] ] ]
[ mov r8d, dword ptr [rbp  +  [ displacement ] ] ]
[ mov rcx, r13 ]
[ mov edx, dword ptr [rbp  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rbp- [ displacement ] ] ]
[ mov rdi, qword ptr [rbp- [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66de92
#call parent addr: 7f5eac671616
#root size: 77
===============================================================
CALL===========================================================
#now call addr: 7f5eac674245
#call parent addr: 7f5eac66de92
#root size: 78
===============================================================
RET========================================================
#ret target: 7f5eac674245
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67426f
#call parent addr: 7f5eac66de92
#root size: 78
===============================================================
RET========================================================
#ret target: 7f5eac67426f
#function name: malloc
#func_id: 32
===========================================================
CALL===========================================================
#now call addr: 7f5eac6742b4
#call parent addr: 7f5eac66de92
#root size: 78
===============================================================
RET========================================================
#ret target: 7f5eac6742b4
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov r9, qword ptr [rsp  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rsp  +  [ displacement ] ] ]
[ mov ecx, dword ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [r9  +  [ displacement ] ], rax ]
[ movzx esi, byte ptr [rdx] ]
[ mov dword ptr [r9  +  [ displacement ] ],  [ argument ]  ]
[ test ecx, ecx ]
[ jnz  [ addr ]  ]
[ test sil, sil ]
[ jnz  [ addr ]  ]
[ lea rdx, ptr [rax + r13 * 1] ]
[ movzx eax, byte ptr [r14  +  [ displacement ] ] ]
[ movzx ebp, byte ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [r14  +  [ displacement ] ], rdx ]
[ and ebp,  [ argument ]  ]
[ and eax,  [ addr ]  ]
[ or ebp, eax ]
[ mov byte ptr [r14  +  [ displacement ] ], bpl ]
[ test byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ movzx eax, byte ptr [r14  +  [ displacement ] ] ]
[ movzx ebp, byte ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [r14  +  [ displacement ] ], rdx ]
[ and ebp,  [ argument ]  ]
[ and eax,  [ addr ]  ]
[ or ebp, eax ]
[ mov byte ptr [r14  +  [ displacement ] ], bpl ]
[ test byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov qword ptr [r14  +  [ displacement ] ], r12 ]
[ mov qword ptr [r14  +  [ displacement ] ], rbx ]
[ test r15d, r15d ]
[ jz  [ addr ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ cmp r14, rax ]
[ jz  [ addr ]  ]
[ test edx, edx ]
[ jnz  [ addr ]  ]
[ add rax,  [ argument ]  ]
[ mov qword ptr [rdi], rax ]
[ lea rax, ptr [r14  +  [ displacement ] ] ]
[ test sil, sil ]
[ mov byte ptr [rsp  +  [ displacement ] ], sil ]
[ mov qword ptr [r14  +  [ displacement ] ], rax ]
[ jz  [ addr ]  ]
[ mov rdi, qword ptr [rsp  +  [ displacement ] ] ]
[ xor ebp, ebp ]
[ call  [ addr.func ]  ]
[ mov rdx, qword ptr [r14  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ add rax,  [ argument ]  ]
[ cmp rax, rdx ]
[ jz  [ addr ]  ]
[ test byte ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov qword ptr [r14  +  [ displacement ] ], rdx ]
[ jmp  [ addr ]  ]
[ lea rax, ptr [r14  +  [ displacement ] ] ]
[ test sil, sil ]
[ mov byte ptr [rsp  +  [ displacement ] ], sil ]
[ mov qword ptr [r14  +  [ displacement ] ], rax ]
[ jz  [ addr ]  ]
[ mov rdi, qword ptr [rsp  +  [ displacement ] ] ]
[ xor ebp, ebp ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac6743f4
#call parent addr: 7f5eac66de92
#root size: 78
===============================================================
RET========================================================
#ret target: 7f5eac6743f4
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ movzx esi, byte ptr [rsp  +  [ displacement ] ] ]
[ mov r13, rax ]
[ lea rax, ptr [rax  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ mov r15, rax ]
[ cmp sil,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ mov rdi, rax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac6745a3
#call parent addr: 7f5eac66de92
#root size: 78
===============================================================
RET========================================================
#ret target: 7f5eac6745a3
#function name: malloc
#func_id: 32
===========================================================
[ mov rbp, rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rdi, rax ]
[ jmp  [ addr ]  ]
[ mov rdx, qword ptr [rsp  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rsp  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac6744b0
#call parent addr: 7f5eac66de92
#root size: 78
===============================================================
RET========================================================
#ret target: 7f5eac6744b0
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ nop dword ptr [rax], eax ]
[ mov rdx, rax ]
[ sub rax,  [ argument ]  ]
[ cmp byte ptr [rax],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp rbp, rax ]
[ cmovz rax, rdx ]
[ mov byte ptr [rax],  [ argument ]  ]
[ mov qword ptr [r14  +  [ displacement ] ], rbp ]
[ add rsp,  [ argument ]  ]
[ mov rax, r14 ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ mov rdx, rax ]
[ sub rax,  [ argument ]  ]
[ cmp byte ptr [rax],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp rbp, rax ]
[ cmovz rax, rdx ]
[ mov byte ptr [rax],  [ argument ]  ]
[ mov qword ptr [r14  +  [ displacement ] ], rbp ]
[ add rsp,  [ argument ]  ]
[ mov rax, r14 ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ mov r12, rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rdi, qword ptr [rbp- [ displacement ] ] ]
[ mov rax, qword ptr [rdi  +  [ displacement ] ] ]
[ mov rcx, qword ptr [rdi  +  [ displacement ] ] ]
[ mov qword ptr [r12  +  [ displacement ] ], rax ]
[ movzx eax, word ptr [rdi  +  [ displacement ] ] ]
[ lea r14, ptr [rdi + rcx * 1 + [ displacement ] ] ]
[ mov word ptr [rbp- [ displacement ] ], ax ]
[ movzx eax, word ptr [rdi  +  [ displacement ] ] ]
[ lea rbx, ptr [rax * 8] ]
[ mov word ptr [r12  +  [ displacement ] ], ax ]
[ sub rbx, rax ]
[ shl rbx,  [ argument ]  ]
[ lea rax, ptr [rcx + rbx * 1] ]
[ cmp rax, qword ptr [rdi] ]
[ jnbe  [ addr ]  ]
[ movzx eax, word ptr [r12  +  [ displacement ] ] ]
[ mov rdi, rsp ]
[ mov qword ptr [rbp- [ displacement ] ], rsp ]
[ lea rdx, ptr [rax + rax * 2] ]
[ shl rdx,  [ argument ]  ]
[ mov rcx, rdx ]
[ and rcx,  [ addr ]  ]
[ sub rdi, rcx ]
[ mov rcx, rdi ]
[ cmp rsp, rcx ]
[ jz  [ addr ]  ]
[ and edx,  [ argument ]  ]
[ sub rsp, rdx ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ or qword ptr [rsp + rdx * 1- [ displacement ] ],  [ argument ]  ]
[ lea rdx, ptr [rsp  +  [ displacement ] ] ]
[ mov rcx, rdx ]
[ and rdx,  [ addr ]  ]
[ mov qword ptr [rbp- [ displacement ] ], rdx ]
[ lea rdx, ptr [rax * 8] ]
[ shr rcx,  [ argument ]  ]
[ sub rdx, rax ]
[ mov qword ptr [rbp- [ displacement ] ], rcx ]
[ lea rdx, ptr [r14 + rdx * 8] ]
[ cmp r14, rdx ]
[ jnb  [ addr ]  ]
[ mov edi, dword ptr [rbp  +  [ displacement ] ] ]
[ mov byte ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov rbx, r14 ]
[ xor r15d, r15d ]
[ mov qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ lea r13, ptr [rip  +  [ displacement ] ] ]
[ and edi,  [ addr ]  ]
[ mov dword ptr [rbp- [ displacement ] ], edi ]
[ mov edx, dword ptr [rbx] ]
[ cmp edx,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ test edx, edx ]
[ jz  [ addr ]  ]
[ cmp edx,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ movsxd rdx, dword ptr [r13 + rdx * 4] ]
[ add rdx, r13 ]
[ jmp rdx ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rbx  +  [ displacement ] ] ]
[ lea r11, ptr [rdx- [ displacement ] ] ]
[ test rsi, r11 ]
[ jnz  [ addr ]  ]
[ mov rcx, qword ptr [rbx  +  [ displacement ] ] ]
[ mov rdi, qword ptr [rbx  +  [ displacement ] ] ]
[ sub rsi,  [ argument ]  ]
[ mov r8, rcx ]
[ sub r8, rdi ]
[ test r8, rsi ]
[ jnz  [ addr ]  ]
[ lea r9, ptr [r15 + r15 * 2] ]
[ neg rdx ]
[ movdqu xmm2, xmmword ptr [rbx  +  [ displacement ] ] ]
[ lea r10, ptr [r15  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rbp- [ displacement ] ] ]
[ shl r9,  [ argument ]  ]
[ movq xmm0, rcx ]
[ punpcklqdq xmm0, xmm0 ]
[ lea r8, ptr [rsi + r9 * 1] ]
[ mov rsi, rcx ]
[ paddq xmm0, xmm2 ]
[ and rsi, rdx ]
[ mov qword ptr [r8], rsi ]
[ mov rsi, qword ptr [rbx  +  [ displacement ] ] ]
[ add rsi, rcx ]
[ add rsi, r11 ]
[ and rsi, rdx ]
[ and rdx, rdi ]
[ mov qword ptr [r8  +  [ displacement ] ], rsi ]
[ mov rsi, qword ptr [rbp- [ displacement ] ] ]
[ movups xmmword ptr [rsi + r9 * 1 + [ displacement ] ], xmm0 ]
[ mov qword ptr [r8  +  [ displacement ] ], rdx ]
[ cmp r10,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ mov ecx, dword ptr [rbx  +  [ displacement ] ] ]
[ mov edx,  [ addr ]  ]
[ lea rsi, ptr [r15 + r15 * 2] ]
[ mov rdi, qword ptr [rbp- [ displacement ] ] ]
[ shl rsi,  [ argument ]  ]
[ mov r15, r10 ]
[ and ecx,  [ argument ]  ]
[ shl ecx,  [ argument ]  ]
[ sar edx, cl ]
[ and edx,  [ argument ]  ]
[ mov dword ptr [rdi + rsi * 1 + [ displacement ] ], edx ]
[ lea rdx, ptr [rax * 8] ]
[ add rbx,  [ argument ]  ]
[ sub rdx, rax ]
[ lea rdx, ptr [r14 + rdx * 8] ]
[ cmp rbx, rdx ]
[ jb  [ addr ]  ]
[ test r15, r15 ]
[ jz  [ addr ]  ]
[ movzx ecx, word ptr [rbp- [ displacement ] ] ]
[ mov dword ptr [rbp- [ displacement ] ], ecx ]
[ cmp cx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov edx, dword ptr [rbx] ]
[ cmp edx,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ test edx, edx ]
[ jz  [ addr ]  ]
[ cmp edx,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ movsxd rdx, dword ptr [r13 + rdx * 4] ]
[ add rdx, r13 ]
[ jmp rdx ]
[ mov rcx, qword ptr [r8] ]
[ cmp qword ptr [r8- [ displacement ] ], rcx ]
[ mov edx,  [ argument ]  ]
[ movzx ecx, byte ptr [rbp- [ displacement ] ] ]
[ cmovnz ecx, edx ]
[ mov byte ptr [rbp- [ displacement ] ], cl ]
[ mov ecx, dword ptr [rbx  +  [ displacement ] ] ]
[ mov edx,  [ addr ]  ]
[ lea rsi, ptr [r15 + r15 * 2] ]
[ mov rdi, qword ptr [rbp- [ displacement ] ] ]
[ shl rsi,  [ argument ]  ]
[ mov r15, r10 ]
[ and ecx,  [ argument ]  ]
[ shl ecx,  [ argument ]  ]
[ sar edx, cl ]
[ and edx,  [ argument ]  ]
[ mov dword ptr [rdi + rsi * 1 + [ displacement ] ], edx ]
[ lea rdx, ptr [rax * 8] ]
[ add rbx,  [ argument ]  ]
[ sub rdx, rax ]
[ lea rdx, ptr [r14 + rdx * 8] ]
[ cmp rbx, rdx ]
[ jb  [ addr ]  ]
[ test r15, r15 ]
[ jz  [ addr ]  ]
[ movzx ecx, word ptr [rbp- [ displacement ] ] ]
[ mov dword ptr [rbp- [ displacement ] ], ecx ]
[ cmp cx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [rbx  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [rbx  +  [ displacement ] ] ]
[ mov qword ptr [r12  +  [ displacement ] ], rdx ]
[ mov rdx, qword ptr [rbx  +  [ displacement ] ] ]
[ shr rdx,  [ argument ]  ]
[ mov word ptr [r12  +  [ displacement ] ], dx ]
[ jmp  [ addr ]  ]
[ lea rdx, ptr [rax * 8] ]
[ add rbx,  [ argument ]  ]
[ sub rdx, rax ]
[ lea rdx, ptr [r14 + rdx * 8] ]
[ cmp rbx, rdx ]
[ jb  [ addr ]  ]
[ test r15, r15 ]
[ jz  [ addr ]  ]
[ movzx ecx, word ptr [rbp- [ displacement ] ] ]
[ mov dword ptr [rbp- [ displacement ] ], ecx ]
[ cmp cx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rcx, qword ptr [rbp- [ displacement ] ] ]
[ mov edx, dword ptr [rbp- [ displacement ] ] ]
[ mov rsi, rbx ]
[ mov rdi, r12 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66e577
#call parent addr: 7f5eac66de92
#root size: 78
===============================================================
[ push rbp ]
[ mov rbp, rsp ]
[ push r15 ]
[ mov r15, rsi ]
[ push r14 ]
[ push r13 ]
[ mov r13, rdi ]
[ push r12 ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov r12, qword ptr [rsi  +  [ displacement ] ] ]
[ mov r9, qword ptr [rsi  +  [ displacement ] ] ]
[ lea rax, ptr [r9 + r12 * 1] ]
[ cmp rax, qword ptr [rcx] ]
[ jnbe  [ addr ]  ]
[ test byte ptr [rdi  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [rsi  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ lea rbx, ptr [rcx + r9 * 1 + [ displacement ] ] ]
[ mov rax, rbx ]
[ cmp r12,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ xor r14d, r14d ]
[ mov r15d,  [ argument ]  ]
[ mov dword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ xor edi, edi ]
[ sub r15, rax ]
[ jmp  [ addr ]  ]
[ mov eax, dword ptr [rbx] ]
[ cmp eax,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp dword ptr [rbx  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp dword ptr [rbx  +  [ displacement ] ],  [ addr ]  ]
[ jnz  [ addr ]  ]
[ movzx edx, byte ptr [r13  +  [ displacement ] ] ]
[ test dl,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ and edx,  [ addr ]  ]
[ or edx,  [ argument ]  ]
[ mov byte ptr [r13  +  [ displacement ] ], dl ]
[ mov esi, dword ptr [rbx  +  [ displacement ] ] ]
[ cmp esi,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ test sil,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ lea rcx, ptr [rbx  +  [ displacement ] ] ]
[ lea r9, ptr [rcx + rsi * 1] ]
[ jmp  [ addr ]  ]
[ mov edx, edi ]
[ mov edi, dword ptr [rcx] ]
[ mov r10d, dword ptr [rcx  +  [ displacement ] ] ]
[ cmp edi, edx ]
[ jnb  [ addr ]  ]
[ jmp  [ addr ]  ]
[ lea r8, ptr [rcx  +  [ displacement ] ] ]
[ mov edx, r10d ]
[ lea r11, ptr [r8 + rdx * 1] ]
[ cmp r9, r11 ]
[ jb  [ addr ]  ]
[ cmp edi,  [ addr ]  ]
[ jz  [ addr ]  ]
[ jnbe  [ addr ]  ]
[ cmp r10d,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov ecx, dword ptr [rcx  +  [ displacement ] ] ]
[ mov dword ptr [rbp- [ displacement ] ], ecx ]
[ jmp  [ addr ]  ]
[ add rax,  [ argument ]  ]
[ and rax,  [ addr ]  ]
[ lea rax, ptr [rsi + rax * 1 + [ displacement ] ] ]
[ and rax,  [ addr ]  ]
[ add rbx, rax ]
[ lea rax, ptr [rbx + r15 * 1] ]
[ cmp r12, rax ]
[ jbe  [ addr ]  ]
[ mov eax, dword ptr [rbx] ]
[ cmp eax,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp dword ptr [rbx  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov esi, dword ptr [rbp- [ displacement ] ] ]
[ mov eax, esi ]
[ and eax,  [ argument ]  ]
[ and esi,  [ argument ]  ]
[ jz  [ addr ]  ]
[ or byte ptr [r13  +  [ displacement ] ],  [ argument ]  ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ or byte ptr [r13  +  [ displacement ] ],  [ argument ]  ]
[ jmp  [ addr ]  ]
[ test r14, r14 ]
[ jz  [ addr ]  ]
[ mov rdi, r14 ]
[ call  [ addr.func ]  ]
[ xor eax, eax ]
[ lea rsp, ptr [rbp- [ displacement ] ] ]
[ pop rbx ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ pop rbp ]
[ ret  ]
RET========================================================
#ret target: 7f5eac66e577
#function name: NULL
#func_id: 16
===========================================================
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ movzx eax, word ptr [r12  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac66e577
#call parent addr: 7f5eac66de92
#root size: 78
===============================================================
RET========================================================
#ret target: 7f5eac66e577
#function name: NULL
#func_id: 16
===========================================================
[ mov rdx, qword ptr [rbx  +  [ displacement ] ] ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ mov qword ptr [r12  +  [ displacement ] ], rdx ]
[ mov rdx, qword ptr [rbx  +  [ displacement ] ] ]
[ mov qword ptr [r12  +  [ displacement ] ], rdx ]
[ mov rsi, qword ptr [rbx  +  [ displacement ] ] ]
[ lea rcx, ptr [rdx- [ displacement ] ] ]
[ and rcx, rsi ]
[ test rdx, rdx ]
[ cmovnz rdx, rcx ]
[ mov qword ptr [r12  +  [ displacement ] ], rdx ]
[ mov rdx, qword ptr [rbx  +  [ displacement ] ] ]
[ mov qword ptr [r12  +  [ displacement ] ], rsi ]
[ mov qword ptr [r12  +  [ displacement ] ], rdx ]
[ movzx edx, byte ptr [r12  +  [ displacement ] ] ]
[ and edx,  [ argument ]  ]
[ cmp dl,  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp edx,  [ addr ]  ]
[ jz  [ addr ]  ]
[ cmp edx,  [ addr ]  ]
[ jnz  [ addr ]  ]
[ movdqu xmm0, xmmword ptr [rbx  +  [ displacement ] ] ]
[ movdqu xmm1, xmmword ptr [rbx  +  [ displacement ] ] ]
[ shufpd xmm0, xmm1,  [ argument ]  ]
[ movups xmmword ptr [r12  +  [ displacement ] ], xmm0 ]
[ jmp  [ addr ]  ]
[ mov edi, dword ptr [rbx  +  [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rdi ]
[ jmp  [ addr ]  ]
[ mov rdi, qword ptr [rbp- [ displacement ] ] ]
[ mov rcx, qword ptr [rbp- [ displacement ] ] ]
[ lea rax, ptr [r15 + r15 * 2- [ displacement ] ] ]
[ shl rax,  [ argument ]  ]
[ mov r8d, dword ptr [rbp- [ displacement ] ] ]
[ mov rbx, qword ptr [rdi * 8] ]
[ mov rax, qword ptr [rcx + rax * 1 + [ displacement ] ] ]
[ mov ecx,  [ argument ]  ]
[ mov r13d, dword ptr [rdi * 8  +  [ displacement ] ] ]
[ sub rax, rbx ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov rsi, rax ]
[ mov rax, rdi ]
[ mov edx, r13d ]
[ mov rdi, qword ptr [rip  +  [ displacement ] ] ]
[ mov r9, qword ptr [rax * 8  +  [ displacement ] ] ]
[ and rdi, rbx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66e321
#call parent addr: 7f5eac66de92
#root size: 78
===============================================================
RET========================================================
#ret target: 7f5eac66e321
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov qword ptr [r12  +  [ displacement ] ], rax ]
[ cmp rax,  [ addr ]  ]
[ jz  [ addr ]  ]
[ mov rcx, qword ptr [rbp- [ displacement ] ] ]
[ lea rdx, ptr [rax + rcx * 1] ]
[ sub rax, rbx ]
[ cmp byte ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [r12  +  [ displacement ] ], rdx ]
[ mov qword ptr [r12], rax ]
[ jz  [ addr ]  ]
[ mov rcx, qword ptr [rbp- [ displacement ] ] ]
[ lea rdx, ptr [r15 + r15 * 2] ]
[ shl rdx,  [ argument ]  ]
[ mov rdi, qword ptr [rcx * 8  +  [ displacement ] ] ]
[ mov rcx, qword ptr [rbp- [ displacement ] ] ]
[ mov rsi, qword ptr [rcx + rdx * 1- [ displacement ] ] ]
[ xor edx, edx ]
[ sub rsi, rdi ]
[ add rdi, rax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66e386
#call parent addr: 7f5eac66de92
#root size: 78
===============================================================
[ nop edx, edi ]
[ mov eax,  [ argument ]  ]
[ syscall  ]
[ cmp rax,  [ addr ]  ]
[ jnb  [ addr ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5eac66e386
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ test eax, eax ]
[ js  [ addr ]  ]
[ or byte ptr [r12  +  [ displacement ] ],  [ argument ]  ]
[ mov rbx, qword ptr [rbp- [ displacement ] ] ]
[ test r13b,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rbx  +  [ displacement ] ] ]
[ add rax, qword ptr [r12] ]
[ mov qword ptr [r12  +  [ displacement ] ], rax ]
[ cmp qword ptr [r12  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp qword ptr [r12  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rbx  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rbx  +  [ displacement ] ] ]
[ cmp rax, rdx ]
[ jbe  [ addr ]  ]
[ mov rcx, qword ptr [r12] ]
[ mov rsi, qword ptr [rip  +  [ displacement ] ] ]
[ lea r8, ptr [rdx + rcx * 1] ]
[ add rcx, rax ]
[ mov rax, rsi ]
[ neg rax ]
[ lea r10, ptr [r8 + rsi * 1- [ displacement ] ] ]
[ and r10, rax ]
[ cmp rcx, r10 ]
[ cmovbe r10, rcx ]
[ cmp r8, r10 ]
[ jnb  [ addr ]  ]
[ mov rdi, qword ptr [rbp- [ displacement ] ] ]
[ mov rdx, qword ptr [rbx  +  [ displacement ] ] ]
[ mov rax, qword ptr [rdi  +  [ displacement ] ] ]
[ cmp rdx, rax ]
[ jnbe  [ addr ]  ]
[ movzx edi, word ptr [rdi  +  [ displacement ] ] ]
[ mov rcx, qword ptr [rbx  +  [ displacement ] ] ]
[ mov r8, qword ptr [rbx] ]
[ lea rsi, ptr [rdi * 8] ]
[ add rcx, rdx ]
[ sub rsi, rdi ]
[ sub rcx, r8 ]
[ lea rsi, ptr [rax + rsi * 8] ]
[ cmp rcx, rsi ]
[ jb  [ addr ]  ]
[ add rax, r8 ]
[ sub rax, rdx ]
[ mov qword ptr [r12  +  [ displacement ] ], rax ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [rbx  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rbx  +  [ displacement ] ] ]
[ cmp rax, rdx ]
[ jbe  [ addr ]  ]
[ mov rcx, qword ptr [r12] ]
[ mov rsi, qword ptr [rip  +  [ displacement ] ] ]
[ lea r8, ptr [rdx + rcx * 1] ]
[ add rcx, rax ]
[ mov rax, rsi ]
[ neg rax ]
[ lea r10, ptr [r8 + rsi * 1- [ displacement ] ] ]
[ and r10, rax ]
[ cmp rcx, r10 ]
[ cmovbe r10, rcx ]
[ cmp r8, r10 ]
[ jnb  [ addr ]  ]
[ test r13b,  [ argument ]  ]
[ jz  [ addr ]  ]
[ add rbx,  [ argument ]  ]
[ lea rax, ptr [r15 + r15 * 2] ]
[ shl rax,  [ argument ]  ]
[ add rax, qword ptr [rbp- [ displacement ] ] ]
[ cmp rbx, rax ]
[ jnb  [ addr ]  ]
[ mov rsi, qword ptr [rbx  +  [ displacement ] ] ]
[ mov rax, qword ptr [rbx] ]
[ mov r13d, dword ptr [rbx  +  [ displacement ] ] ]
[ cmp rsi, rax ]
[ jbe  [ addr ]  ]
[ sub rsi, rax ]
[ mov r9, qword ptr [rbx  +  [ displacement ] ] ]
[ add rax, qword ptr [r12] ]
[ mov ecx,  [ argument ]  ]
[ mov r8d, dword ptr [rbp- [ displacement ] ] ]
[ mov rdi, rax ]
[ mov edx, r13d ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66e48d
#call parent addr: 7f5eac66de92
#root size: 78
===============================================================
RET========================================================
#ret target: 7f5eac66e48d
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ cmp rax,  [ addr ]  ]
[ jnz  [ addr ]  ]
[ lea r9, ptr [rip  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ test r13b,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rbx  +  [ displacement ] ] ]
[ add rax, qword ptr [r12] ]
[ mov qword ptr [r12  +  [ displacement ] ], rax ]
[ cmp qword ptr [r12  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rbx  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rbx  +  [ displacement ] ] ]
[ cmp rax, rdx ]
[ jbe  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac66e48d
#call parent addr: 7f5eac66de92
#root size: 78
===============================================================
RET========================================================
#ret target: 7f5eac66e48d
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66e48d
#call parent addr: 7f5eac66de92
#root size: 78
===============================================================
RET========================================================
#ret target: 7f5eac66e48d
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ test r13b,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rdx, r10 ]
[ xor esi, esi ]
[ mov rdi, r8 ]
[ mov qword ptr [rbp- [ displacement ] ], rcx ]
[ sub rdx, r8 ]
[ mov qword ptr [rbp- [ displacement ] ], r10 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66e424
#call parent addr: 7f5eac66de92
#root size: 78
===============================================================
[ lea rcx, ptr [rdi  +  [ displacement ] ] ]
[ movdqu xmmword ptr [rdi], xmm0 ]
[ and rcx,  [ addr ]  ]
[ movdqu xmmword ptr [rdi + rdx * 1- [ displacement ] ], xmm0 ]
[ movdqu xmmword ptr [rdi  +  [ displacement ] ], xmm0 ]
[ movdqu xmmword ptr [rdi + rdx * 1- [ displacement ] ], xmm0 ]
[ movdqu xmmword ptr [rdi  +  [ displacement ] ], xmm0 ]
[ movdqu xmmword ptr [rdi + rdx * 1- [ displacement ] ], xmm0 ]
[ movdqu xmmword ptr [rdi  +  [ displacement ] ], xmm0 ]
[ movdqu xmmword ptr [rdi + rdx * 1- [ displacement ] ], xmm0 ]
[ add rdx, rdi ]
[ and rdx,  [ addr ]  ]
[ cmp rcx, rdx ]
[ jz  [ addr ]  ]
[ movdqa xmmword ptr [rcx], xmm0 ]
[ movdqa xmmword ptr [rcx  +  [ displacement ] ], xmm0 ]
[ movdqa xmmword ptr [rcx  +  [ displacement ] ], xmm0 ]
[ movdqa xmmword ptr [rcx  +  [ displacement ] ], xmm0 ]
[ add rcx,  [ argument ]  ]
[ cmp rdx, rcx ]
[ jnz  [ addr ]  ]
[ ret  ]
[ movdqa xmmword ptr [rcx], xmm0 ]
[ movdqa xmmword ptr [rcx  +  [ displacement ] ], xmm0 ]
[ movdqa xmmword ptr [rcx  +  [ displacement ] ], xmm0 ]
[ movdqa xmmword ptr [rcx  +  [ displacement ] ], xmm0 ]
[ add rcx,  [ argument ]  ]
[ cmp rdx, rcx ]
[ jnz  [ addr ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5eac66e424
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov r10, qword ptr [rbp- [ displacement ] ] ]
[ mov rcx, qword ptr [rbp- [ displacement ] ] ]
[ cmp rcx, r10 ]
[ jnbe  [ addr ]  ]
[ add rbx,  [ argument ]  ]
[ lea rax, ptr [r15 + r15 * 2] ]
[ shl rax,  [ argument ]  ]
[ add rax, qword ptr [rbp- [ displacement ] ] ]
[ cmp rbx, rax ]
[ jnb  [ addr ]  ]
[ mov rsi, qword ptr [rbx  +  [ displacement ] ] ]
[ mov rax, qword ptr [rbx] ]
[ mov r13d, dword ptr [rbx  +  [ displacement ] ] ]
[ cmp rsi, rax ]
[ jbe  [ addr ]  ]
[ sub rcx, r10 ]
[ xor r9d, r9d ]
[ mov r8d,  [ addr ]  ]
[ mov edx, r13d ]
[ mov rsi, rcx ]
[ mov rdi, r10 ]
[ mov ecx,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66ec1e
#call parent addr: 7f5eac66de92
#root size: 78
===============================================================
RET========================================================
#ret target: 7f5eac66ec1e
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ cmp rax,  [ addr ]  ]
[ jnz  [ addr ]  ]
[ lea r9, ptr [rip  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ mov rsp, qword ptr [rbp- [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov r10, qword ptr [r12] ]
[ add rax, r10 ]
[ mov qword ptr [r12  +  [ displacement ] ], rax ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [rax] ]
[ lea rcx, ptr [r12  +  [ displacement ] ] ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ mov edi,  [ addr ]  ]
[ mov ebx,  [ addr ]  ]
[ mov r13d,  [ addr ]  ]
[ mov r15d,  [ addr ]  ]
[ mov r11d,  [ argument ]  ]
[ mov r9d,  [ addr ]  ]
[ jmp  [ addr ]  ]
[ cmp rdx,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ mov qword ptr [rcx + rdx * 8], rax ]
[ jmp  [ addr ]  ]
[ mov rdx, qword ptr [rax  +  [ displacement ] ] ]
[ add rax,  [ argument ]  ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ cmp rdx,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ mov qword ptr [rcx + rdx * 8], rax ]
[ jmp  [ addr ]  ]
[ mov rsi, rdi ]
[ sub rsi, rdx ]
[ cmp rsi,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ mov rsi, r9 ]
[ sub rsi, rdx ]
[ mov qword ptr [rcx + rsi * 8], rax ]
[ mov rdx, qword ptr [rax  +  [ displacement ] ] ]
[ add rax,  [ argument ]  ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ cmp rdx,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ lea esi, ptr [rdx + rdx * 1] ]
[ mov r8d, esi ]
[ sar r8d,  [ argument ]  ]
[ cmp esi,  [ addr ]  ]
[ jbe  [ addr ]  ]
[ mov edx, r11d ]
[ sub edx, r8d ]
[ mov qword ptr [rcx + rdx * 8], rax ]
[ jmp  [ addr ]  ]
[ mov rsi, rbx ]
[ sub rsi, rdx ]
[ cmp rsi,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ mov rsi, r13 ]
[ sub rsi, rdx ]
[ cmp rsi,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ mov esi,  [ addr ]  ]
[ sub rsi, rdx ]
[ mov rdx, rsi ]
[ jmp  [ addr ]  ]
[ mov qword ptr [rcx + rdx * 8], rax ]
[ jmp  [ addr ]  ]
[ test r10, r10 ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ add qword ptr [rax  +  [ displacement ] ], r10 ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ add qword ptr [rax  +  [ displacement ] ], r10 ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ add qword ptr [rax  +  [ displacement ] ], r10 ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ add qword ptr [rax  +  [ displacement ] ], r10 ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ add qword ptr [rax  +  [ displacement ] ], r10 ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ add qword ptr [rax  +  [ displacement ] ], r10 ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ add qword ptr [rax  +  [ displacement ] ], r10 ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ add qword ptr [rax  +  [ displacement ] ], r10 ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ cmp qword ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [r12  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ cmp qword ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [rax  +  [ displacement ] ] ]
[ mov dword ptr [r12  +  [ displacement ] ], edx ]
[ mov eax, edx ]
[ test dl,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ test byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [r12  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ cmp qword ptr [r12  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov qword ptr [r12  +  [ displacement ] ],  [ argument ]  ]
[ test al,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov ecx, dword ptr [rbp  +  [ displacement ] ] ]
[ test ecx, ecx ]
[ js  [ addr ]  ]
[ test al,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov ecx, dword ptr [rbp  +  [ displacement ] ] ]
[ test ecx, ecx ]
[ js  [ addr ]  ]
[ test eax,  [ addr ]  ]
[ jz  [ addr ]  ]
[ test eax,  [ addr ]  ]
[ jz  [ addr ]  ]
[ mov edx, dword ptr [rbp- [ displacement ] ] ]
[ test edx, edx ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ add rax, qword ptr [r12] ]
[ mov qword ptr [r12  +  [ displacement ] ], rax ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ not eax ]
[ and rax, qword ptr [rbp- [ displacement ] ] ]
[ test al,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ add rax, qword ptr [r12] ]
[ mov qword ptr [r12  +  [ displacement ] ], rax ]
[ mov edi, dword ptr [rbp- [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66e95b
#call parent addr: 7f5eac66de92
#root size: 78
===============================================================
RET========================================================
#ret target: 7f5eac66e95b
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ cmp dword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ mov r8, qword ptr [r12] ]
[ add rax, r8 ]
[ mov qword ptr [r12  +  [ displacement ] ], rax ]
[ test byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rdi, r12 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66e99c
#call parent addr: 7f5eac66de92
#root size: 78
===============================================================
RET========================================================
#ret target: 7f5eac66e99c
#function name: _dl_rtld_di_serinfo
#func_id: 17
===========================================================
[ test byte ptr [rbp  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [r12  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rsi, qword ptr [r12  +  [ displacement ] ] ]
[ lea rax, ptr [r12  +  [ displacement ] ] ]
[ cmp qword ptr [rsi], rax ]
[ jz  [ addr ]  ]
[ test byte ptr [r12  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ movdqa xmm4, xmmword ptr [rbp- [ displacement ] ] ]
[ cmp qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ movups xmmword ptr [r12  +  [ displacement ] ], xmm4 ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [r12  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ movzx eax, byte ptr [r12  +  [ displacement ] ] ]
[ and eax,  [ argument ]  ]
[ cmp al,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66ea65
#call parent addr: 7f5eac66de92
#root size: 78
===============================================================
[ nop edx, edi ]
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov r8, qword ptr [rip  +  [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ lea rax, ptr [r8  +  [ displacement ] ] ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ ret  ]
RET========================================================
#ret target: 7f5eac66ea65
#function name: _dl_mcount
#func_id: 19
===========================================================
[ mov qword ptr [r12  +  [ displacement ] ], rax ]
[ mov rsi, qword ptr [rbp  +  [ displacement ] ] ]
[ mov rdi, r12 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66ea79
#call parent addr: 7f5eac66de92
#root size: 78
===============================================================
CALL===========================================================
#now call addr: 7f5eac67417d
#call parent addr: 7f5eac66ea79
#root size: 79
===============================================================
RET========================================================
#ret target: 7f5eac67417d
#function name: NULL
#func_id: 16
===========================================================
[ mov rdx, rax ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ mov qword ptr [rbp  +  [ displacement ] ], rdx ]
[ mov qword ptr [rdx  +  [ displacement ] ], rbp ]
[ lea rax, ptr [rbx + rbx * 8] ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ pop rbx ]
[ shl rax,  [ argument ]  ]
[ add dword ptr [r12 + rax * 1 + [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rbp  +  [ displacement ] ], rax ]
[ add rax,  [ argument ]  ]
[ pop rbp ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ pop r12 ]
[ jmp qword ptr [rip  +  [ displacement ] ] ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [r12  +  [ displacement ] ] ]
[ lea r14, ptr [rip  +  [ displacement ] ] ]
[ lea rdx, ptr [rdx + rdx * 8] ]
[ shl rdx,  [ argument ]  ]
[ mov rdx, qword ptr [r14 + rdx * 1] ]
[ test byte ptr [rdx  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ lea rdx, ptr [r14  +  [ displacement ] ] ]
[ mov rbx, qword ptr [rip  +  [ displacement ] ] ]
[ xor r13d, r13d ]
[ cmp r12, rdx ]
[ jz  [ addr ]  ]
[ lea rsp, ptr [rbp- [ displacement ] ] ]
[ mov rax, r12 ]
[ pop rbx ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ pop rbp ]
[ ret  ]
[ add rsp,  [ argument ]  ]
[ mov r15, rax ]
[ jmp  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ mov rax, r15 ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ mov qword ptr [rbx  +  [ displacement ] ], rax ]
[ pop rbx ]
[ ret  ]
[ mov rax, qword ptr [rsp] ]
[ mov rcx, qword ptr [rsp  +  [ displacement ] ] ]
[ pxor xmm0, xmm0 ]
[ mov qword ptr [rip  +  [ displacement ] ], rcx ]
[ mov qword ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ movups xmmword ptr [rax], xmm0 ]
[ add rsp,  [ argument ]  ]
[ mov eax, r12d ]
[ pop r12 ]
[ ret  ]
[ cmp qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ test byte ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rdx, rsp ]
[ cmp rsp, rdx ]
[ jz  [ addr ]  ]
[ sub rsp,  [ argument ]  ]
[ or qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov rcx, qword ptr [rbp- [ displacement ] ] ]
[ add dword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ lea rdx, ptr [rsp  +  [ displacement ] ] ]
[ and rdx,  [ addr ]  ]
[ mov qword ptr [rdx  +  [ displacement ] ], rax ]
[ mov dword ptr [rdx],  [ argument ]  ]
[ mov qword ptr [rdx  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rcx  +  [ displacement ] ], rdx ]
[ movzx ecx, byte ptr [rax  +  [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rdx ]
[ and ecx,  [ addr ]  ]
[ or ecx,  [ argument ]  ]
[ mov byte ptr [rax  +  [ displacement ] ], cl ]
[ mov rsi, qword ptr [rbp- [ displacement ] ] ]
[ test rsi, rsi ]
[ jz  [ addr ]  ]
[ mov edx, r15d ]
[ add r15d,  [ argument ]  ]
[ mov qword ptr [rsi + rdx * 8], rax ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ add r12,  [ argument ]  ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ cmp rax,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ add r12,  [ argument ]  ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ cmp rax,  [ argument ]  ]
[ jz  [ addr ]  ]
[ and rax,  [ addr ]  ]
[ cmp rax,  [ addr ]  ]
[ jnz  [ addr ]  ]
[ mov r14, qword ptr [rbp- [ displacement ] ] ]
[ add r14, qword ptr [r12  +  [ displacement ] ] ]
[ mov rdi, r14 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac67684f
#call parent addr: 7f5eac66ea79
#root size: 79
===============================================================
CALL===========================================================
#now call addr: 7f5eac6707b4
#call parent addr: 7f5eac67684f
#root size: 80
===============================================================
RET========================================================
#ret target: 7f5eac6707b4
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67694e
#call parent addr: 7f5eac67684f
#root size: 80
===============================================================
CALL===========================================================
#now call addr: 7f5eac684c8e
#call parent addr: 7f5eac67694e
#root size: 81
===============================================================
RET========================================================
#ret target: 7f5eac684c8e
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac684ca8
#call parent addr: 7f5eac67694e
#root size: 81
===============================================================
CALL===========================================================
#now call addr: 7f5eac676500
#call parent addr: 7f5eac684ca8
#root size: 82
===============================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac676500
#root size: 83
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 84
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 84
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac6714e4
#root size: 84
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 85
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 85
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 85
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac671512
#call parent addr: 7f5eac6714e4
#root size: 85
===============================================================
RET========================================================
#ret target: 7f5eac671512
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac6714e4
#root size: 85
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 86
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 86
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac671512
#call parent addr: 7f5eac6714e4
#root size: 86
===============================================================
RET========================================================
#ret target: 7f5eac671512
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac6714e4
#root size: 86
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 87
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 87
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac671512
#call parent addr: 7f5eac6714e4
#root size: 87
===============================================================
RET========================================================
#ret target: 7f5eac671512
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac671588
#call parent addr: 7f5eac6714e4
#root size: 87
===============================================================
RET========================================================
#ret target: 7f5eac671588
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac671735
#call parent addr: 7f5eac6714e4
#root size: 87
===============================================================
RET========================================================
#ret target: 7f5eac671735
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67179e
#call parent addr: 7f5eac6714e4
#root size: 87
===============================================================
CALL===========================================================
#now call addr: 7f5eac66fb4b
#call parent addr: 7f5eac67179e
#root size: 88
===============================================================
RET========================================================
#ret target: 7f5eac66fb4b
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov rbx, r9 ]
[ cmp rax, r9 ]
[ jnbe  [ addr ]  ]
[ mov edx, dword ptr [rbp- [ displacement ] ] ]
[ test edx, edx ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ cmp eax,  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp dword ptr [r14 + rbx * 4 + [ displacement ] ],  [ argument ]  ]
[ lea r9, ptr [rbx  +  [ displacement ] ] ]
[ jz  [ addr ]  ]
[ mov rax, rbx ]
[ mov rdi, r13 ]
[ shl rax,  [ argument ]  ]
[ add rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rax  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rax] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac67179e
#root size: 88
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac67179e
#root size: 88
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ sub rax, r15 ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ test byte ptr [rax],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov r8, qword ptr [rbp  +  [ displacement ] ] ]
[ mov ecx, dword ptr [rbp  +  [ displacement ] ] ]
[ mov rdx, r12 ]
[ mov rdi, r15 ]
[ mov rsi, qword ptr [rbp- [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac67179e
#root size: 88
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 89
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fb4b
#call parent addr: 7f5eac66fc11
#root size: 89
===============================================================
RET========================================================
#ret target: 7f5eac66fb4b
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 89
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 89
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 89
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 90
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 90
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 90
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 90
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 91
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 91
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 91
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 91
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 92
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 92
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 92
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 92
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 93
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 93
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 93
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 93
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 94
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 94
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 94
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 94
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 95
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 95
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 95
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 95
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 96
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 96
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 96
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 96
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 97
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 97
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 97
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 97
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 98
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 98
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 98
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 98
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 99
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 99
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 99
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 99
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 100
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 100
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 100
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 100
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 101
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 101
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 101
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 101
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 102
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 102
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 102
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 102
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 103
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 103
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 103
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 103
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 104
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 104
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 104
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 104
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 105
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac671985
#call parent addr: 7f5eac66fc11
#root size: 105
===============================================================
[ mov r12, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ lea r13, ptr [r8 + r12 * 1] ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ cmp rax,  [ addr ]  ]
[ jz  [ addr ]  ]
[ mov r12, qword ptr [rip  +  [ displacement ] ] ]
[ sub r13d, eax ]
[ test r12, r12 ]
[ jz  [ addr ]  ]
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ mov rdi, r12 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac6806ec
#call parent addr: 7f5eac671985
#root size: 106
===============================================================
RET========================================================
#ret target: 7f5eac6806ec
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac680738
#call parent addr: 7f5eac671985
#root size: 106
===============================================================
RET========================================================
#ret target: 7f5eac680738
#function name: __tunable_get_val
#func_id: 29
===========================================================
CALL===========================================================
#now call addr: 7f5eac68079b
#call parent addr: 7f5eac671985
#root size: 106
===============================================================
RET========================================================
#ret target: 7f5eac68079b
#function name: _dl_exception_free
#func_id: 28
===========================================================
CALL===========================================================
#now call addr: 7f5eac68079b
#call parent addr: 7f5eac671985
#root size: 106
===============================================================
RET========================================================
#ret target: 7f5eac68079b
#function name: _dl_exception_free
#func_id: 28
===========================================================
CALL===========================================================
#now call addr: 7f5eac68079b
#call parent addr: 7f5eac671985
#root size: 106
===============================================================
RET========================================================
#ret target: 7f5eac68079b
#function name: _dl_exception_free
#func_id: 28
===========================================================
CALL===========================================================
#now call addr: 7f5eac68079b
#call parent addr: 7f5eac671985
#root size: 106
===============================================================
RET========================================================
#ret target: 7f5eac68079b
#function name: _dl_exception_free
#func_id: 28
===========================================================
CALL===========================================================
#now call addr: 7f5eac68079b
#call parent addr: 7f5eac671985
#root size: 106
===============================================================
RET========================================================
#ret target: 7f5eac68079b
#function name: _dl_exception_free
#func_id: 28
===========================================================
CALL===========================================================
#now call addr: 7f5eac68079b
#call parent addr: 7f5eac671985
#root size: 106
===============================================================
RET========================================================
#ret target: 7f5eac68079b
#function name: _dl_exception_free
#func_id: 28
===========================================================
CALL===========================================================
#now call addr: 7f5eac68079b
#call parent addr: 7f5eac671985
#root size: 106
===============================================================
RET========================================================
#ret target: 7f5eac68079b
#function name: _dl_exception_free
#func_id: 28
===========================================================
CALL===========================================================
#now call addr: 7f5eac68079b
#call parent addr: 7f5eac671985
#root size: 106
===============================================================
RET========================================================
#ret target: 7f5eac68079b
#function name: _dl_exception_free
#func_id: 28
===========================================================
CALL===========================================================
#now call addr: 7f5eac6807f6
#call parent addr: 7f5eac671985
#root size: 106
===============================================================
RET========================================================
#ret target: 7f5eac6807f6
#function name: _dl_exception_free
#func_id: 28
===========================================================
[ mov rcx, qword ptr [rbp- [ displacement ] ] ]
[ sub rcx,  [ argument ]  ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov r14d, r15d ]
[ test r14d, r14d ]
[ jnz  [ addr ]  ]
[ mov rcx,  [ addr ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ and rax, qword ptr [rbp- [ displacement ] ] ]
[ or rax, rcx ]
[ cmp dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ not rax ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ mov dword ptr [rbp- [ displacement ] ], eax ]
[ jz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac6807f6
#call parent addr: 7f5eac671985
#root size: 106
===============================================================
RET========================================================
#ret target: 7f5eac6807f6
#function name: _dl_exception_free
#func_id: 28
===========================================================
CALL===========================================================
#now call addr: 7f5eac680a1c
#call parent addr: 7f5eac671985
#root size: 106
===============================================================
RET========================================================
#ret target: 7f5eac680a1c
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac680a75
#call parent addr: 7f5eac671985
#root size: 106
===============================================================
RET========================================================
#ret target: 7f5eac680a75
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov rdi, rax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac680a7d
#call parent addr: 7f5eac671985
#root size: 106
===============================================================
CALL===========================================================
#now call addr: 7f5eac6865be
#call parent addr: 7f5eac680a7d
#root size: 107
===============================================================
[ and rax,  [ addr ]  ]
[ pcmpeqb xmm0, xmmword ptr [rax] ]
[ pcmpeqb xmm1, xmmword ptr [rax  +  [ displacement ] ] ]
[ pcmpeqb xmm2, xmmword ptr [rax  +  [ displacement ] ] ]
[ pcmpeqb xmm3, xmmword ptr [rax  +  [ displacement ] ] ]
[ pmovmskb esi, xmm0 ]
[ pmovmskb edx, xmm1 ]
[ pmovmskb r8d, xmm2 ]
[ pmovmskb ecx, xmm3 ]
[ shl rdx,  [ argument ]  ]
[ shl rcx,  [ argument ]  ]
[ or rdx, rsi ]
[ or rcx, r8 ]
[ shl rcx,  [ argument ]  ]
[ or rdx, rcx ]
[ mov rcx, rdi ]
[ xor rcx, rax ]
[ and rax,  [ addr ]  ]
[ sar rdx, cl ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ bsf rax, rdx ]
[ ret  ]
[ pxor xmm1, xmm1 ]
[ pxor xmm2, xmm2 ]
[ pxor xmm3, xmm3 ]
[ nop dword ptr [rax], eax ]
[ movdqa xmm0, xmmword ptr [rax  +  [ displacement ] ] ]
[ pminub xmm0, xmmword ptr [rax  +  [ displacement ] ] ]
[ pminub xmm0, xmmword ptr [rax  +  [ displacement ] ] ]
[ pminub xmm0, xmmword ptr [rax  +  [ displacement ] ] ]
[ pcmpeqb xmm0, xmm3 ]
[ pmovmskb edx, xmm0 ]
[ test edx, edx ]
[ jnz  [ addr ]  ]
[ sub rax,  [ addr ]  ]
[ movdqa xmm0, xmmword ptr [rax] ]
[ pminub xmm0, xmmword ptr [rax  +  [ displacement ] ] ]
[ pminub xmm0, xmmword ptr [rax  +  [ displacement ] ] ]
[ pminub xmm0, xmmword ptr [rax  +  [ displacement ] ] ]
[ pcmpeqb xmm0, xmm3 ]
[ pmovmskb edx, xmm0 ]
[ test edx, edx ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
RET========================================================
#ret target: 7f5eac6865be
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ lea r12, ptr [rax  +  [ displacement ] ] ]
[ mov rdi, r12 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac6865ca
#call parent addr: 7f5eac680a7d
#root size: 107
===============================================================
RET========================================================
#ret target: 7f5eac6865ca
#function name: malloc
#func_id: 32
===========================================================
[ lea rsp, ptr [rbp- [ displacement ] ] ]
[ pop rbx ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ pop rbp ]
[ ret  ]
CALL===========================================================
#now call addr: 7f5eac6719c8
#call parent addr: 7f5eac680a7d
#root size: 107
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac6719c8
#root size: 108
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66f3f5
#call parent addr: 7f5eac6719c8
#root size: 108
===============================================================
RET========================================================
#ret target: 7f5eac66f3f5
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov rax,  [ addr ]  ]
[ cmp qword ptr [r14  +  [ displacement ] ], rax ]
[ jz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ movzx eax, byte ptr [r14  +  [ displacement ] ] ]
[ test al, al ]
[ jnz  [ addr ]  ]
[ mov edi, dword ptr [rip  +  [ displacement ] ] ]
[ cmp dword ptr [r14  +  [ displacement ] ], edi ]
[ jz  [ addr ]  ]
[ cmp dword ptr [r14  +  [ displacement ] ],  [ addr ]  ]
[ jnz  [ addr ]  ]
[ lea rax, ptr [rbx  +  [ displacement ] ] ]
[ mov rdi, rsp ]
[ mov rdx, rax ]
[ and rax,  [ addr ]  ]
[ sub rdi, rax ]
[ and rdx,  [ addr ]  ]
[ mov rax, rdi ]
[ cmp rsp, rax ]
[ jz  [ addr ]  ]
[ sub rsp,  [ argument ]  ]
[ or qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ cmp rsp, rax ]
[ jnz  [ addr ]  ]
[ and edx,  [ argument ]  ]
[ sub rsp, rdx ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ and edx,  [ argument ]  ]
[ sub rsp, rdx ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ or qword ptr [rsp + rdx * 1- [ displacement ] ],  [ argument ]  ]
[ lea r8, ptr [rsp  +  [ displacement ] ] ]
[ mov rdx, rbx ]
[ mov edi, r12d ]
[ and r8,  [ addr ]  ]
[ mov rsi, r8 ]
[ mov qword ptr [rbp- [ displacement ] ], r8 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66f8be
#call parent addr: 7f5eac6719c8
#root size: 108
===============================================================
[ nop edx, edi ]
[ mov r10, rcx ]
[ mov eax,  [ argument ]  ]
[ syscall  ]
[ cmp rax,  [ addr ]  ]
[ jnbe  [ addr ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5eac66f8be
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov r8, qword ptr [rbp- [ displacement ] ] ]
[ cmp rax, rbx ]
[ jnz  [ addr ]  ]
[ movzx edx, word ptr [r14  +  [ displacement ] ] ]
[ lea rax, ptr [rdx * 8] ]
[ sub rax, rdx ]
[ shl rax,  [ argument ]  ]
[ jmp  [ addr ]  ]
[ add rax, r8 ]
[ cmp r8, rax ]
[ jnb  [ addr ]  ]
[ mov rbx, r8 ]
[ xor r9d, r9d ]
[ jmp  [ addr ]  ]
[ lea rax, ptr [r11  +  [ displacement ] ] ]
[ mov rdi, rsp ]
[ mov rdx, rax ]
[ and rax,  [ addr ]  ]
[ sub rdi, rax ]
[ and rdx,  [ addr ]  ]
[ mov rax, rdi ]
[ cmp rsp, rax ]
[ jz  [ addr ]  ]
[ sub rsp,  [ argument ]  ]
[ or qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ cmp rsp, rax ]
[ jnz  [ addr ]  ]
[ and edx,  [ argument ]  ]
[ sub rsp, rdx ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ and edx,  [ argument ]  ]
[ sub rsp, rdx ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ or qword ptr [rsp + rdx * 1- [ displacement ] ],  [ argument ]  ]
[ lea r15, ptr [rsp  +  [ displacement ] ] ]
[ and r15,  [ addr ]  ]
[ mov rdx, r11 ]
[ mov rsi, r15 ]
[ mov edi, r12d ]
[ mov qword ptr [rbp- [ displacement ] ], r9 ]
[ mov qword ptr [rbp- [ displacement ] ], r8 ]
[ mov qword ptr [rbp- [ displacement ] ], r11 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66f65f
#call parent addr: 7f5eac6719c8
#root size: 108
===============================================================
RET========================================================
#ret target: 7f5eac66f65f
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov r11, qword ptr [rbp- [ displacement ] ] ]
[ mov r8, qword ptr [rbp- [ displacement ] ] ]
[ mov r9, qword ptr [rbp- [ displacement ] ] ]
[ cmp rax, r11 ]
[ jnz  [ addr ]  ]
[ lea rcx, ptr [rip  +  [ displacement ] ] ]
[ mov rax, qword ptr [r15] ]
[ mov rdx, qword ptr [r15  +  [ displacement ] ] ]
[ xor rax, qword ptr [rcx] ]
[ xor rdx, qword ptr [rip  +  [ displacement ] ] ]
[ or rdx, rax ]
[ jnz  [ addr ]  ]
[ test r11, r11 ]
[ jz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac66f65f
#call parent addr: 7f5eac6719c8
#root size: 108
===============================================================
RET========================================================
#ret target: 7f5eac66f65f
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov rax, qword ptr [r15] ]
[ mov rdx, qword ptr [r15  +  [ displacement ] ] ]
[ xor rax, qword ptr [rcx] ]
[ xor rdx, qword ptr [rip  +  [ displacement ] ] ]
[ or rdx, rax ]
[ jnz  [ addr ]  ]
[ test r11, r11 ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [r15  +  [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ movzx eax, byte ptr [r15  +  [ displacement ] ] ]
[ movzx ecx, byte ptr [r15  +  [ displacement ] ] ]
[ mov edx, dword ptr [rip  +  [ displacement ] ] ]
[ shl eax,  [ argument ]  ]
[ add eax, ecx ]
[ movzx ecx, byte ptr [r15  +  [ displacement ] ] ]
[ shl eax,  [ argument ]  ]
[ add eax, ecx ]
[ cmp eax, edx ]
[ jbe  [ addr ]  ]
[ test edx, edx ]
[ jz  [ addr ]  ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac66f803
#call parent addr: 7f5eac6719c8
#root size: 108
===============================================================
RET========================================================
#ret target: 7f5eac66f803
#function name: free
#func_id: 34
===========================================================
CALL===========================================================
#now call addr: 7f5eac671616
#call parent addr: 7f5eac6719c8
#root size: 108
===============================================================
CALL===========================================================
#now call addr: 7f5eac66ddff
#call parent addr: 7f5eac671616
#root size: 109
===============================================================
RET========================================================
#ret target: 7f5eac66ddff
#function name: _dl_debug_state
#func_id: 18
===========================================================
CALL===========================================================
#now call addr: 7f5eac66e032
#call parent addr: 7f5eac671616
#root size: 109
===============================================================
RET========================================================
#ret target: 7f5eac66e032
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ cmp rcx, qword ptr [r12  +  [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov edi, dword ptr [rbp- [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66de92
#call parent addr: 7f5eac671616
#root size: 109
===============================================================
CALL===========================================================
#now call addr: 7f5eac674245
#call parent addr: 7f5eac66de92
#root size: 110
===============================================================
RET========================================================
#ret target: 7f5eac674245
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67426f
#call parent addr: 7f5eac66de92
#root size: 110
===============================================================
RET========================================================
#ret target: 7f5eac67426f
#function name: malloc
#func_id: 32
===========================================================
CALL===========================================================
#now call addr: 7f5eac6742b4
#call parent addr: 7f5eac66de92
#root size: 110
===============================================================
RET========================================================
#ret target: 7f5eac6742b4
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov r9, qword ptr [rsp  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rsp  +  [ displacement ] ] ]
[ mov ecx, dword ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [r9  +  [ displacement ] ], rax ]
[ movzx esi, byte ptr [rdx] ]
[ mov dword ptr [r9  +  [ displacement ] ],  [ argument ]  ]
[ test ecx, ecx ]
[ jnz  [ addr ]  ]
[ test sil, sil ]
[ jnz  [ addr ]  ]
[ lea rdx, ptr [rax + r13 * 1] ]
[ movzx eax, byte ptr [r14  +  [ displacement ] ] ]
[ movzx ebp, byte ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [r14  +  [ displacement ] ], rdx ]
[ and ebp,  [ argument ]  ]
[ and eax,  [ addr ]  ]
[ or ebp, eax ]
[ mov byte ptr [r14  +  [ displacement ] ], bpl ]
[ test byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac6743f4
#call parent addr: 7f5eac66de92
#root size: 110
===============================================================
RET========================================================
#ret target: 7f5eac6743f4
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6745a3
#call parent addr: 7f5eac66de92
#root size: 110
===============================================================
RET========================================================
#ret target: 7f5eac6745a3
#function name: malloc
#func_id: 32
===========================================================
CALL===========================================================
#now call addr: 7f5eac6744b0
#call parent addr: 7f5eac66de92
#root size: 110
===============================================================
RET========================================================
#ret target: 7f5eac6744b0
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ nop dword ptr [rax], eax ]
[ mov rdx, rax ]
[ sub rax,  [ argument ]  ]
[ cmp byte ptr [rax],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp rbp, rax ]
[ cmovz rax, rdx ]
[ mov byte ptr [rax],  [ argument ]  ]
[ mov qword ptr [r14  +  [ displacement ] ], rbp ]
[ add rsp,  [ argument ]  ]
[ mov rax, r14 ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ lea rax, ptr [rbx  +  [ displacement ] ] ]
[ mov rdi, rsp ]
[ mov rdx, rax ]
[ and rax,  [ addr ]  ]
[ sub rdi, rax ]
[ and rdx,  [ addr ]  ]
[ mov rax, rdi ]
[ cmp rsp, rax ]
[ jz  [ addr ]  ]
[ sub rsp,  [ argument ]  ]
[ or qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ jmp  [ addr ]  ]
[ and edx,  [ argument ]  ]
[ sub rsp, rdx ]
[ test rdx, rdx ]
[ jnz  [ addr ]  ]
[ lea r14, ptr [rsp  +  [ displacement ] ] ]
[ mov edi, dword ptr [rbp- [ displacement ] ] ]
[ mov rdx, rbx ]
[ and r14,  [ addr ]  ]
[ mov rsi, r14 ]
[ call  [ addr.func ]  ]
[ or qword ptr [rsp + rdx * 1- [ displacement ] ],  [ argument ]  ]
[ jmp  [ addr ]  ]
[ lea r14, ptr [rsp  +  [ displacement ] ] ]
[ mov edi, dword ptr [rbp- [ displacement ] ] ]
[ mov rdx, rbx ]
[ and r14,  [ addr ]  ]
[ mov rsi, r14 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66e5e3
#call parent addr: 7f5eac66de92
#root size: 110
===============================================================
RET========================================================
#ret target: 7f5eac66e5e3
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ cmp rax, rbx ]
[ jz  [ addr ]  ]
[ lea r9, ptr [rip  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ movzx eax, word ptr [r12  +  [ displacement ] ] ]
[ mov rdi, rsp ]
[ mov qword ptr [rbp- [ displacement ] ], rsp ]
[ lea rdx, ptr [rax + rax * 2] ]
[ shl rdx,  [ argument ]  ]
[ mov rcx, rdx ]
[ and rcx,  [ addr ]  ]
[ sub rdi, rcx ]
[ mov rcx, rdi ]
[ cmp rsp, rcx ]
[ jz  [ addr ]  ]
[ sub rsp,  [ argument ]  ]
[ or qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ cmp rsp, rcx ]
[ jnz  [ addr ]  ]
[ and edx,  [ argument ]  ]
[ sub rsp, rdx ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [rbx  +  [ displacement ] ] ]
[ mov qword ptr [r12  +  [ displacement ] ], rdx ]
[ jmp  [ addr ]  ]
[ lea rdx, ptr [rax * 8] ]
[ add rbx,  [ argument ]  ]
[ sub rdx, rax ]
[ lea rdx, ptr [r14 + rdx * 8] ]
[ cmp rbx, rdx ]
[ jb  [ addr ]  ]
[ test r15, r15 ]
[ jz  [ addr ]  ]
[ movzx ecx, word ptr [rbp- [ displacement ] ] ]
[ mov dword ptr [rbp- [ displacement ] ], ecx ]
[ cmp cx,  [ argument ]  ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac66e577
#call parent addr: 7f5eac66de92
#root size: 110
===============================================================
[ mov r8d, edx ]
[ cmp r12,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ mov rdi, r12 ]
[ mov dword ptr [rbp- [ displacement ] ], edx ]
[ mov qword ptr [rbp- [ displacement ] ], r9 ]
[ call  [ addr.func ]  ]
[ lea rax, ptr [r12  +  [ displacement ] ] ]
[ mov rdi, rsp ]
[ mov rdx, rax ]
[ and rax,  [ addr ]  ]
[ sub rdi, rax ]
[ and rdx,  [ addr ]  ]
[ mov rax, rdi ]
[ cmp rsp, rax ]
[ jz  [ addr ]  ]
[ sub rsp,  [ argument ]  ]
[ or qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ cmp rsp, rax ]
[ jnz  [ addr ]  ]
[ and edx,  [ argument ]  ]
[ sub rsp, rdx ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ and edx,  [ argument ]  ]
[ sub rsp, rdx ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ or qword ptr [rsp + rdx * 1- [ displacement ] ],  [ argument ]  ]
[ lea rbx, ptr [rsp  +  [ displacement ] ] ]
[ mov rcx, r9 ]
[ mov rdx, r12 ]
[ mov edi, r8d ]
[ and rbx,  [ addr ]  ]
[ mov rsi, rbx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66dba6
#call parent addr: 7f5eac66e577
#root size: 111
===============================================================
RET========================================================
#ret target: 7f5eac66dba6
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ cmp rax, r12 ]
[ jnz  [ addr ]  ]
[ test byte ptr [r13  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [r15  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, rbx ]
[ cmp r12,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ jmp  [ addr ]  ]
[ xor r14d, r14d ]
[ mov r15d,  [ argument ]  ]
[ mov dword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ xor edi, edi ]
[ sub r15, rax ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac66e577
#call parent addr: 7f5eac66e577
#root size: 111
===============================================================
CALL===========================================================
#now call addr: 7f5eac66dba6
#call parent addr: 7f5eac66e577
#root size: 112
===============================================================
RET========================================================
#ret target: 7f5eac66dba6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66e321
#call parent addr: 7f5eac66e577
#root size: 112
===============================================================
RET========================================================
#ret target: 7f5eac66e321
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66e386
#call parent addr: 7f5eac66e577
#root size: 112
===============================================================
RET========================================================
#ret target: 7f5eac66e386
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66e48d
#call parent addr: 7f5eac66e577
#root size: 112
===============================================================
RET========================================================
#ret target: 7f5eac66e48d
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66e48d
#call parent addr: 7f5eac66e577
#root size: 112
===============================================================
RET========================================================
#ret target: 7f5eac66e48d
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66e48d
#call parent addr: 7f5eac66e577
#root size: 112
===============================================================
RET========================================================
#ret target: 7f5eac66e48d
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66e424
#call parent addr: 7f5eac66e577
#root size: 112
===============================================================
RET========================================================
#ret target: 7f5eac66e424
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66ec1e
#call parent addr: 7f5eac66e577
#root size: 112
===============================================================
RET========================================================
#ret target: 7f5eac66ec1e
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ add qword ptr [rax  +  [ displacement ] ], r10 ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ add qword ptr [rax  +  [ displacement ] ], r10 ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ add qword ptr [rax  +  [ displacement ] ], r10 ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ add qword ptr [rax  +  [ displacement ] ], r10 ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ add qword ptr [rax  +  [ displacement ] ], r10 ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ add qword ptr [rax  +  [ displacement ] ], r10 ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ add qword ptr [rax  +  [ displacement ] ], r10 ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ cmp qword ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [r12  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ cmp qword ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [rax  +  [ displacement ] ] ]
[ mov dword ptr [r12  +  [ displacement ] ], edx ]
[ test dl,  [ argument ]  ]
[ jz  [ addr ]  ]
[ test dl,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov qword ptr [r12  +  [ displacement ] ], rax ]
[ and edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ and edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [rax  +  [ displacement ] ] ]
[ mov dword ptr [r12  +  [ displacement ] ], edx ]
[ mov eax, edx ]
[ test dl,  [ argument ]  ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac66e95b
#call parent addr: 7f5eac66e577
#root size: 112
===============================================================
RET========================================================
#ret target: 7f5eac66e95b
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66e99c
#call parent addr: 7f5eac66e577
#root size: 112
===============================================================
RET========================================================
#ret target: 7f5eac66e99c
#function name: _dl_rtld_di_serinfo
#func_id: 17
===========================================================
CALL===========================================================
#now call addr: 7f5eac66ea65
#call parent addr: 7f5eac66e577
#root size: 112
===============================================================
RET========================================================
#ret target: 7f5eac66ea65
#function name: _dl_mcount
#func_id: 19
===========================================================
CALL===========================================================
#now call addr: 7f5eac66ea79
#call parent addr: 7f5eac66e577
#root size: 112
===============================================================
CALL===========================================================
#now call addr: 7f5eac67417d
#call parent addr: 7f5eac66ea79
#root size: 113
===============================================================
RET========================================================
#ret target: 7f5eac67417d
#function name: NULL
#func_id: 16
===========================================================
[ mov rcx, qword ptr [rbp- [ displacement ] ] ]
[ test rcx, rcx ]
[ jz  [ addr ]  ]
[ mov eax, r15d ]
[ lea edi, ptr [r15 + r15 * 1 + [ displacement ] ] ]
[ lea ebx, ptr [r15  +  [ displacement ] ] ]
[ mov qword ptr [rcx + rax * 8],  [ argument ]  ]
[ shl rdi,  [ argument ]  ]
[ call  [ addr.func ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ mov r8d, dword ptr [rax] ]
[ test r8d, r8d ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ mov r13, qword ptr [rax  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ mov dword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov r15, qword ptr [rbp- [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ mov edi, dword ptr [rax] ]
[ test edi, edi ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ mov dword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov r15, qword ptr [rbp- [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ mov r13, qword ptr [rax  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ mov dword ptr [rax],  [ argument ]  ]
[ mov rax, qword ptr [r13  +  [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ cmp qword ptr [r13  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [r13  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ movzx esi, ax ]
[ lea rdi, ptr [rbp- [ displacement ] ] ]
[ mov edx,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac676f2b
#call parent addr: 7f5eac66ea79
#root size: 113
===============================================================
[ nop edx, edi ]
[ mov rax, rsi ]
[ push r12 ]
[ mov r12, rsi ]
[ or rax, rdx ]
[ imul r12, rdx ]
[ push rbp ]
[ shr rax,  [ argument ]  ]
[ push rbx ]
[ mov rbx, rdi ]
[ jz  [ addr ]  ]
[ test rsi, rsi ]
[ jnz  [ addr ]  ]
[ mov eax,  [ argument ]  ]
[ cmp qword ptr [rbx  +  [ displacement ] ], r12 ]
[ jnb  [ addr ]  ]
[ mov eax,  [ argument ]  ]
[ cmp qword ptr [rbx  +  [ displacement ] ], r12 ]
[ jnb  [ addr ]  ]
[ mov rdi, qword ptr [rbx] ]
[ lea rbp, ptr [rbx  +  [ displacement ] ] ]
[ cmp rdi, rbp ]
[ jz  [ addr ]  ]
[ call  [ addr.func ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ ret  ]
RET========================================================
#ret target: 7f5eac676f2b
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ test al, al ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac67684f
#call parent addr: 7f5eac66ea79
#root size: 113
===============================================================
CALL===========================================================
#now call addr: 7f5eac6707b4
#call parent addr: 7f5eac67684f
#root size: 114
===============================================================
RET========================================================
#ret target: 7f5eac6707b4
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67694e
#call parent addr: 7f5eac67684f
#root size: 114
===============================================================
CALL===========================================================
#now call addr: 7f5eac684c8e
#call parent addr: 7f5eac67694e
#root size: 115
===============================================================
RET========================================================
#ret target: 7f5eac684c8e
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac684ca8
#call parent addr: 7f5eac67694e
#root size: 115
===============================================================
CALL===========================================================
#now call addr: 7f5eac676500
#call parent addr: 7f5eac684ca8
#root size: 116
===============================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac676500
#root size: 117
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 118
===============================================================
[ pxor xmm0, xmm0 ]
[ movdqa xmm2, xmmword ptr [rdi] ]
[ movdqa xmm1, xmmword ptr [rsi] ]
[ pcmpeqb xmm0, xmm1 ]
[ pslldq xmm2,  [ argument ]  ]
[ pcmpeqb xmm2, xmm1 ]
[ psubb xmm2, xmm0 ]
[ pmovmskb r9d, xmm2 ]
[ shr edx, cl ]
[ shr r9d, cl ]
[ sub edx, r9d ]
[ jnz  [ addr ]  ]
[ movdqa xmm3, xmmword ptr [rdi] ]
[ pxor xmm0, xmm0 ]
[ mov rcx,  [ argument ]  ]
[ mov r9d,  [ argument ]  ]
[ lea r10, ptr [rdi  +  [ displacement ] ] ]
[ and r10,  [ argument ]  ]
[ sub r10,  [ argument ]  ]
[ nop word ptr [rax + rax * 1], ax ]
[ add r10,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ movdqa xmm1, xmmword ptr [rsi + rcx * 1] ]
[ movdqa xmm2, xmmword ptr [rdi + rcx * 1] ]
[ movdqa xmm4, xmm2 ]
[ psrldq xmm3,  [ argument ]  ]
[ pslldq xmm2,  [ argument ]  ]
[ por xmm2, xmm3 ]
[ pcmpeqb xmm0, xmm1 ]
[ pcmpeqb xmm1, xmm2 ]
[ psubb xmm1, xmm0 ]
[ pmovmskb edx, xmm1 ]
[ sub edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 118
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac6714e4
#root size: 118
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 119
===============================================================
[ pxor xmm0, xmm0 ]
[ movdqa xmm2, xmmword ptr [rdi] ]
[ movdqa xmm1, xmmword ptr [rsi] ]
[ pcmpeqb xmm0, xmm1 ]
[ pslldq xmm2,  [ argument ]  ]
[ pcmpeqb xmm2, xmm1 ]
[ psubb xmm2, xmm0 ]
[ pmovmskb r9d, xmm2 ]
[ shr edx, cl ]
[ shr r9d, cl ]
[ sub edx, r9d ]
[ jnz  [ addr ]  ]
[ movdqa xmm3, xmmword ptr [rdi] ]
[ pxor xmm0, xmm0 ]
[ mov rcx,  [ argument ]  ]
[ mov r9d,  [ argument ]  ]
[ lea r10, ptr [rdi  +  [ displacement ] ] ]
[ and r10,  [ argument ]  ]
[ sub r10,  [ argument ]  ]
[ nop word ptr [rax + rax * 1], ax ]
[ add r10,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ movdqa xmm1, xmmword ptr [rsi + rcx * 1] ]
[ movdqa xmm2, xmmword ptr [rdi + rcx * 1] ]
[ movdqa xmm4, xmm2 ]
[ psrldq xmm3,  [ argument ]  ]
[ pslldq xmm2,  [ argument ]  ]
[ por xmm2, xmm3 ]
[ pcmpeqb xmm0, xmm1 ]
[ pcmpeqb xmm1, xmm2 ]
[ psubb xmm1, xmm0 ]
[ pmovmskb edx, xmm1 ]
[ sub edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 119
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 119
===============================================================
[ pxor xmm0, xmm0 ]
[ movdqa xmm2, xmmword ptr [rdi] ]
[ movdqa xmm1, xmmword ptr [rsi] ]
[ pcmpeqb xmm0, xmm1 ]
[ pslldq xmm2,  [ argument ]  ]
[ pcmpeqb xmm2, xmm1 ]
[ psubb xmm2, xmm0 ]
[ pmovmskb r9d, xmm2 ]
[ shr edx, cl ]
[ shr r9d, cl ]
[ sub edx, r9d ]
[ jnz  [ addr ]  ]
[ movdqa xmm3, xmmword ptr [rdi] ]
[ pxor xmm0, xmm0 ]
[ mov rcx,  [ argument ]  ]
[ mov r9d,  [ argument ]  ]
[ lea r10, ptr [rdi  +  [ displacement ] ] ]
[ and r10,  [ argument ]  ]
[ sub r10,  [ argument ]  ]
[ nop word ptr [rax + rax * 1], ax ]
[ add r10,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ movdqa xmm1, xmmword ptr [rsi + rcx * 1] ]
[ movdqa xmm2, xmmword ptr [rdi + rcx * 1] ]
[ movdqa xmm4, xmm2 ]
[ psrldq xmm3,  [ argument ]  ]
[ pslldq xmm2,  [ argument ]  ]
[ por xmm2, xmm3 ]
[ pcmpeqb xmm0, xmm1 ]
[ pcmpeqb xmm1, xmm2 ]
[ psubb xmm1, xmm0 ]
[ pmovmskb edx, xmm1 ]
[ sub edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov eax,  [ argument ]  ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ ret  ]
CALL===========================================================
#now call addr: 7f5eac671512
#call parent addr: 7f5eac6714e4
#root size: 119
===============================================================
RET========================================================
#ret target: 7f5eac671512
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac6714e4
#root size: 119
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 120
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 120
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac671512
#call parent addr: 7f5eac6714e4
#root size: 120
===============================================================
RET========================================================
#ret target: 7f5eac671512
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac6714e4
#root size: 120
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 121
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 121
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac671512
#call parent addr: 7f5eac6714e4
#root size: 121
===============================================================
[ pxor xmm0, xmm0 ]
[ movdqa xmm2, xmmword ptr [rdi] ]
[ movdqa xmm1, xmmword ptr [rsi] ]
[ pcmpeqb xmm0, xmm1 ]
[ pslldq xmm2,  [ argument ]  ]
[ pcmpeqb xmm2, xmm1 ]
[ psubb xmm2, xmm0 ]
[ pmovmskb r9d, xmm2 ]
[ shr edx, cl ]
[ shr r9d, cl ]
[ sub edx, r9d ]
[ jnz  [ addr ]  ]
[ movdqa xmm3, xmmword ptr [rdi] ]
[ pxor xmm0, xmm0 ]
[ mov rcx,  [ argument ]  ]
[ mov r9d,  [ argument ]  ]
[ lea r10, ptr [rdi  +  [ displacement ] ] ]
[ and r10,  [ argument ]  ]
[ sub r10,  [ argument ]  ]
[ nop word ptr [rax + rax * 1], ax ]
[ add r10,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ movdqa xmm1, xmmword ptr [rsi + rcx * 1] ]
[ movdqa xmm2, xmmword ptr [rdi + rcx * 1] ]
[ movdqa xmm4, xmm2 ]
[ psrldq xmm3,  [ argument ]  ]
[ pslldq xmm2,  [ argument ]  ]
[ por xmm2, xmm3 ]
[ pcmpeqb xmm0, xmm1 ]
[ pcmpeqb xmm1, xmm2 ]
[ psubb xmm1, xmm0 ]
[ pmovmskb edx, xmm1 ]
[ sub edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
RET========================================================
#ret target: 7f5eac671512
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac6714e4
#root size: 121
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 122
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 122
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac671512
#call parent addr: 7f5eac6714e4
#root size: 122
===============================================================
[ pxor xmm0, xmm0 ]
[ movdqa xmm2, xmmword ptr [rdi] ]
[ movdqa xmm1, xmmword ptr [rsi] ]
[ pcmpeqb xmm0, xmm1 ]
[ pslldq xmm2,  [ argument ]  ]
[ pcmpeqb xmm2, xmm1 ]
[ psubb xmm2, xmm0 ]
[ pmovmskb r9d, xmm2 ]
[ shr edx, cl ]
[ shr r9d, cl ]
[ sub edx, r9d ]
[ jnz  [ addr ]  ]
[ movdqa xmm3, xmmword ptr [rdi] ]
[ pxor xmm0, xmm0 ]
[ mov rcx,  [ argument ]  ]
[ mov r9d,  [ argument ]  ]
[ lea r10, ptr [rdi  +  [ displacement ] ] ]
[ and r10,  [ argument ]  ]
[ sub r10,  [ argument ]  ]
[ nop word ptr [rax + rax * 1], ax ]
[ add r10,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ movdqa xmm1, xmmword ptr [rsi + rcx * 1] ]
[ movdqa xmm2, xmmword ptr [rdi + rcx * 1] ]
[ movdqa xmm4, xmm2 ]
[ psrldq xmm3,  [ argument ]  ]
[ pslldq xmm2,  [ argument ]  ]
[ por xmm2, xmm3 ]
[ pcmpeqb xmm0, xmm1 ]
[ pcmpeqb xmm1, xmm2 ]
[ psubb xmm1, xmm0 ]
[ pmovmskb edx, xmm1 ]
[ sub edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
RET========================================================
#ret target: 7f5eac671512
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac671588
#call parent addr: 7f5eac6714e4
#root size: 122
===============================================================
RET========================================================
#ret target: 7f5eac671588
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac671735
#call parent addr: 7f5eac6714e4
#root size: 122
===============================================================
RET========================================================
#ret target: 7f5eac671735
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov qword ptr [r12  +  [ displacement ] ],  [ addr ]  ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac67179e
#call parent addr: 7f5eac6714e4
#root size: 122
===============================================================
CALL===========================================================
#now call addr: 7f5eac66fb4b
#call parent addr: 7f5eac67179e
#root size: 123
===============================================================
RET========================================================
#ret target: 7f5eac66fb4b
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac67179e
#root size: 123
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac67179e
#root size: 123
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac67179e
#root size: 123
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 124
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fb4b
#call parent addr: 7f5eac66fc11
#root size: 124
===============================================================
RET========================================================
#ret target: 7f5eac66fb4b
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 124
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 124
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 124
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 125
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 125
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 125
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 125
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 126
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 126
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 126
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 126
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 127
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 127
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 127
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 127
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 128
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 128
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 128
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 128
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 129
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 129
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 129
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 129
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 130
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 130
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 130
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 130
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 131
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 131
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 131
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 131
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 132
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 132
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 132
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 132
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 133
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 133
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 133
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 133
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 134
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 134
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 134
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 134
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 135
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 135
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 135
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 135
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 136
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 136
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 136
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 136
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 137
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 137
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 137
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 137
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 138
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 138
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 138
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 138
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 139
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 139
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 139
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 139
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 140
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ test rax, rax ]
[ jz  [ addr ]  ]
[ sub rsp,  [ argument ]  ]
[ mov rcx, r15 ]
[ lea rax, ptr [rsp  +  [ displacement ] ] ]
[ push rax ]
[ push  [ argument ]  ]
[ push r12 ]
[ lea r9, ptr [rsp  +  [ displacement ] ] ]
[ lea r8, ptr [rsp  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rsp  +  [ displacement ] ] ]
[ mov edx, ebx ]
[ mov rdi, r13 ]
[ call  [ addr.func ]  ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rcx, qword ptr [r12  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rax  +  [ displacement ] ] ]
[ mov rdi, r15 ]
[ lea rsi, ptr [r12  +  [ displacement ] ] ]
[ lea r8, ptr [rip  +  [ displacement ] ] ]
[ add rdx, qword ptr [rcx  +  [ displacement ] ] ]
[ mov rcx, r12 ]
[ call  [ addr.func ]  ]
[ mov qword ptr [r12  +  [ displacement ] ],  [ addr ]  ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac671985
#call parent addr: 7f5eac66fc11
#root size: 140
===============================================================
CALL===========================================================
#now call addr: 7f5eac6806ec
#call parent addr: 7f5eac671985
#root size: 141
===============================================================
RET========================================================
#ret target: 7f5eac6806ec
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac680738
#call parent addr: 7f5eac671985
#root size: 141
===============================================================
RET========================================================
#ret target: 7f5eac680738
#function name: __tunable_get_val
#func_id: 29
===========================================================
CALL===========================================================
#now call addr: 7f5eac68079b
#call parent addr: 7f5eac671985
#root size: 141
===============================================================
RET========================================================
#ret target: 7f5eac68079b
#function name: _dl_exception_free
#func_id: 28
===========================================================
CALL===========================================================
#now call addr: 7f5eac68079b
#call parent addr: 7f5eac671985
#root size: 141
===============================================================
[ mov eax,  [ argument ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5eac68079b
#function name: _dl_exception_free
#func_id: 28
===========================================================
[ test eax, eax ]
[ jz  [ addr ]  ]
[ js  [ addr ]  ]
[ lea r12d, ptr [r11- [ displacement ] ] ]
[ cmp r15d, r12d ]
[ jle  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac68079b
#call parent addr: 7f5eac671985
#root size: 141
===============================================================
RET========================================================
#ret target: 7f5eac68079b
#function name: _dl_exception_free
#func_id: 28
===========================================================
CALL===========================================================
#now call addr: 7f5eac68079b
#call parent addr: 7f5eac671985
#root size: 141
===============================================================
RET========================================================
#ret target: 7f5eac68079b
#function name: _dl_exception_free
#func_id: 28
===========================================================
CALL===========================================================
#now call addr: 7f5eac68079b
#call parent addr: 7f5eac671985
#root size: 141
===============================================================
RET========================================================
#ret target: 7f5eac68079b
#function name: _dl_exception_free
#func_id: 28
===========================================================
CALL===========================================================
#now call addr: 7f5eac68079b
#call parent addr: 7f5eac671985
#root size: 141
===============================================================
[ mov eax, ecx ]
[ sub eax, r8d ]
[ ret  ]
RET========================================================
#ret target: 7f5eac68079b
#function name: _dl_exception_free
#func_id: 28
===========================================================
[ test eax, eax ]
[ jz  [ addr ]  ]
[ js  [ addr ]  ]
[ lea r12d, ptr [r11- [ displacement ] ] ]
[ cmp r15d, r12d ]
[ jle  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac68079b
#call parent addr: 7f5eac671985
#root size: 141
===============================================================
RET========================================================
#ret target: 7f5eac68079b
#function name: _dl_exception_free
#func_id: 28
===========================================================
CALL===========================================================
#now call addr: 7f5eac68079b
#call parent addr: 7f5eac671985
#root size: 141
===============================================================
RET========================================================
#ret target: 7f5eac68079b
#function name: _dl_exception_free
#func_id: 28
===========================================================
CALL===========================================================
#now call addr: 7f5eac68079b
#call parent addr: 7f5eac671985
#root size: 141
===============================================================
RET========================================================
#ret target: 7f5eac68079b
#function name: _dl_exception_free
#func_id: 28
===========================================================
CALL===========================================================
#now call addr: 7f5eac6807f6
#call parent addr: 7f5eac671985
#root size: 141
===============================================================
RET========================================================
#ret target: 7f5eac6807f6
#function name: _dl_exception_free
#func_id: 28
===========================================================
[ mov rcx, qword ptr [rbp- [ displacement ] ] ]
[ sub rcx,  [ argument ]  ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov r14d, r15d ]
[ test r14d, r14d ]
[ jnz  [ addr ]  ]
[ mov rcx,  [ addr ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ and rax, qword ptr [rbp- [ displacement ] ] ]
[ or rax, rcx ]
[ cmp dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ not rax ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ mov dword ptr [rbp- [ displacement ] ], eax ]
[ jz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac680a1c
#call parent addr: 7f5eac671985
#root size: 141
===============================================================
RET========================================================
#ret target: 7f5eac680a1c
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac680a75
#call parent addr: 7f5eac671985
#root size: 141
===============================================================
RET========================================================
#ret target: 7f5eac680a75
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac680a7d
#call parent addr: 7f5eac671985
#root size: 141
===============================================================
CALL===========================================================
#now call addr: 7f5eac6865be
#call parent addr: 7f5eac680a7d
#root size: 142
===============================================================
RET========================================================
#ret target: 7f5eac6865be
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ lea r12, ptr [rax  +  [ displacement ] ] ]
[ mov rdi, r12 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac6865ca
#call parent addr: 7f5eac680a7d
#root size: 142
===============================================================
RET========================================================
#ret target: 7f5eac6865ca
#function name: malloc
#func_id: 32
===========================================================
CALL===========================================================
#now call addr: 7f5eac6719c8
#call parent addr: 7f5eac680a7d
#root size: 142
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac6719c8
#root size: 143
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66f3f5
#call parent addr: 7f5eac6719c8
#root size: 143
===============================================================
RET========================================================
#ret target: 7f5eac66f3f5
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66f803
#call parent addr: 7f5eac6719c8
#root size: 143
===============================================================
RET========================================================
#ret target: 7f5eac66f803
#function name: free
#func_id: 34
===========================================================
CALL===========================================================
#now call addr: 7f5eac671616
#call parent addr: 7f5eac6719c8
#root size: 143
===============================================================
CALL===========================================================
#now call addr: 7f5eac66ddff
#call parent addr: 7f5eac671616
#root size: 144
===============================================================
RET========================================================
#ret target: 7f5eac66ddff
#function name: _dl_debug_state
#func_id: 18
===========================================================
CALL===========================================================
#now call addr: 7f5eac66e032
#call parent addr: 7f5eac671616
#root size: 144
===============================================================
RET========================================================
#ret target: 7f5eac66e032
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66de92
#call parent addr: 7f5eac671616
#root size: 144
===============================================================
CALL===========================================================
#now call addr: 7f5eac674245
#call parent addr: 7f5eac66de92
#root size: 145
===============================================================
RET========================================================
#ret target: 7f5eac674245
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67426f
#call parent addr: 7f5eac66de92
#root size: 145
===============================================================
RET========================================================
#ret target: 7f5eac67426f
#function name: malloc
#func_id: 32
===========================================================
CALL===========================================================
#now call addr: 7f5eac6742b4
#call parent addr: 7f5eac66de92
#root size: 145
===============================================================
RET========================================================
#ret target: 7f5eac6742b4
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov rax, r12 ]
[ mov r12, qword ptr [r12  +  [ displacement ] ] ]
[ test r12, r12 ]
[ jnz  [ addr ]  ]
[ test edx, edx ]
[ jnz  [ addr ]  ]
[ add rax,  [ argument ]  ]
[ mov qword ptr [rdi], rax ]
[ lea rax, ptr [r14  +  [ displacement ] ] ]
[ test sil, sil ]
[ mov byte ptr [rsp  +  [ displacement ] ], sil ]
[ mov qword ptr [r14  +  [ displacement ] ], rax ]
[ jz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac6743f4
#call parent addr: 7f5eac66de92
#root size: 145
===============================================================
RET========================================================
#ret target: 7f5eac6743f4
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6745a3
#call parent addr: 7f5eac66de92
#root size: 145
===============================================================
RET========================================================
#ret target: 7f5eac6745a3
#function name: malloc
#func_id: 32
===========================================================
CALL===========================================================
#now call addr: 7f5eac6744b0
#call parent addr: 7f5eac66de92
#root size: 145
===============================================================
RET========================================================
#ret target: 7f5eac6744b0
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66e577
#call parent addr: 7f5eac66de92
#root size: 145
===============================================================
RET========================================================
#ret target: 7f5eac66e577
#function name: NULL
#func_id: 16
===========================================================
CALL===========================================================
#now call addr: 7f5eac66e577
#call parent addr: 7f5eac66de92
#root size: 145
===============================================================
RET========================================================
#ret target: 7f5eac66e577
#function name: NULL
#func_id: 16
===========================================================
CALL===========================================================
#now call addr: 7f5eac66e321
#call parent addr: 7f5eac66de92
#root size: 145
===============================================================
RET========================================================
#ret target: 7f5eac66e321
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ or byte ptr [r12  +  [ displacement ] ],  [ argument ]  ]
[ mov rbx, qword ptr [rbp- [ displacement ] ] ]
[ test r13b,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rbx  +  [ displacement ] ] ]
[ add rax, qword ptr [r12] ]
[ mov qword ptr [r12  +  [ displacement ] ], rax ]
[ cmp qword ptr [r12  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rbx  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rbx  +  [ displacement ] ] ]
[ cmp rax, rdx ]
[ jbe  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac66e48d
#call parent addr: 7f5eac66de92
#root size: 145
===============================================================
RET========================================================
#ret target: 7f5eac66e48d
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66e48d
#call parent addr: 7f5eac66de92
#root size: 145
===============================================================
RET========================================================
#ret target: 7f5eac66e48d
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66e48d
#call parent addr: 7f5eac66de92
#root size: 145
===============================================================
RET========================================================
#ret target: 7f5eac66e48d
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66e424
#call parent addr: 7f5eac66de92
#root size: 145
===============================================================
RET========================================================
#ret target: 7f5eac66e424
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov edi, dword ptr [rbp- [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66e95b
#call parent addr: 7f5eac66de92
#root size: 145
===============================================================
RET========================================================
#ret target: 7f5eac66e95b
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66e99c
#call parent addr: 7f5eac66de92
#root size: 145
===============================================================
RET========================================================
#ret target: 7f5eac66e99c
#function name: _dl_rtld_di_serinfo
#func_id: 17
===========================================================
[ mov rsi, qword ptr [rbp  +  [ displacement ] ] ]
[ mov rdi, r12 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66ea79
#call parent addr: 7f5eac66de92
#root size: 145
===============================================================
CALL===========================================================
#now call addr: 7f5eac67417d
#call parent addr: 7f5eac66ea79
#root size: 146
===============================================================
RET========================================================
#ret target: 7f5eac67417d
#function name: NULL
#func_id: 16
===========================================================
CALL===========================================================
#now call addr: 7f5eac67684f
#call parent addr: 7f5eac66ea79
#root size: 146
===============================================================
CALL===========================================================
#now call addr: 7f5eac6707b4
#call parent addr: 7f5eac67684f
#root size: 147
===============================================================
RET========================================================
#ret target: 7f5eac6707b4
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67694e
#call parent addr: 7f5eac67684f
#root size: 147
===============================================================
CALL===========================================================
#now call addr: 7f5eac684c8e
#call parent addr: 7f5eac67694e
#root size: 148
===============================================================
RET========================================================
#ret target: 7f5eac684c8e
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac684ca8
#call parent addr: 7f5eac67694e
#root size: 148
===============================================================
CALL===========================================================
#now call addr: 7f5eac676500
#call parent addr: 7f5eac684ca8
#root size: 149
===============================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac676500
#root size: 150
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 151
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 151
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac6714e4
#root size: 151
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 152
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 152
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 152
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac671512
#call parent addr: 7f5eac6714e4
#root size: 152
===============================================================
RET========================================================
#ret target: 7f5eac671512
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac6714e4
#root size: 152
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 153
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 153
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac671512
#call parent addr: 7f5eac6714e4
#root size: 153
===============================================================
RET========================================================
#ret target: 7f5eac671512
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac6714e4
#root size: 153
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 154
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 154
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac671512
#call parent addr: 7f5eac6714e4
#root size: 154
===============================================================
RET========================================================
#ret target: 7f5eac671512
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac6714e4
#root size: 154
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 155
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 155
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac671512
#call parent addr: 7f5eac6714e4
#root size: 155
===============================================================
RET========================================================
#ret target: 7f5eac671512
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac6714e4
#root size: 155
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 156
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 156
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac671512
#call parent addr: 7f5eac6714e4
#root size: 156
===============================================================
RET========================================================
#ret target: 7f5eac671512
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac671588
#call parent addr: 7f5eac6714e4
#root size: 156
===============================================================
RET========================================================
#ret target: 7f5eac671588
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac671735
#call parent addr: 7f5eac6714e4
#root size: 156
===============================================================
RET========================================================
#ret target: 7f5eac671735
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67179e
#call parent addr: 7f5eac6714e4
#root size: 156
===============================================================
CALL===========================================================
#now call addr: 7f5eac66fb4b
#call parent addr: 7f5eac67179e
#root size: 157
===============================================================
RET========================================================
#ret target: 7f5eac66fb4b
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac67179e
#root size: 157
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac67179e
#root size: 157
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac67179e
#root size: 157
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 158
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fb4b
#call parent addr: 7f5eac66fc11
#root size: 158
===============================================================
RET========================================================
#ret target: 7f5eac66fb4b
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 158
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 158
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 158
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 159
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 159
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 159
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 159
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 160
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 160
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 160
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 160
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 161
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 161
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 161
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 161
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 162
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 162
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 162
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 162
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 163
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 163
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 163
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 163
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 164
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 164
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 164
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 164
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 165
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 165
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 165
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 165
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 166
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 166
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 166
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 166
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 167
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 167
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 167
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 167
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 168
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 168
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 168
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 168
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 169
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 169
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 169
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 169
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 170
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 170
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 170
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 170
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 171
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 171
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 171
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 171
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 172
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 172
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 172
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 172
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 173
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 173
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 173
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 173
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 174
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac671985
#call parent addr: 7f5eac66fc11
#root size: 174
===============================================================
CALL===========================================================
#now call addr: 7f5eac6806ec
#call parent addr: 7f5eac671985
#root size: 175
===============================================================
RET========================================================
#ret target: 7f5eac6806ec
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac680738
#call parent addr: 7f5eac671985
#root size: 175
===============================================================
RET========================================================
#ret target: 7f5eac680738
#function name: __tunable_get_val
#func_id: 29
===========================================================
CALL===========================================================
#now call addr: 7f5eac68079b
#call parent addr: 7f5eac671985
#root size: 175
===============================================================
RET========================================================
#ret target: 7f5eac68079b
#function name: _dl_exception_free
#func_id: 28
===========================================================
CALL===========================================================
#now call addr: 7f5eac68079b
#call parent addr: 7f5eac671985
#root size: 175
===============================================================
RET========================================================
#ret target: 7f5eac68079b
#function name: _dl_exception_free
#func_id: 28
===========================================================
CALL===========================================================
#now call addr: 7f5eac68079b
#call parent addr: 7f5eac671985
#root size: 175
===============================================================
RET========================================================
#ret target: 7f5eac68079b
#function name: _dl_exception_free
#func_id: 28
===========================================================
CALL===========================================================
#now call addr: 7f5eac68079b
#call parent addr: 7f5eac671985
#root size: 175
===============================================================
RET========================================================
#ret target: 7f5eac68079b
#function name: _dl_exception_free
#func_id: 28
===========================================================
CALL===========================================================
#now call addr: 7f5eac68079b
#call parent addr: 7f5eac671985
#root size: 175
===============================================================
RET========================================================
#ret target: 7f5eac68079b
#function name: _dl_exception_free
#func_id: 28
===========================================================
CALL===========================================================
#now call addr: 7f5eac68079b
#call parent addr: 7f5eac671985
#root size: 175
===============================================================
RET========================================================
#ret target: 7f5eac68079b
#function name: _dl_exception_free
#func_id: 28
===========================================================
CALL===========================================================
#now call addr: 7f5eac6807f6
#call parent addr: 7f5eac671985
#root size: 175
===============================================================
RET========================================================
#ret target: 7f5eac6807f6
#function name: _dl_exception_free
#func_id: 28
===========================================================
CALL===========================================================
#now call addr: 7f5eac6807f6
#call parent addr: 7f5eac671985
#root size: 175
===============================================================
RET========================================================
#ret target: 7f5eac6807f6
#function name: _dl_exception_free
#func_id: 28
===========================================================
CALL===========================================================
#now call addr: 7f5eac680a1c
#call parent addr: 7f5eac671985
#root size: 175
===============================================================
RET========================================================
#ret target: 7f5eac680a1c
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac680a75
#call parent addr: 7f5eac671985
#root size: 175
===============================================================
RET========================================================
#ret target: 7f5eac680a75
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac680a7d
#call parent addr: 7f5eac671985
#root size: 175
===============================================================
CALL===========================================================
#now call addr: 7f5eac6865be
#call parent addr: 7f5eac680a7d
#root size: 176
===============================================================
RET========================================================
#ret target: 7f5eac6865be
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6865ca
#call parent addr: 7f5eac680a7d
#root size: 176
===============================================================
RET========================================================
#ret target: 7f5eac6865ca
#function name: malloc
#func_id: 32
===========================================================
CALL===========================================================
#now call addr: 7f5eac6719c8
#call parent addr: 7f5eac680a7d
#root size: 176
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac6719c8
#root size: 177
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66f3f5
#call parent addr: 7f5eac6719c8
#root size: 177
===============================================================
RET========================================================
#ret target: 7f5eac66f3f5
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66f803
#call parent addr: 7f5eac6719c8
#root size: 177
===============================================================
RET========================================================
#ret target: 7f5eac66f803
#function name: free
#func_id: 34
===========================================================
CALL===========================================================
#now call addr: 7f5eac671616
#call parent addr: 7f5eac6719c8
#root size: 177
===============================================================
CALL===========================================================
#now call addr: 7f5eac66ddff
#call parent addr: 7f5eac671616
#root size: 178
===============================================================
RET========================================================
#ret target: 7f5eac66ddff
#function name: _dl_debug_state
#func_id: 18
===========================================================
CALL===========================================================
#now call addr: 7f5eac66e032
#call parent addr: 7f5eac671616
#root size: 178
===============================================================
RET========================================================
#ret target: 7f5eac66e032
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66de92
#call parent addr: 7f5eac671616
#root size: 178
===============================================================
CALL===========================================================
#now call addr: 7f5eac674245
#call parent addr: 7f5eac66de92
#root size: 179
===============================================================
RET========================================================
#ret target: 7f5eac674245
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67426f
#call parent addr: 7f5eac66de92
#root size: 179
===============================================================
RET========================================================
#ret target: 7f5eac67426f
#function name: malloc
#func_id: 32
===========================================================
CALL===========================================================
#now call addr: 7f5eac6742b4
#call parent addr: 7f5eac66de92
#root size: 179
===============================================================
RET========================================================
#ret target: 7f5eac6742b4
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6743f4
#call parent addr: 7f5eac66de92
#root size: 179
===============================================================
RET========================================================
#ret target: 7f5eac6743f4
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6745a3
#call parent addr: 7f5eac66de92
#root size: 179
===============================================================
RET========================================================
#ret target: 7f5eac6745a3
#function name: malloc
#func_id: 32
===========================================================
CALL===========================================================
#now call addr: 7f5eac6744b0
#call parent addr: 7f5eac66de92
#root size: 179
===============================================================
RET========================================================
#ret target: 7f5eac6744b0
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66e577
#call parent addr: 7f5eac66de92
#root size: 179
===============================================================
RET========================================================
#ret target: 7f5eac66e577
#function name: NULL
#func_id: 16
===========================================================
CALL===========================================================
#now call addr: 7f5eac66e577
#call parent addr: 7f5eac66de92
#root size: 179
===============================================================
RET========================================================
#ret target: 7f5eac66e577
#function name: NULL
#func_id: 16
===========================================================
CALL===========================================================
#now call addr: 7f5eac66e321
#call parent addr: 7f5eac66de92
#root size: 179
===============================================================
RET========================================================
#ret target: 7f5eac66e321
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66e48d
#call parent addr: 7f5eac66de92
#root size: 179
===============================================================
RET========================================================
#ret target: 7f5eac66e48d
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66e48d
#call parent addr: 7f5eac66de92
#root size: 179
===============================================================
RET========================================================
#ret target: 7f5eac66e48d
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66e48d
#call parent addr: 7f5eac66de92
#root size: 179
===============================================================
RET========================================================
#ret target: 7f5eac66e48d
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66e424
#call parent addr: 7f5eac66de92
#root size: 179
===============================================================
RET========================================================
#ret target: 7f5eac66e424
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66e95b
#call parent addr: 7f5eac66de92
#root size: 179
===============================================================
RET========================================================
#ret target: 7f5eac66e95b
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66e99c
#call parent addr: 7f5eac66de92
#root size: 179
===============================================================
RET========================================================
#ret target: 7f5eac66e99c
#function name: _dl_rtld_di_serinfo
#func_id: 17
===========================================================
CALL===========================================================
#now call addr: 7f5eac66ea79
#call parent addr: 7f5eac66de92
#root size: 179
===============================================================
CALL===========================================================
#now call addr: 7f5eac67417d
#call parent addr: 7f5eac66ea79
#root size: 180
===============================================================
RET========================================================
#ret target: 7f5eac67417d
#function name: NULL
#func_id: 16
===========================================================
CALL===========================================================
#now call addr: 7f5eac67684f
#call parent addr: 7f5eac66ea79
#root size: 180
===============================================================
CALL===========================================================
#now call addr: 7f5eac6707b4
#call parent addr: 7f5eac67684f
#root size: 181
===============================================================
RET========================================================
#ret target: 7f5eac6707b4
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67694e
#call parent addr: 7f5eac67684f
#root size: 181
===============================================================
CALL===========================================================
#now call addr: 7f5eac684c8e
#call parent addr: 7f5eac67694e
#root size: 182
===============================================================
RET========================================================
#ret target: 7f5eac684c8e
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac684ca8
#call parent addr: 7f5eac67694e
#root size: 182
===============================================================
CALL===========================================================
#now call addr: 7f5eac676500
#call parent addr: 7f5eac684ca8
#root size: 183
===============================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac676500
#root size: 184
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 185
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 185
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac6714e4
#root size: 185
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 186
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 186
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 186
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac671512
#call parent addr: 7f5eac6714e4
#root size: 186
===============================================================
RET========================================================
#ret target: 7f5eac671512
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac6714e4
#root size: 186
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 187
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 187
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac671512
#call parent addr: 7f5eac6714e4
#root size: 187
===============================================================
RET========================================================
#ret target: 7f5eac671512
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac6714e4
#root size: 187
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 188
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 188
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac671512
#call parent addr: 7f5eac6714e4
#root size: 188
===============================================================
RET========================================================
#ret target: 7f5eac671512
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac6714e4
#root size: 188
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 189
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 189
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ test byte ptr [r15  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rsi, qword ptr [rbp- [ displacement ] ] ]
[ test rsi, rsi ]
[ jz  [ addr ]  ]
[ mov edx, r15d ]
[ add r15d,  [ argument ]  ]
[ mov qword ptr [rsi + rdx * 8], rax ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ add r12,  [ argument ]  ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ cmp rax,  [ argument ]  ]
[ jz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac67684f
#call parent addr: 7f5eac6714e4
#root size: 189
===============================================================
CALL===========================================================
#now call addr: 7f5eac6707b4
#call parent addr: 7f5eac67684f
#root size: 190
===============================================================
RET========================================================
#ret target: 7f5eac6707b4
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ pop rbx ]
[ mov rax, r12 ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ ret  ]
CALL===========================================================
#now call addr: 7f5eac67694e
#call parent addr: 7f5eac67684f
#root size: 190
===============================================================
CALL===========================================================
#now call addr: 7f5eac684c8e
#call parent addr: 7f5eac67694e
#root size: 191
===============================================================
RET========================================================
#ret target: 7f5eac684c8e
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac684ca8
#call parent addr: 7f5eac67694e
#root size: 191
===============================================================
CALL===========================================================
#now call addr: 7f5eac676500
#call parent addr: 7f5eac684ca8
#root size: 192
===============================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac676500
#root size: 193
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 194
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 194
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac6714e4
#root size: 194
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 195
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 195
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 195
===============================================================
[ pxor xmm0, xmm0 ]
[ movdqa xmm2, xmmword ptr [rdi] ]
[ movdqa xmm1, xmmword ptr [rsi] ]
[ pcmpeqb xmm0, xmm1 ]
[ pslldq xmm2,  [ argument ]  ]
[ pcmpeqb xmm2, xmm1 ]
[ psubb xmm2, xmm0 ]
[ pmovmskb r9d, xmm2 ]
[ shr edx, cl ]
[ shr r9d, cl ]
[ sub edx, r9d ]
[ jnz  [ addr ]  ]
[ movdqa xmm3, xmmword ptr [rdi] ]
[ pxor xmm0, xmm0 ]
[ mov rcx,  [ argument ]  ]
[ mov r9d,  [ argument ]  ]
[ lea r10, ptr [rdi  +  [ displacement ] ] ]
[ and r10,  [ argument ]  ]
[ sub r10,  [ argument ]  ]
[ nop word ptr [rax + rax * 1], ax ]
[ add r10,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ movdqa xmm1, xmmword ptr [rsi + rcx * 1] ]
[ movdqa xmm2, xmmword ptr [rdi + rcx * 1] ]
[ movdqa xmm4, xmm2 ]
[ psrldq xmm3,  [ argument ]  ]
[ pslldq xmm2,  [ argument ]  ]
[ por xmm2, xmm3 ]
[ pcmpeqb xmm0, xmm1 ]
[ pcmpeqb xmm1, xmm2 ]
[ psubb xmm1, xmm0 ]
[ pmovmskb edx, xmm1 ]
[ sub edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ and rax,  [ addr ]  ]
[ cmp rax,  [ addr ]  ]
[ jnz  [ addr ]  ]
[ mov r14, qword ptr [rbp- [ displacement ] ] ]
[ add r14, qword ptr [r12  +  [ displacement ] ] ]
[ mov rdi, r14 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac67671a
#call parent addr: 7f5eac6714e4
#root size: 195
===============================================================
RET========================================================
#ret target: 7f5eac67671a
#function name: malloc
#func_id: 32
===========================================================
[ mov r12, rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov qword ptr [rax], r13 ]
[ mov rsi, qword ptr [rbp- [ displacement ] ] ]
[ lea r14, ptr [rbx * 8] ]
[ lea rdi, ptr [rax  +  [ displacement ] ] ]
[ mov rdx, r14 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac676744
#call parent addr: 7f5eac6714e4
#root size: 195
===============================================================
RET========================================================
#ret target: 7f5eac676744
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ lea eax, ptr [r15  +  [ displacement ] ] ]
[ mov rdx, r14 ]
[ mov rsi, r12 ]
[ lea rdi, ptr [r12 + rax * 8] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac676757
#call parent addr: 7f5eac6714e4
#root size: 195
===============================================================
RET========================================================
#ret target: 7f5eac676757
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ or byte ptr [r13  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [r13  +  [ displacement ] ], r12 ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ mov r8d, dword ptr [rax] ]
[ test r8d, r8d ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ mov r13, qword ptr [rax  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac676f2b
#call parent addr: 7f5eac6714e4
#root size: 195
===============================================================
RET========================================================
#ret target: 7f5eac676f2b
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67684f
#call parent addr: 7f5eac6714e4
#root size: 195
===============================================================
CALL===========================================================
#now call addr: 7f5eac6707b4
#call parent addr: 7f5eac67684f
#root size: 196
===============================================================
RET========================================================
#ret target: 7f5eac6707b4
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67694e
#call parent addr: 7f5eac67684f
#root size: 196
===============================================================
CALL===========================================================
#now call addr: 7f5eac684c8e
#call parent addr: 7f5eac67694e
#root size: 197
===============================================================
RET========================================================
#ret target: 7f5eac684c8e
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac684ca8
#call parent addr: 7f5eac67694e
#root size: 197
===============================================================
CALL===========================================================
#now call addr: 7f5eac676500
#call parent addr: 7f5eac684ca8
#root size: 198
===============================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac676500
#root size: 199
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 200
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 200
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac6714e4
#root size: 200
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 201
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 201
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 201
===============================================================
[ pxor xmm0, xmm0 ]
[ movdqa xmm2, xmmword ptr [rdi] ]
[ movdqa xmm1, xmmword ptr [rsi] ]
[ pcmpeqb xmm0, xmm1 ]
[ pslldq xmm2,  [ argument ]  ]
[ pcmpeqb xmm2, xmm1 ]
[ psubb xmm2, xmm0 ]
[ pmovmskb r9d, xmm2 ]
[ shr edx, cl ]
[ shr r9d, cl ]
[ sub edx, r9d ]
[ jnz  [ addr ]  ]
[ movdqa xmm3, xmmword ptr [rdi] ]
[ pxor xmm0, xmm0 ]
[ mov rcx,  [ argument ]  ]
[ mov r9d,  [ argument ]  ]
[ lea r10, ptr [rdi  +  [ displacement ] ] ]
[ and r10,  [ argument ]  ]
[ sub r10,  [ argument ]  ]
[ nop word ptr [rax + rax * 1], ax ]
[ add r10,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ movdqa xmm1, xmmword ptr [rsi + rcx * 1] ]
[ movdqa xmm2, xmmword ptr [rdi + rcx * 1] ]
[ movdqa xmm4, xmm2 ]
[ psrldq xmm3,  [ argument ]  ]
[ pslldq xmm2,  [ argument ]  ]
[ por xmm2, xmm3 ]
[ pcmpeqb xmm0, xmm1 ]
[ pcmpeqb xmm1, xmm2 ]
[ psubb xmm1, xmm0 ]
[ pmovmskb edx, xmm1 ]
[ sub edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67671a
#call parent addr: 7f5eac6714e4
#root size: 201
===============================================================
RET========================================================
#ret target: 7f5eac67671a
#function name: malloc
#func_id: 32
===========================================================
CALL===========================================================
#now call addr: 7f5eac676744
#call parent addr: 7f5eac6714e4
#root size: 201
===============================================================
RET========================================================
#ret target: 7f5eac676744
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ lea eax, ptr [r15  +  [ displacement ] ] ]
[ mov rdx, r14 ]
[ mov rsi, r12 ]
[ lea rdi, ptr [r12 + rax * 8] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac676757
#call parent addr: 7f5eac6714e4
#root size: 201
===============================================================
RET========================================================
#ret target: 7f5eac676757
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ or byte ptr [r13  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [r13  +  [ displacement ] ], r12 ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ mov r8d, dword ptr [rax] ]
[ test r8d, r8d ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ mov r13, qword ptr [rax  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac676f2b
#call parent addr: 7f5eac6714e4
#root size: 201
===============================================================
RET========================================================
#ret target: 7f5eac676f2b
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67684f
#call parent addr: 7f5eac6714e4
#root size: 201
===============================================================
CALL===========================================================
#now call addr: 7f5eac6707b4
#call parent addr: 7f5eac67684f
#root size: 202
===============================================================
RET========================================================
#ret target: 7f5eac6707b4
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67694e
#call parent addr: 7f5eac67684f
#root size: 202
===============================================================
CALL===========================================================
#now call addr: 7f5eac684c8e
#call parent addr: 7f5eac67694e
#root size: 203
===============================================================
RET========================================================
#ret target: 7f5eac684c8e
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac684ca8
#call parent addr: 7f5eac67694e
#root size: 203
===============================================================
CALL===========================================================
#now call addr: 7f5eac676500
#call parent addr: 7f5eac684ca8
#root size: 204
===============================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac676500
#root size: 205
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 206
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 206
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac6714e4
#root size: 206
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 207
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 207
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 207
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac671512
#call parent addr: 7f5eac6714e4
#root size: 207
===============================================================
RET========================================================
#ret target: 7f5eac671512
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac6714e4
#root size: 207
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 208
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 208
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac671512
#call parent addr: 7f5eac6714e4
#root size: 208
===============================================================
RET========================================================
#ret target: 7f5eac671512
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac6714e4
#root size: 208
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 209
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 209
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac671512
#call parent addr: 7f5eac6714e4
#root size: 209
===============================================================
RET========================================================
#ret target: 7f5eac671512
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac6714e4
#root size: 209
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 210
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 210
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac671512
#call parent addr: 7f5eac6714e4
#root size: 210
===============================================================
RET========================================================
#ret target: 7f5eac671512
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac6714e4
#root size: 210
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 211
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 211
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac671512
#call parent addr: 7f5eac6714e4
#root size: 211
===============================================================
[ pxor xmm0, xmm0 ]
[ movdqa xmm2, xmmword ptr [rdi] ]
[ movdqa xmm1, xmmword ptr [rsi] ]
[ pcmpeqb xmm0, xmm1 ]
[ pslldq xmm2,  [ argument ]  ]
[ pcmpeqb xmm2, xmm1 ]
[ psubb xmm2, xmm0 ]
[ pmovmskb r9d, xmm2 ]
[ shr edx, cl ]
[ shr r9d, cl ]
[ sub edx, r9d ]
[ jnz  [ addr ]  ]
[ movdqa xmm3, xmmword ptr [rdi] ]
[ pxor xmm0, xmm0 ]
[ mov rcx,  [ argument ]  ]
[ mov r9d,  [ argument ]  ]
[ lea r10, ptr [rdi  +  [ displacement ] ] ]
[ and r10,  [ argument ]  ]
[ sub r10,  [ argument ]  ]
[ nop word ptr [rax + rax * 1], ax ]
[ add r10,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ movdqa xmm1, xmmword ptr [rsi + rcx * 1] ]
[ movdqa xmm2, xmmword ptr [rdi + rcx * 1] ]
[ movdqa xmm4, xmm2 ]
[ psrldq xmm3,  [ argument ]  ]
[ pslldq xmm2,  [ argument ]  ]
[ por xmm2, xmm3 ]
[ pcmpeqb xmm0, xmm1 ]
[ pcmpeqb xmm1, xmm2 ]
[ psubb xmm1, xmm0 ]
[ pmovmskb edx, xmm1 ]
[ sub edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
RET========================================================
#ret target: 7f5eac671512
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac6714e4
#root size: 211
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 212
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 212
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac671512
#call parent addr: 7f5eac6714e4
#root size: 212
===============================================================
RET========================================================
#ret target: 7f5eac671512
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac671588
#call parent addr: 7f5eac6714e4
#root size: 212
===============================================================
RET========================================================
#ret target: 7f5eac671588
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac671735
#call parent addr: 7f5eac6714e4
#root size: 212
===============================================================
RET========================================================
#ret target: 7f5eac671735
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67179e
#call parent addr: 7f5eac6714e4
#root size: 212
===============================================================
CALL===========================================================
#now call addr: 7f5eac66fb4b
#call parent addr: 7f5eac67179e
#root size: 213
===============================================================
RET========================================================
#ret target: 7f5eac66fb4b
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac67179e
#root size: 213
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac67179e
#root size: 213
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac67179e
#root size: 213
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 214
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fb4b
#call parent addr: 7f5eac66fc11
#root size: 214
===============================================================
RET========================================================
#ret target: 7f5eac66fb4b
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 214
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 214
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 214
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 215
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 215
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 215
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 215
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 216
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 216
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 216
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 216
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 217
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 217
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 217
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 217
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 218
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 218
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 218
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 218
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 219
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 219
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 219
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 219
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 220
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 220
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 220
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 220
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 221
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 221
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 221
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 221
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 222
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 222
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 222
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 222
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 223
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 223
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 223
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 223
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 224
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 224
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 224
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 224
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 225
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 225
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 225
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 225
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 226
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 226
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 226
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 226
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 227
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 227
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 227
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 227
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 228
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 228
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 228
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 228
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 229
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbc8
#call parent addr: 7f5eac66fc11
#root size: 229
===============================================================
RET========================================================
#ret target: 7f5eac66fbc8
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fbde
#call parent addr: 7f5eac66fc11
#root size: 229
===============================================================
RET========================================================
#ret target: 7f5eac66fbde
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66fc11
#call parent addr: 7f5eac66fc11
#root size: 229
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac66fc11
#root size: 230
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac671985
#call parent addr: 7f5eac66fc11
#root size: 230
===============================================================
CALL===========================================================
#now call addr: 7f5eac6806ec
#call parent addr: 7f5eac671985
#root size: 231
===============================================================
RET========================================================
#ret target: 7f5eac6806ec
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac680738
#call parent addr: 7f5eac671985
#root size: 231
===============================================================
RET========================================================
#ret target: 7f5eac680738
#function name: __tunable_get_val
#func_id: 29
===========================================================
CALL===========================================================
#now call addr: 7f5eac68079b
#call parent addr: 7f5eac671985
#root size: 231
===============================================================
RET========================================================
#ret target: 7f5eac68079b
#function name: _dl_exception_free
#func_id: 28
===========================================================
CALL===========================================================
#now call addr: 7f5eac68079b
#call parent addr: 7f5eac671985
#root size: 231
===============================================================
RET========================================================
#ret target: 7f5eac68079b
#function name: _dl_exception_free
#func_id: 28
===========================================================
CALL===========================================================
#now call addr: 7f5eac68079b
#call parent addr: 7f5eac671985
#root size: 231
===============================================================
RET========================================================
#ret target: 7f5eac68079b
#function name: _dl_exception_free
#func_id: 28
===========================================================
CALL===========================================================
#now call addr: 7f5eac68079b
#call parent addr: 7f5eac671985
#root size: 231
===============================================================
RET========================================================
#ret target: 7f5eac68079b
#function name: _dl_exception_free
#func_id: 28
===========================================================
CALL===========================================================
#now call addr: 7f5eac68079b
#call parent addr: 7f5eac671985
#root size: 231
===============================================================
RET========================================================
#ret target: 7f5eac68079b
#function name: _dl_exception_free
#func_id: 28
===========================================================
CALL===========================================================
#now call addr: 7f5eac68079b
#call parent addr: 7f5eac671985
#root size: 231
===============================================================
RET========================================================
#ret target: 7f5eac68079b
#function name: _dl_exception_free
#func_id: 28
===========================================================
CALL===========================================================
#now call addr: 7f5eac68079b
#call parent addr: 7f5eac671985
#root size: 231
===============================================================
RET========================================================
#ret target: 7f5eac68079b
#function name: _dl_exception_free
#func_id: 28
===========================================================
CALL===========================================================
#now call addr: 7f5eac68079b
#call parent addr: 7f5eac671985
#root size: 231
===============================================================
RET========================================================
#ret target: 7f5eac68079b
#function name: _dl_exception_free
#func_id: 28
===========================================================
CALL===========================================================
#now call addr: 7f5eac6807f6
#call parent addr: 7f5eac671985
#root size: 231
===============================================================
RET========================================================
#ret target: 7f5eac6807f6
#function name: _dl_exception_free
#func_id: 28
===========================================================
CALL===========================================================
#now call addr: 7f5eac680a1c
#call parent addr: 7f5eac671985
#root size: 231
===============================================================
RET========================================================
#ret target: 7f5eac680a1c
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac680a75
#call parent addr: 7f5eac671985
#root size: 231
===============================================================
RET========================================================
#ret target: 7f5eac680a75
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac680a7d
#call parent addr: 7f5eac671985
#root size: 231
===============================================================
CALL===========================================================
#now call addr: 7f5eac6865be
#call parent addr: 7f5eac680a7d
#root size: 232
===============================================================
RET========================================================
#ret target: 7f5eac6865be
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6865ca
#call parent addr: 7f5eac680a7d
#root size: 232
===============================================================
RET========================================================
#ret target: 7f5eac6865ca
#function name: malloc
#func_id: 32
===========================================================
CALL===========================================================
#now call addr: 7f5eac6719c8
#call parent addr: 7f5eac680a7d
#root size: 232
===============================================================
CALL===========================================================
#now call addr: 7f5eac66f3b6
#call parent addr: 7f5eac6719c8
#root size: 233
===============================================================
RET========================================================
#ret target: 7f5eac66f3b6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66f3f5
#call parent addr: 7f5eac6719c8
#root size: 233
===============================================================
RET========================================================
#ret target: 7f5eac66f3f5
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66f65f
#call parent addr: 7f5eac6719c8
#root size: 233
===============================================================
RET========================================================
#ret target: 7f5eac66f65f
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66f803
#call parent addr: 7f5eac6719c8
#root size: 233
===============================================================
RET========================================================
#ret target: 7f5eac66f803
#function name: free
#func_id: 34
===========================================================
CALL===========================================================
#now call addr: 7f5eac671616
#call parent addr: 7f5eac6719c8
#root size: 233
===============================================================
CALL===========================================================
#now call addr: 7f5eac66ddff
#call parent addr: 7f5eac671616
#root size: 234
===============================================================
RET========================================================
#ret target: 7f5eac66ddff
#function name: _dl_debug_state
#func_id: 18
===========================================================
CALL===========================================================
#now call addr: 7f5eac66e032
#call parent addr: 7f5eac671616
#root size: 234
===============================================================
RET========================================================
#ret target: 7f5eac66e032
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66de92
#call parent addr: 7f5eac671616
#root size: 234
===============================================================
CALL===========================================================
#now call addr: 7f5eac674245
#call parent addr: 7f5eac66de92
#root size: 235
===============================================================
RET========================================================
#ret target: 7f5eac674245
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67426f
#call parent addr: 7f5eac66de92
#root size: 235
===============================================================
RET========================================================
#ret target: 7f5eac67426f
#function name: malloc
#func_id: 32
===========================================================
CALL===========================================================
#now call addr: 7f5eac6742b4
#call parent addr: 7f5eac66de92
#root size: 235
===============================================================
RET========================================================
#ret target: 7f5eac6742b4
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6743f4
#call parent addr: 7f5eac66de92
#root size: 235
===============================================================
RET========================================================
#ret target: 7f5eac6743f4
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6745a3
#call parent addr: 7f5eac66de92
#root size: 235
===============================================================
RET========================================================
#ret target: 7f5eac6745a3
#function name: malloc
#func_id: 32
===========================================================
CALL===========================================================
#now call addr: 7f5eac6744b0
#call parent addr: 7f5eac66de92
#root size: 235
===============================================================
RET========================================================
#ret target: 7f5eac6744b0
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66e577
#call parent addr: 7f5eac66de92
#root size: 235
===============================================================
RET========================================================
#ret target: 7f5eac66e577
#function name: NULL
#func_id: 16
===========================================================
CALL===========================================================
#now call addr: 7f5eac66e577
#call parent addr: 7f5eac66de92
#root size: 235
===============================================================
CALL===========================================================
#now call addr: 7f5eac66dba6
#call parent addr: 7f5eac66e577
#root size: 236
===============================================================
RET========================================================
#ret target: 7f5eac66dba6
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66e321
#call parent addr: 7f5eac66e577
#root size: 236
===============================================================
RET========================================================
#ret target: 7f5eac66e321
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66e48d
#call parent addr: 7f5eac66e577
#root size: 236
===============================================================
RET========================================================
#ret target: 7f5eac66e48d
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66e48d
#call parent addr: 7f5eac66e577
#root size: 236
===============================================================
RET========================================================
#ret target: 7f5eac66e48d
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66e48d
#call parent addr: 7f5eac66e577
#root size: 236
===============================================================
RET========================================================
#ret target: 7f5eac66e48d
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66e424
#call parent addr: 7f5eac66e577
#root size: 236
===============================================================
RET========================================================
#ret target: 7f5eac66e424
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66ec1e
#call parent addr: 7f5eac66e577
#root size: 236
===============================================================
RET========================================================
#ret target: 7f5eac66ec1e
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov byte ptr [r12  +  [ displacement ] ],  [ argument ]  ]
[ jmp  [ addr ]  ]
[ test byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ test al,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [r12  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac66e95b
#call parent addr: 7f5eac66e577
#root size: 236
===============================================================
RET========================================================
#ret target: 7f5eac66e95b
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66e99c
#call parent addr: 7f5eac66e577
#root size: 236
===============================================================
RET========================================================
#ret target: 7f5eac66e99c
#function name: _dl_rtld_di_serinfo
#func_id: 17
===========================================================
[ mov qword ptr [rip  +  [ displacement ] ], r12 ]
[ jmp  [ addr ]  ]
[ movdqa xmm4, xmmword ptr [rbp- [ displacement ] ] ]
[ cmp qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ movups xmmword ptr [r12  +  [ displacement ] ], xmm4 ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [r12  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac66ea79
#call parent addr: 7f5eac66e577
#root size: 236
===============================================================
CALL===========================================================
#now call addr: 7f5eac67417d
#call parent addr: 7f5eac66ea79
#root size: 237
===============================================================
RET========================================================
#ret target: 7f5eac67417d
#function name: NULL
#func_id: 16
===========================================================
CALL===========================================================
#now call addr: 7f5eac67684f
#call parent addr: 7f5eac66ea79
#root size: 237
===============================================================
CALL===========================================================
#now call addr: 7f5eac6707b4
#call parent addr: 7f5eac67684f
#root size: 238
===============================================================
RET========================================================
#ret target: 7f5eac6707b4
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67694e
#call parent addr: 7f5eac67684f
#root size: 238
===============================================================
CALL===========================================================
#now call addr: 7f5eac684c8e
#call parent addr: 7f5eac67694e
#root size: 239
===============================================================
RET========================================================
#ret target: 7f5eac684c8e
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac684ca8
#call parent addr: 7f5eac67694e
#root size: 239
===============================================================
CALL===========================================================
#now call addr: 7f5eac676500
#call parent addr: 7f5eac684ca8
#root size: 240
===============================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac676500
#root size: 241
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 242
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 242
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac6714e4
#root size: 242
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 243
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 243
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 243
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac671512
#call parent addr: 7f5eac6714e4
#root size: 243
===============================================================
RET========================================================
#ret target: 7f5eac671512
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac6714e4
#root size: 243
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 244
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 244
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac671512
#call parent addr: 7f5eac6714e4
#root size: 244
===============================================================
RET========================================================
#ret target: 7f5eac671512
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac6714e4
#root size: 244
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 245
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 245
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac671512
#call parent addr: 7f5eac6714e4
#root size: 245
===============================================================
RET========================================================
#ret target: 7f5eac671512
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac6714e4
#root size: 245
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 246
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 246
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67671a
#call parent addr: 7f5eac6714e4
#root size: 246
===============================================================
RET========================================================
#ret target: 7f5eac67671a
#function name: malloc
#func_id: 32
===========================================================
CALL===========================================================
#now call addr: 7f5eac676744
#call parent addr: 7f5eac6714e4
#root size: 246
===============================================================
RET========================================================
#ret target: 7f5eac676744
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac676757
#call parent addr: 7f5eac6714e4
#root size: 246
===============================================================
RET========================================================
#ret target: 7f5eac676757
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac676f2b
#call parent addr: 7f5eac6714e4
#root size: 246
===============================================================
RET========================================================
#ret target: 7f5eac676f2b
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67684f
#call parent addr: 7f5eac6714e4
#root size: 246
===============================================================
CALL===========================================================
#now call addr: 7f5eac6707b4
#call parent addr: 7f5eac67684f
#root size: 247
===============================================================
RET========================================================
#ret target: 7f5eac6707b4
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67694e
#call parent addr: 7f5eac67684f
#root size: 247
===============================================================
CALL===========================================================
#now call addr: 7f5eac684c8e
#call parent addr: 7f5eac67694e
#root size: 248
===============================================================
RET========================================================
#ret target: 7f5eac684c8e
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac684ca8
#call parent addr: 7f5eac67694e
#root size: 248
===============================================================
CALL===========================================================
#now call addr: 7f5eac676500
#call parent addr: 7f5eac684ca8
#root size: 249
===============================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac676500
#root size: 250
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 251
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 251
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac6714e4
#root size: 251
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 252
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 252
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 252
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac671512
#call parent addr: 7f5eac6714e4
#root size: 252
===============================================================
RET========================================================
#ret target: 7f5eac671512
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac6714e4
#root size: 252
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 253
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 253
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac671512
#call parent addr: 7f5eac6714e4
#root size: 253
===============================================================
RET========================================================
#ret target: 7f5eac671512
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac6714e4
#root size: 253
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 254
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 254
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac671512
#call parent addr: 7f5eac6714e4
#root size: 254
===============================================================
[ pxor xmm0, xmm0 ]
[ movdqa xmm2, xmmword ptr [rdi] ]
[ movdqa xmm1, xmmword ptr [rsi] ]
[ pcmpeqb xmm0, xmm1 ]
[ pslldq xmm2,  [ argument ]  ]
[ pcmpeqb xmm2, xmm1 ]
[ psubb xmm2, xmm0 ]
[ pmovmskb r9d, xmm2 ]
[ shr edx, cl ]
[ shr r9d, cl ]
[ sub edx, r9d ]
[ jnz  [ addr ]  ]
[ movdqa xmm3, xmmword ptr [rdi] ]
[ pxor xmm0, xmm0 ]
[ mov rcx,  [ argument ]  ]
[ mov r9d,  [ argument ]  ]
[ lea r10, ptr [rdi  +  [ displacement ] ] ]
[ and r10,  [ argument ]  ]
[ sub r10,  [ argument ]  ]
[ nop word ptr [rax + rax * 1], ax ]
[ add r10,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ movdqa xmm1, xmmword ptr [rsi + rcx * 1] ]
[ movdqa xmm2, xmmword ptr [rdi + rcx * 1] ]
[ movdqa xmm4, xmm2 ]
[ psrldq xmm3,  [ argument ]  ]
[ pslldq xmm2,  [ argument ]  ]
[ por xmm2, xmm3 ]
[ pcmpeqb xmm0, xmm1 ]
[ pcmpeqb xmm1, xmm2 ]
[ psubb xmm1, xmm0 ]
[ pmovmskb edx, xmm1 ]
[ sub edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
RET========================================================
#ret target: 7f5eac671512
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac6714e4
#root size: 254
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 255
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 255
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67684f
#call parent addr: 7f5eac6714e4
#root size: 255
===============================================================
CALL===========================================================
#now call addr: 7f5eac6707b4
#call parent addr: 7f5eac67684f
#root size: 256
===============================================================
RET========================================================
#ret target: 7f5eac6707b4
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67694e
#call parent addr: 7f5eac67684f
#root size: 256
===============================================================
CALL===========================================================
#now call addr: 7f5eac684c8e
#call parent addr: 7f5eac67694e
#root size: 257
===============================================================
RET========================================================
#ret target: 7f5eac684c8e
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac684ca8
#call parent addr: 7f5eac67694e
#root size: 257
===============================================================
CALL===========================================================
#now call addr: 7f5eac676500
#call parent addr: 7f5eac684ca8
#root size: 258
===============================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac676500
#root size: 259
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 260
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 260
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac6714e4
#root size: 260
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 261
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 261
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 261
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67671a
#call parent addr: 7f5eac6714e4
#root size: 261
===============================================================
RET========================================================
#ret target: 7f5eac67671a
#function name: malloc
#func_id: 32
===========================================================
CALL===========================================================
#now call addr: 7f5eac676744
#call parent addr: 7f5eac6714e4
#root size: 261
===============================================================
RET========================================================
#ret target: 7f5eac676744
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac676757
#call parent addr: 7f5eac6714e4
#root size: 261
===============================================================
RET========================================================
#ret target: 7f5eac676757
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac676f2b
#call parent addr: 7f5eac6714e4
#root size: 261
===============================================================
RET========================================================
#ret target: 7f5eac676f2b
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67684f
#call parent addr: 7f5eac6714e4
#root size: 261
===============================================================
CALL===========================================================
#now call addr: 7f5eac6707b4
#call parent addr: 7f5eac67684f
#root size: 262
===============================================================
RET========================================================
#ret target: 7f5eac6707b4
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67694e
#call parent addr: 7f5eac67684f
#root size: 262
===============================================================
CALL===========================================================
#now call addr: 7f5eac684c8e
#call parent addr: 7f5eac67694e
#root size: 263
===============================================================
RET========================================================
#ret target: 7f5eac684c8e
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac684ca8
#call parent addr: 7f5eac67694e
#root size: 263
===============================================================
CALL===========================================================
#now call addr: 7f5eac676500
#call parent addr: 7f5eac684ca8
#root size: 264
===============================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac676500
#root size: 265
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 266
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 266
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac6714e4
#root size: 266
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 267
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 267
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 267
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac671512
#call parent addr: 7f5eac6714e4
#root size: 267
===============================================================
RET========================================================
#ret target: 7f5eac671512
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac6714e4
#root size: 267
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 268
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 268
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac671512
#call parent addr: 7f5eac6714e4
#root size: 268
===============================================================
RET========================================================
#ret target: 7f5eac671512
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac6714e4
#root size: 268
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 269
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 269
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac671512
#call parent addr: 7f5eac6714e4
#root size: 269
===============================================================
RET========================================================
#ret target: 7f5eac671512
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac6714e4
#root size: 269
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 270
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 270
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67684f
#call parent addr: 7f5eac6714e4
#root size: 270
===============================================================
CALL===========================================================
#now call addr: 7f5eac6707b4
#call parent addr: 7f5eac67684f
#root size: 271
===============================================================
RET========================================================
#ret target: 7f5eac6707b4
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67694e
#call parent addr: 7f5eac67684f
#root size: 271
===============================================================
CALL===========================================================
#now call addr: 7f5eac684c8e
#call parent addr: 7f5eac67694e
#root size: 272
===============================================================
RET========================================================
#ret target: 7f5eac684c8e
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac684ca8
#call parent addr: 7f5eac67694e
#root size: 272
===============================================================
CALL===========================================================
#now call addr: 7f5eac676500
#call parent addr: 7f5eac684ca8
#root size: 273
===============================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac676500
#root size: 274
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 275
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 275
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6714e4
#call parent addr: 7f5eac6714e4
#root size: 275
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac6714e4
#root size: 276
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 276
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac6714e4
#root size: 276
===============================================================
[ movdqa xmm1, xmmword ptr [rsi] ]
[ pxor xmm0, xmm0 ]
[ pcmpeqb xmm0, xmm1 ]
[ pcmpeqb xmm1, xmmword ptr [rdi] ]
[ psubb xmm1, xmm0 ]
[ pmovmskb r9d, xmm1 ]
[ shr edx, cl ]
[ shr r9d, cl ]
[ sub edx, r9d ]
[ jnz  [ addr ]  ]
[ mov rcx,  [ argument ]  ]
[ mov r9,  [ argument ]  ]
[ pxor xmm0, xmm0 ]
[ nop dword ptr [rax], eax ]
[ movdqa xmm1, xmmword ptr [rsi + rcx * 1] ]
[ movdqa xmm2, xmmword ptr [rdi + rcx * 1] ]
[ pcmpeqb xmm0, xmm1 ]
[ pcmpeqb xmm1, xmm2 ]
[ psubb xmm1, xmm0 ]
[ pmovmskb edx, xmm1 ]
[ sub edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ add rcx,  [ argument ]  ]
[ movdqa xmm1, xmmword ptr [rsi + rcx * 1] ]
[ movdqa xmm2, xmmword ptr [rdi + rcx * 1] ]
[ pcmpeqb xmm0, xmm1 ]
[ pcmpeqb xmm1, xmm2 ]
[ psubb xmm1, xmm0 ]
[ pmovmskb edx, xmm1 ]
[ sub edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67671a
#call parent addr: 7f5eac6714e4
#root size: 276
===============================================================
RET========================================================
#ret target: 7f5eac67671a
#function name: malloc
#func_id: 32
===========================================================
CALL===========================================================
#now call addr: 7f5eac676744
#call parent addr: 7f5eac6714e4
#root size: 276
===============================================================
RET========================================================
#ret target: 7f5eac676744
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac676757
#call parent addr: 7f5eac6714e4
#root size: 276
===============================================================
RET========================================================
#ret target: 7f5eac676757
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov rdi, qword ptr [rbp- [ displacement ] ] ]
[ cmp rdi, qword ptr [rbp- [ displacement ] ] ]
[ jz  [ addr ]  ]
[ call  [ addr.func ]  ]
[ mov esi, dword ptr [rip  +  [ displacement ] ] ]
[ test esi, esi ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ mov rbx, qword ptr [rbp- [ displacement ] ] ]
[ mov rax, qword ptr [rbx  +  [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ lea edi, ptr [rax + rax * 1 + [ displacement ] ] ]
[ shl rdi,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac676c35
#call parent addr: 7f5eac6714e4
#root size: 276
===============================================================
RET========================================================
#ret target: 7f5eac676c35
#function name: malloc
#func_id: 32
===========================================================
[ mov r13, rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov ebx, dword ptr [rbp- [ displacement ] ] ]
[ mov ecx, dword ptr [rbp- [ displacement ] ] ]
[ lea eax, ptr [rbx  +  [ displacement ] ] ]
[ lea r8, ptr [r13 + rax * 8] ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ mov qword ptr [rax  +  [ displacement ] ], r8 ]
[ mov dword ptr [rax  +  [ displacement ] ], ebx ]
[ test ecx, ecx ]
[ jnz  [ addr ]  ]
[ xor ebx, ebx ]
[ nop dword ptr [rax + rax * 1], eax ]
[ mov rdx, qword ptr [r15  +  [ displacement ] ] ]
[ mov eax, ebx ]
[ add ebx,  [ argument ]  ]
[ mov qword ptr [r8 + rax * 8], rdx ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ and byte ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ mov r15, qword ptr [r15  +  [ displacement ] ] ]
[ test r15, r15 ]
[ jnz  [ addr ]  ]
[ mov rdx, qword ptr [r15  +  [ displacement ] ] ]
[ mov eax, ebx ]
[ add ebx,  [ argument ]  ]
[ mov qword ptr [r8 + rax * 8], rdx ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ and byte ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ mov r15, qword ptr [r15  +  [ displacement ] ] ]
[ test r15, r15 ]
[ jnz  [ addr ]  ]
[ test byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ cmp qword ptr [r8], rax ]
[ jnz  [ addr ]  ]
[ mov r9, qword ptr [rax  +  [ displacement ] ] ]
[ xor r14d, r14d ]
[ test r9, r9 ]
[ jz  [ addr ]  ]
[ mov ecx, dword ptr [r9] ]
[ lea rsi, ptr [r9  +  [ displacement ] ] ]
[ cmp ebx,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ lea eax, ptr [rbx- [ displacement ] ] ]
[ lea rdx, ptr [r8  +  [ displacement ] ] ]
[ lea r10, ptr [r8 + rax * 8 + [ displacement ] ] ]
[ nop dword ptr [rax], eax ]
[ mov rdi, qword ptr [rdx] ]
[ add rdx,  [ argument ]  ]
[ movzx eax, byte ptr [rdi  +  [ displacement ] ] ]
[ and eax,  [ addr ]  ]
[ or eax,  [ argument ]  ]
[ mov byte ptr [rdi  +  [ displacement ] ], al ]
[ cmp r10, rdx ]
[ jnz  [ addr ]  ]
[ mov r12d, ebx ]
[ mov rsi, r8 ]
[ mov rdi, r13 ]
[ lea rdx, ptr [r12 * 8] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac676e6c
#call parent addr: 7f5eac6714e4
#root size: 276
===============================================================
RET========================================================
#ret target: 7f5eac676e6c
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ lea esi, ptr [rbx- [ displacement ] ] ]
[ lea rdi, ptr [r13  +  [ displacement ] ] ]
[ xor ecx, ecx ]
[ xor edx, edx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac676e7c
#call parent addr: 7f5eac6714e4
#root size: 276
===============================================================
[ nop edx, edi ]
[ push rbp ]
[ mov rbp, rsp ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov qword ptr [rbp- [ displacement ] ], rdi ]
[ mov dword ptr [rbp- [ displacement ] ], esi ]
[ mov qword ptr [rbp- [ displacement ] ], rdx ]
[ mov byte ptr [rbp- [ displacement ] ], cl ]
[ cmp esi,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ mov edx, esi ]
[ mov rdi, rsp ]
[ mov rcx, rsp ]
[ add rdx, rdx ]
[ lea rax, ptr [rdx  +  [ displacement ] ] ]
[ shr rax,  [ argument ]  ]
[ shl rax,  [ argument ]  ]
[ mov rsi, rax ]
[ and rsi,  [ addr ]  ]
[ sub rdi, rsi ]
[ mov rsi, rdi ]
[ cmp rsp, rsi ]
[ jz  [ addr ]  ]
[ sub rsp,  [ argument ]  ]
[ or qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ cmp rsp, rsi ]
[ jnz  [ addr ]  ]
[ and eax,  [ argument ]  ]
[ sub rsp, rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ or qword ptr [rsp + rax * 1- [ displacement ] ],  [ argument ]  ]
[ mov rdi, rsp ]
[ xor esi, esi ]
[ mov qword ptr [rbp- [ displacement ] ], rcx ]
[ xor r15d, r15d ]
[ mov qword ptr [rbp- [ displacement ] ], rdi ]
[ mov r14d,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac68031c
#call parent addr: 7f5eac676e7c
#root size: 277
===============================================================
[ movq rcx, xmm0 ]
[ cmp dl,  [ argument ]  ]
[ jnb  [ addr ]  ]
[ cmp dl,  [ argument ]  ]
[ jnb  [ addr ]  ]
[ cmp dl,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ mov qword ptr [rdi + rdx * 1- [ displacement ] ], rcx ]
[ mov qword ptr [rdi], rcx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac68031c
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ mov rcx, qword ptr [rbp- [ displacement ] ] ]
[ mov r10, r15 ]
[ mov r15d, r14d ]
[ sub eax,  [ argument ]  ]
[ mov dword ptr [rbp- [ displacement ] ], eax ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ lea rax, ptr [rcx + rax * 8] ]
[ xor ecx, ecx ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov r14d, ecx ]
[ nop dword ptr [rax + rax * 1], eax ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ lea r9, ptr [rax + r10 * 2] ]
[ movzx eax, word ptr [r9] ]
[ add eax,  [ argument ]  ]
[ cmp byte ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov word ptr [rbp- [ displacement ] ], ax ]
[ mov word ptr [r9], ax ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ lea rdi, ptr [rax + r10 * 8] ]
[ mov rbx, qword ptr [rdi] ]
[ jnz  [ addr ]  ]
[ cmp r14d, dword ptr [rbp- [ displacement ] ] ]
[ jnb  [ addr ]  ]
[ mov r12, qword ptr [rbp- [ displacement ] ] ]
[ mov r13, qword ptr [rbp- [ displacement ] ] ]
[ movzx r8d, byte ptr [rbp- [ displacement ] ] ]
[ mov rsi, qword ptr [r13] ]
[ mov ecx, r12d ]
[ mov rax, qword ptr [rsi  +  [ displacement ] ] ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ mov rdx, qword ptr [rax] ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ add rax,  [ argument ]  ]
[ cmp rdx, rbx ]
[ jnz  [ addr ]  ]
[ mov r11d, ecx ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ mov r8d, r15d ]
[ mov qword ptr [rbp- [ displacement ] ], r10 ]
[ sub r11d, r14d ]
[ mov qword ptr [rbp- [ displacement ] ], r9 ]
[ lea rdx, ptr [r11 * 8] ]
[ lea rsi, ptr [rax + r8 * 8] ]
[ mov dword ptr [rbp- [ displacement ] ], ecx ]
[ mov qword ptr [rbp- [ displacement ] ], r11 ]
[ mov qword ptr [rbp- [ displacement ] ], r8 ]
[ call  [ addr.func ]  ]
[ test r8b, r8b ]
[ jnz  [ addr ]  ]
[ sub r12,  [ argument ]  ]
[ sub r13,  [ argument ]  ]
[ cmp r14d, r12d ]
[ jb  [ addr ]  ]
[ cmp dword ptr [rbp- [ displacement ] ], r15d ]
[ jz  [ addr ]  ]
[ mov rsi, qword ptr [r13] ]
[ mov ecx, r12d ]
[ mov rax, qword ptr [rsi  +  [ displacement ] ] ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ test r8b, r8b ]
[ jnz  [ addr ]  ]
[ sub r12,  [ argument ]  ]
[ sub r13,  [ argument ]  ]
[ cmp r14d, r12d ]
[ jb  [ addr ]  ]
[ mov rcx, qword ptr [rbp- [ displacement ] ] ]
[ mov eax, r15d ]
[ lea rdi, ptr [rcx + rax * 2] ]
[ jmp  [ addr ]  ]
[ mov edx, dword ptr [rbp- [ displacement ] ] ]
[ xor esi, esi ]
[ mov r14d, r15d ]
[ sub edx, r15d ]
[ add rdx, rdx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac6804ba
#call parent addr: 7f5eac676e7c
#root size: 277
===============================================================
RET========================================================
#ret target: 7f5eac6804ba
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov r10d, r15d ]
[ add r15d,  [ argument ]  ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ lea r9, ptr [rax + r10 * 2] ]
[ movzx eax, word ptr [r9] ]
[ add eax,  [ argument ]  ]
[ cmp byte ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov word ptr [rbp- [ displacement ] ], ax ]
[ mov word ptr [r9], ax ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ lea rdi, ptr [rax + r10 * 8] ]
[ mov rbx, qword ptr [rdi] ]
[ jnz  [ addr ]  ]
[ cmp r14d, dword ptr [rbp- [ displacement ] ] ]
[ jnb  [ addr ]  ]
[ mov r12, qword ptr [rbp- [ displacement ] ] ]
[ mov r13, qword ptr [rbp- [ displacement ] ] ]
[ movzx r8d, byte ptr [rbp- [ displacement ] ] ]
[ mov rsi, qword ptr [r13] ]
[ mov ecx, r12d ]
[ mov rax, qword ptr [rsi  +  [ displacement ] ] ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac68042d
#call parent addr: 7f5eac676e7c
#root size: 277
===============================================================
RET========================================================
#ret target: 7f5eac68042d
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov r8, qword ptr [rbp- [ displacement ] ] ]
[ mov ecx, dword ptr [rbp- [ displacement ] ] ]
[ mov qword ptr [r13], rbx ]
[ mov r13, qword ptr [rbp- [ displacement ] ] ]
[ mov r11, qword ptr [rbp- [ displacement ] ] ]
[ mov r9, qword ptr [rbp- [ displacement ] ] ]
[ mov r10, qword ptr [rbp- [ displacement ] ] ]
[ test r13, r13 ]
[ jz  [ addr ]  ]
[ lea rdi, ptr [r13 + r10 * 1] ]
[ lea rsi, ptr [r13 + r8 * 1] ]
[ mov rdx, r11 ]
[ mov dword ptr [rbp- [ displacement ] ], ecx ]
[ movzx ebx, byte ptr [rdi] ]
[ mov qword ptr [rbp- [ displacement ] ], r9 ]
[ mov qword ptr [rbp- [ displacement ] ], r10 ]
[ mov qword ptr [rbp- [ displacement ] ], r8 ]
[ mov qword ptr [rbp- [ displacement ] ], r11 ]
[ call  [ addr.func ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ movzx edx, word ptr [rax + r8 * 2] ]
[ lea rdi, ptr [rax + r8 * 2] ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ sub eax, r14d ]
[ cmp edx, eax ]
[ jbe  [ addr ]  ]
[ mov edx, dword ptr [rbp- [ displacement ] ] ]
[ xor esi, esi ]
[ mov r14d, r15d ]
[ sub edx, r15d ]
[ add rdx, rdx ]
[ call  [ addr.func ]  ]
[ mov rsi, rdi ]
[ lea rdx, ptr [r11 + r11 * 1] ]
[ mov rdi, r9 ]
[ mov qword ptr [rbp- [ displacement ] ], r10 ]
[ mov dword ptr [rbp- [ displacement ] ], ecx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac6804e1
#call parent addr: 7f5eac676e7c
#root size: 277
===============================================================
RET========================================================
#ret target: 7f5eac6804e1
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov ecx, dword ptr [rbp- [ displacement ] ] ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ movzx esi, word ptr [rbp- [ displacement ] ] ]
[ mov r10, qword ptr [rbp- [ displacement ] ] ]
[ mov word ptr [rax + rcx * 2], si ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac6804ba
#call parent addr: 7f5eac676e7c
#root size: 277
===============================================================
RET========================================================
#ret target: 7f5eac6804ba
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ cmp dword ptr [rbp- [ displacement ] ], r15d ]
[ jz  [ addr ]  ]
[ mov rcx, qword ptr [rbp- [ displacement ] ] ]
[ mov eax, r15d ]
[ lea rdi, ptr [rcx + rax * 2] ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac6804ba
#call parent addr: 7f5eac676e7c
#root size: 277
===============================================================
[ mov dword ptr [rdi + rdx * 1- [ displacement ] ], ecx ]
[ mov dword ptr [rdi], ecx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac6804ba
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov r10d, r15d ]
[ add r15d,  [ argument ]  ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac68042d
#call parent addr: 7f5eac676e7c
#root size: 277
===============================================================
RET========================================================
#ret target: 7f5eac68042d
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6804e1
#call parent addr: 7f5eac676e7c
#root size: 277
===============================================================
RET========================================================
#ret target: 7f5eac6804e1
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov ecx, dword ptr [rbp- [ displacement ] ] ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ movzx esi, word ptr [rbp- [ displacement ] ] ]
[ mov r10, qword ptr [rbp- [ displacement ] ] ]
[ mov word ptr [rax + rcx * 2], si ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac6804ba
#call parent addr: 7f5eac676e7c
#root size: 277
===============================================================
RET========================================================
#ret target: 7f5eac6804ba
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6804ba
#call parent addr: 7f5eac676e7c
#root size: 277
===============================================================
[ mov word ptr [rdi + rdx * 1- [ displacement ] ], cx ]
[ mov word ptr [rdi], cx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac6804ba
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov r10d, r15d ]
[ add r15d,  [ argument ]  ]
[ jmp  [ addr ]  ]
[ mov rsp, qword ptr [rbp- [ displacement ] ] ]
[ lea rsp, ptr [rbp- [ displacement ] ] ]
[ pop rbx ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ pop rbp ]
[ ret  ]
[ mov qword ptr [r13 + r12 * 8],  [ argument ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ or byte ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rax  +  [ displacement ] ], r13 ]
[ test r14, r14 ]
[ jz  [ addr ]  ]
[ mov rdi, qword ptr [rax  +  [ displacement ] ] ]
[ mov qword ptr [rax  +  [ displacement ] ], r14 ]
[ call  [ addr.func ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rdi, rax ]
[ call  [ addr.func ]  ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ lea rsp, ptr [rbp- [ displacement ] ] ]
[ pop rbx ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ pop rbp ]
[ ret  ]
[ rdtsc  ]
[ mov esi, dword ptr [r15  +  [ displacement ] ] ]
[ shl rdx,  [ argument ]  ]
[ or rax, rdx ]
[ sub rax, r12 ]
[ add qword ptr [rip  +  [ displacement ] ], rax ]
[ test esi, esi ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [r15  +  [ displacement ] ] ]
[ lea eax, ptr [rsi- [ displacement ] ] ]
[ lea rax, ptr [rdx + rax * 8] ]
[ mov rcx, qword ptr [rax] ]
[ or byte ptr [rcx  +  [ displacement ] ],  [ argument ]  ]
[ mov rcx, rax ]
[ sub rax,  [ argument ]  ]
[ cmp rdx, rcx ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rdx  +  [ displacement ] ], rax ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rcx, qword ptr [rax] ]
[ or byte ptr [rcx  +  [ displacement ] ],  [ argument ]  ]
[ mov rcx, rax ]
[ sub rax,  [ argument ]  ]
[ cmp rdx, rcx ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rdx  +  [ displacement ] ], rax ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov qword ptr [rax  +  [ displacement ] ], rdx ]
[ cmp esi,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ lea ecx, ptr [rsi- [ displacement ] ] ]
[ mov rdi, qword ptr [r15  +  [ displacement ] ] ]
[ mov eax,  [ argument ]  ]
[ add rcx,  [ argument ]  ]
[ jmp  [ addr ]  ]
[ mov r11, qword ptr [rbp- [ displacement ] ] ]
[ mov edx, eax ]
[ cmp qword ptr [rdi + rax * 8], r11 ]
[ jnz  [ addr ]  ]
[ lea eax, ptr [rax- [ displacement ] ] ]
[ mov ecx, dword ptr [rbp- [ displacement ] ] ]
[ mov rax, qword ptr [rdi + rax * 8] ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ test ecx, ecx ]
[ jnz  [ addr ]  ]
[ add edx,  [ argument ]  ]
[ xor ecx, ecx ]
[ cmp edx, esi ]
[ jnb  [ addr ]  ]
[ add rax,  [ argument ]  ]
[ cmp rcx, rax ]
[ jz  [ addr ]  ]
[ mov r11, qword ptr [rbp- [ displacement ] ] ]
[ mov edx, eax ]
[ cmp qword ptr [rdi + rax * 8], r11 ]
[ jnz  [ addr ]  ]
[ lea eax, ptr [rax- [ displacement ] ] ]
[ mov ecx, dword ptr [rbp- [ displacement ] ] ]
[ mov rax, qword ptr [rdi + rax * 8] ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ test ecx, ecx ]
[ jnz  [ addr ]  ]
[ add edx,  [ argument ]  ]
[ xor ecx, ecx ]
[ cmp edx, esi ]
[ jnb  [ addr ]  ]
[ mov rcx, qword ptr [rdi + rdx * 8] ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rip  +  [ displacement ] ], rcx ]
[ mov rsi, qword ptr [rax  +  [ displacement ] ] ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ cmp rdx, rcx ]
[ jz  [ addr ]  ]
[ cmp rdx, rsi ]
[ jz  [ addr ]  ]
[ cmp rsi, rcx ]
[ jnz  [ addr ]  ]
[ mov rcx, qword ptr [rbp- [ displacement ] ] ]
[ mov qword ptr [rax  +  [ displacement ] ], rcx ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ cmp qword ptr [rdx  +  [ displacement ] ], rax ]
[ jnz  [ addr ]  ]
[ mov qword ptr [rdx  +  [ displacement ] ], rcx ]
[ mov byte ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ jmp  [ addr ]  ]
[ mov r12d, dword ptr [rbp- [ displacement ] ] ]
[ mov dword ptr [rbp- [ displacement ] ], ebx ]
[ xor eax, eax ]
[ lea rbx, ptr [rbp- [ displacement ] ] ]
[ mov rdx, rbx ]
[ lea rsi, ptr [rip- [ displacement ] ] ]
[ lea rdi, ptr [rip- [ displacement ] ] ]
[ test r12d, r12d ]
[ setz al ]
[ mov dword ptr [rbp- [ displacement ] ], eax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66b2cf
#call parent addr: 7f5eac676e7c
#root size: 277
===============================================================
[ nop edx, edi ]
[ push rbp ]
[ mov r8, rdi ]
[ mov rdi, rdx ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov rbp, qword ptr [rip  +  [ displacement ] ] ]
[ mov rbx, qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], r8 ]
[ call rsi ]
CALL===========================================================
#now call addr: 7f5eac684db0
#call parent addr: 7f5eac66b2cf
#root size: 278
===============================================================
[ nop edx, edi ]
[ push rbx ]
[ mov rbx, rdi ]
[ mov edx, dword ptr [rdi  +  [ displacement ] ] ]
[ mov esi,  [ argument ]  ]
[ mov rdi, qword ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac668dc7
#call parent addr: 7f5eac684db0
#root size: 279
===============================================================
[ nop edx, edi ]
[ push r13 ]
[ push r12 ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ test rdi, rdi ]
[ jz  [ addr ]  ]
[ mov rbx, rdi ]
[ mov ebp, esi ]
[ mov r13d, edx ]
[ xor r12d, r12d ]
[ data16 nop ]
[ test byte ptr [rbx  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rbx, qword ptr [rbx  +  [ displacement ] ] ]
[ test rbx, rbx ]
[ jnz  [ addr ]  ]
[ mov rdi, rbx ]
[ mov edx, r13d ]
[ mov esi, ebp ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac67a588
#call parent addr: 7f5eac668dc7
#root size: 280
===============================================================
[ nop edx, edi ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov rax, qword ptr [rdi  +  [ displacement ] ] ]
[ mov dword ptr [rsp  +  [ displacement ] ], esi ]
[ mov dword ptr [rsp  +  [ displacement ] ], edx ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ mov rcx, qword ptr [rdi  +  [ displacement ] ] ]
[ mov r14, rdi ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ mov rax, qword ptr [rdi  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rcx ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ add rax, qword ptr [rdi] ]
[ xor r13d, r13d ]
[ mov dword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ cmp word ptr [rax],  [ argument ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ lea r15, ptr [rip  +  [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ mov r14d, r13d ]
[ mov r13, rdi ]
[ nop word ptr [rax + rax * 1], ax ]
[ mov ebx, dword ptr [rax  +  [ displacement ] ] ]
[ mov rax, qword ptr [r13  +  [ displacement ] ] ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ add rbx, qword ptr [rsp  +  [ displacement ] ] ]
[ lea rax, ptr [rax + rax * 8] ]
[ shl rax,  [ argument ]  ]
[ mov rbp, qword ptr [rdi + rax * 1] ]
[ test rbp, rbp ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ mov rsi, rbp ]
[ mov rdi, rbx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac67a588
#root size: 281
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 282
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 282
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ test eax, eax ]
[ jz  [ addr ]  ]
[ mov ecx, dword ptr [rsp  +  [ displacement ] ] ]
[ test ecx, ecx ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rbp ]
[ mov qword ptr [rsp  +  [ displacement ] ], r13 ]
[ mov ebx, dword ptr [rax  +  [ displacement ] ] ]
[ add rbx, rax ]
[ lea rax, ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ nop word ptr [rax + rax * 1], ax ]
[ movzx eax, word ptr [rbx  +  [ displacement ] ] ]
[ mov r12d, dword ptr [rbx  +  [ displacement ] ] ]
[ add r12, qword ptr [rsp  +  [ displacement ] ] ]
[ mov r13d, dword ptr [rbx] ]
[ mov word ptr [rsp  +  [ displacement ] ], ax ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ mov rbp, qword ptr [rax  +  [ displacement ] ] ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ mov r8, qword ptr [rax  +  [ displacement ] ] ]
[ cmp byte ptr [r8],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rbp, qword ptr [rbp  +  [ displacement ] ] ]
[ test rbp, rbp ]
[ jz  [ addr ]  ]
[ mov rsi, rbp ]
[ mov rdi, rbx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 282
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 283
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 283
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 283
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 284
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 284
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 284
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 285
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 285
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ test eax, eax ]
[ jz  [ addr ]  ]
[ mov ecx, dword ptr [rsp  +  [ displacement ] ] ]
[ test ecx, ecx ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rbp ]
[ mov qword ptr [rsp  +  [ displacement ] ], r13 ]
[ mov ebx, dword ptr [rax  +  [ displacement ] ] ]
[ add rbx, rax ]
[ lea rax, ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ nop word ptr [rax + rax * 1], ax ]
[ movzx eax, word ptr [rbx  +  [ displacement ] ] ]
[ mov r12d, dword ptr [rbx  +  [ displacement ] ] ]
[ add r12, qword ptr [rsp  +  [ displacement ] ] ]
[ mov r13d, dword ptr [rbx] ]
[ mov word ptr [rsp  +  [ displacement ] ], ax ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ mov rbp, qword ptr [rax  +  [ displacement ] ] ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ mov r8, qword ptr [rax  +  [ displacement ] ] ]
[ cmp byte ptr [r8],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov r8, qword ptr [rax] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ test r8, r8 ]
[ cmovz r8, rax ]
[ mov rax, qword ptr [rbp  +  [ displacement ] ] ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ mov qword ptr [rsp], rax ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ test byte ptr [rax],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rbp  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [rax  +  [ displacement ] ] ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ add rdx, qword ptr [rbp] ]
[ cmp word ptr [rdx],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ], r8 ]
[ mov qword ptr [rsp  +  [ displacement ] ], rbp ]
[ mov rbp, rbx ]
[ mov ebx, r13d ]
[ mov r13, rdx ]
[ cmp ebx, dword ptr [r13  +  [ displacement ] ] ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [r13  +  [ displacement ] ] ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ add r13, rax ]
[ cmp word ptr [r13],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rbx, rbp ]
[ mov rbp, qword ptr [rsp  +  [ displacement ] ] ]
[ mov rdx, r13 ]
[ mov byte ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ movzx ecx, word ptr [rdx] ]
[ lea r8, ptr [rsp  +  [ displacement ] ] ]
[ nop dword ptr [rax], eax ]
[ mov rax,  [ addr ]  ]
[ mov rdi, rcx ]
[ sub r8,  [ argument ]  ]
[ mul rcx ]
[ shr rdx,  [ argument ]  ]
[ lea rax, ptr [rdx + rdx * 4] ]
[ add rax, rax ]
[ sub rdi, rax ]
[ movzx eax, byte ptr [r15 + rdi * 1] ]
[ mov byte ptr [r8], al ]
[ mov rax, rcx ]
[ mov rcx, rdx ]
[ cmp rax,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ mov rsi, qword ptr [rbp  +  [ displacement ] ] ]
[ cmp byte ptr [rsi],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp ebx, dword ptr [r13  +  [ displacement ] ] ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [r13  +  [ displacement ] ] ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ add r13, rax ]
[ cmp word ptr [r13],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [r13  +  [ displacement ] ] ]
[ mov rdi, r12 ]
[ mov esi, dword ptr [r13 + rax * 1] ]
[ add rsi, qword ptr [rsp] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac67a070
#call parent addr: 7f5eac679e93
#root size: 285
===============================================================
RET========================================================
#ret target: 7f5eac67a070
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov rbx, rbp ]
[ jmp  [ addr ]  ]
[ movzx eax, word ptr [rbx  +  [ displacement ] ] ]
[ and eax,  [ argument ]  ]
[ cmp r14d, eax ]
[ cmovb r14d, eax ]
[ mov eax, dword ptr [rbx  +  [ displacement ] ] ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ add rbx, rax ]
[ jmp  [ addr ]  ]
[ movzx eax, word ptr [rbx  +  [ displacement ] ] ]
[ mov r12d, dword ptr [rbx  +  [ displacement ] ] ]
[ add r12, qword ptr [rsp  +  [ displacement ] ] ]
[ mov r13d, dword ptr [rbx] ]
[ mov word ptr [rsp  +  [ displacement ] ], ax ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ mov rbp, qword ptr [rax  +  [ displacement ] ] ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ mov r8, qword ptr [rax  +  [ displacement ] ] ]
[ cmp byte ptr [r8],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov r8, qword ptr [rax] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ test r8, r8 ]
[ cmovz r8, rax ]
[ mov rax, qword ptr [rbp  +  [ displacement ] ] ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ mov qword ptr [rsp], rax ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ test byte ptr [rax],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rbp  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [rax  +  [ displacement ] ] ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ add rdx, qword ptr [rbp] ]
[ cmp word ptr [rdx],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ], r8 ]
[ mov qword ptr [rsp  +  [ displacement ] ], rbp ]
[ mov rbp, rbx ]
[ mov ebx, r13d ]
[ mov r13, rdx ]
[ cmp ebx, dword ptr [r13  +  [ displacement ] ] ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [r13  +  [ displacement ] ] ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ add r13, rax ]
[ cmp word ptr [r13],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rbx, rbp ]
[ mov rbp, qword ptr [rsp  +  [ displacement ] ] ]
[ mov rdx, r13 ]
[ mov byte ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ movzx ecx, word ptr [rdx] ]
[ lea r8, ptr [rsp  +  [ displacement ] ] ]
[ nop dword ptr [rax], eax ]
[ mov rax,  [ addr ]  ]
[ mov rdi, rcx ]
[ sub r8,  [ argument ]  ]
[ mul rcx ]
[ shr rdx,  [ argument ]  ]
[ lea rax, ptr [rdx + rdx * 4] ]
[ add rax, rax ]
[ sub rdi, rax ]
[ movzx eax, byte ptr [r15 + rdi * 1] ]
[ mov byte ptr [r8], al ]
[ mov rax, rcx ]
[ mov rcx, rdx ]
[ cmp rax,  [ argument ]  ]
[ jnbe  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac67a070
#call parent addr: 7f5eac679e93
#root size: 285
===============================================================
RET========================================================
#ret target: 7f5eac67a070
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67a070
#call parent addr: 7f5eac679e93
#root size: 285
===============================================================
[ pxor xmm0, xmm0 ]
[ movdqa xmm2, xmmword ptr [rdi] ]
[ movdqa xmm1, xmmword ptr [rsi] ]
[ pcmpeqb xmm0, xmm1 ]
[ pslldq xmm2,  [ argument ]  ]
[ pcmpeqb xmm2, xmm1 ]
[ psubb xmm2, xmm0 ]
[ pmovmskb r9d, xmm2 ]
[ shr edx, cl ]
[ shr r9d, cl ]
[ sub edx, r9d ]
[ jnz  [ addr ]  ]
[ movdqa xmm3, xmmword ptr [rdi] ]
[ pxor xmm0, xmm0 ]
[ mov rcx,  [ argument ]  ]
[ mov r9d,  [ argument ]  ]
[ lea r10, ptr [rdi  +  [ displacement ] ] ]
[ and r10,  [ argument ]  ]
[ sub r10,  [ argument ]  ]
[ nop word ptr [rax + rax * 1], ax ]
[ add r10,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ movdqa xmm1, xmmword ptr [rsi + rcx * 1] ]
[ movdqa xmm2, xmmword ptr [rdi + rcx * 1] ]
[ movdqa xmm4, xmm2 ]
[ psrldq xmm3,  [ argument ]  ]
[ pslldq xmm2,  [ argument ]  ]
[ por xmm2, xmm3 ]
[ pcmpeqb xmm0, xmm1 ]
[ pcmpeqb xmm1, xmm2 ]
[ psubb xmm1, xmm0 ]
[ pmovmskb edx, xmm1 ]
[ sub edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
RET========================================================
#ret target: 7f5eac67a070
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67a070
#call parent addr: 7f5eac679e93
#root size: 285
===============================================================
RET========================================================
#ret target: 7f5eac67a070
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67a070
#call parent addr: 7f5eac679e93
#root size: 285
===============================================================
RET========================================================
#ret target: 7f5eac67a070
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67a070
#call parent addr: 7f5eac679e93
#root size: 285
===============================================================
RET========================================================
#ret target: 7f5eac67a070
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov r13, qword ptr [rsp  +  [ displacement ] ] ]
[ mov rdi, qword ptr [rsp  +  [ displacement ] ] ]
[ mov eax, dword ptr [rdi  +  [ displacement ] ] ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ add rdi, rax ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdi ]
[ mov rax, rdi ]
[ jmp  [ addr ]  ]
[ mov rax, r13 ]
[ cmp qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov r13d, r14d ]
[ mov r14, rax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rax  +  [ displacement ] ] ]
[ add rdx, qword ptr [r14] ]
[ jmp  [ addr ]  ]
[ test r13d, r13d ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rsp  +  [ displacement ] ] ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ lea edi, ptr [r13  +  [ displacement ] ] ]
[ mov esi,  [ argument ]  ]
[ mov rbx, rdi ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac67a306
#call parent addr: 7f5eac679e93
#root size: 285
===============================================================
RET========================================================
#ret target: 7f5eac67a306
#function name: malloc
#func_id: 32
===========================================================
[ mov qword ptr [r14  +  [ displacement ] ], rax ]
[ mov rsi, rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [r14  +  [ displacement ] ] ]
[ mov dword ptr [r14  +  [ displacement ] ], ebx ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ mov qword ptr [r14  +  [ displacement ] ], rax ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov r8, qword ptr [rsp  +  [ displacement ] ] ]
[ mov rdi, qword ptr [rax  +  [ displacement ] ] ]
[ add rdi, qword ptr [r14] ]
[ nop dword ptr [rax], eax ]
[ mov edx, dword ptr [rdi  +  [ displacement ] ] ]
[ add rdx, rdi ]
[ jmp  [ addr ]  ]
[ movzx eax, word ptr [rdx  +  [ displacement ] ] ]
[ mov r9d, eax ]
[ mov ecx, eax ]
[ and r9d,  [ argument ]  ]
[ and cx,  [ argument ]  ]
[ cmp ebx, r9d ]
[ jnbe  [ addr ]  ]
[ mov eax, dword ptr [rdx  +  [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ nop word ptr [rax + rax * 1], ax ]
[ mov eax, dword ptr [rdi  +  [ displacement ] ] ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ movzx ecx, cx ]
[ and ax,  [ argument ]  ]
[ mov r9d, dword ptr [rdx] ]
[ lea rcx, ptr [rcx + rcx * 2] ]
[ movzx eax, ax ]
[ lea rcx, ptr [rsi + rcx * 8] ]
[ mov dword ptr [rcx  +  [ displacement ] ], eax ]
[ mov eax, dword ptr [rdx  +  [ displacement ] ] ]
[ mov dword ptr [rcx  +  [ displacement ] ], r9d ]
[ add rax, r8 ]
[ mov qword ptr [rcx], rax ]
[ mov eax, dword ptr [rdi  +  [ displacement ] ] ]
[ add rax, r8 ]
[ mov qword ptr [rcx  +  [ displacement ] ], rax ]
[ mov eax, dword ptr [rdx  +  [ displacement ] ] ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ add rdx, rax ]
[ movzx eax, word ptr [rdx  +  [ displacement ] ] ]
[ mov r9d, eax ]
[ mov ecx, eax ]
[ and r9d,  [ argument ]  ]
[ and cx,  [ argument ]  ]
[ cmp ebx, r9d ]
[ jnbe  [ addr ]  ]
[ mov eax, dword ptr [rdx  +  [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rdi  +  [ displacement ] ] ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ add rdi, rax ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ mov r8, qword ptr [rsp  +  [ displacement ] ] ]
[ add rax, qword ptr [r14] ]
[ jmp  [ addr ]  ]
[ mov eax, dword ptr [rsp  +  [ displacement ] ] ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ mov rbx, qword ptr [rbx  +  [ displacement ] ] ]
[ test eax, eax ]
[ setnz al ]
[ movzx eax, al ]
[ or r12d, eax ]
[ test rbx, rbx ]
[ jnz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ mov eax, r12d ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ ret  ]
[ test byte ptr [rbx  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rbx, qword ptr [rbx  +  [ displacement ] ] ]
[ test rbx, rbx ]
[ jnz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ mov eax, r12d ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ ret  ]
CALL===========================================================
#now call addr: 7f5eac67a588
#call parent addr: 7f5eac679e93
#root size: 285
===============================================================
[ xor r13d, r13d ]
[ cmp qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov dword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rax  +  [ displacement ] ] ]
[ add rdx, qword ptr [r14] ]
[ jmp  [ addr ]  ]
[ movzx eax, word ptr [rdx  +  [ displacement ] ] ]
[ and eax,  [ argument ]  ]
[ cmp r13d, eax ]
[ cmovb r13d, eax ]
[ mov eax, dword ptr [rdx  +  [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ test r13d, r13d ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rsp  +  [ displacement ] ] ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ add rdx, rax ]
[ movzx eax, word ptr [rdx  +  [ displacement ] ] ]
[ and eax,  [ argument ]  ]
[ cmp r13d, eax ]
[ cmovb r13d, eax ]
[ mov eax, dword ptr [rdx  +  [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ test r13d, r13d ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rsp  +  [ displacement ] ] ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
CALL===========================================================
#now call addr: 7f5eac67a306
#call parent addr: 7f5eac67a588
#root size: 286
===============================================================
RET========================================================
#ret target: 7f5eac67a306
#function name: malloc
#func_id: 32
===========================================================
[ test byte ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov edx, dword ptr [rax  +  [ displacement ] ] ]
[ test edx, edx ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ add rax, rdx ]
[ test byte ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov edx, dword ptr [rax  +  [ displacement ] ] ]
[ test edx, edx ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ mov ecx, dword ptr [rax  +  [ displacement ] ] ]
[ movzx edx, word ptr [rax  +  [ displacement ] ] ]
[ mov edi, dword ptr [rax  +  [ displacement ] ] ]
[ mov ecx, dword ptr [rax + rcx * 1] ]
[ and edx,  [ argument ]  ]
[ lea rdx, ptr [rdx + rdx * 2] ]
[ lea rdx, ptr [rsi + rdx * 8] ]
[ add rcx, r8 ]
[ mov dword ptr [rdx  +  [ displacement ] ], edi ]
[ mov qword ptr [rdx], rcx ]
[ mov qword ptr [rdx  +  [ displacement ] ],  [ argument ]  ]
[ mov edx, dword ptr [rax  +  [ displacement ] ] ]
[ test edx, edx ]
[ jz  [ addr ]  ]
[ add rax, rdx ]
[ test byte ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov edx, dword ptr [rax  +  [ displacement ] ] ]
[ test edx, edx ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac67a588
#call parent addr: 7f5eac67a588
#root size: 286
===============================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac67a588
#root size: 287
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 288
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 288
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 288
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 289
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 289
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 289
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 290
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 290
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 290
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 291
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 291
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 291
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 292
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 292
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 292
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 293
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 293
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov rax, qword ptr [rbp  +  [ displacement ] ] ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ mov qword ptr [rsp], rax ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ test byte ptr [rax],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rbp  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [rax  +  [ displacement ] ] ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac67a070
#call parent addr: 7f5eac679e93
#root size: 293
===============================================================
RET========================================================
#ret target: 7f5eac67a070
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov ebx, dword ptr [rax  +  [ displacement ] ] ]
[ mov rax, qword ptr [r13  +  [ displacement ] ] ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ add rbx, qword ptr [rsp  +  [ displacement ] ] ]
[ lea rax, ptr [rax + rax * 8] ]
[ shl rax,  [ argument ]  ]
[ mov rbp, qword ptr [rdi + rax * 1] ]
[ test rbp, rbp ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 293
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 294
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 294
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 294
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 295
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 295
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 295
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 296
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 296
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 296
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 297
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 297
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 297
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 298
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 298
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 298
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 299
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 299
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 299
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 300
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 300
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 300
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67a070
#call parent addr: 7f5eac679e93
#root size: 300
===============================================================
RET========================================================
#ret target: 7f5eac67a070
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 300
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 301
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 301
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 301
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 302
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 302
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 302
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 303
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 303
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 303
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 304
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 304
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67a070
#call parent addr: 7f5eac679e93
#root size: 304
===============================================================
RET========================================================
#ret target: 7f5eac67a070
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67a070
#call parent addr: 7f5eac679e93
#root size: 304
===============================================================
RET========================================================
#ret target: 7f5eac67a070
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67a070
#call parent addr: 7f5eac679e93
#root size: 304
===============================================================
RET========================================================
#ret target: 7f5eac67a070
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67a070
#call parent addr: 7f5eac679e93
#root size: 304
===============================================================
RET========================================================
#ret target: 7f5eac67a070
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67a070
#call parent addr: 7f5eac679e93
#root size: 304
===============================================================
[ pxor xmm0, xmm0 ]
[ movdqa xmm2, xmmword ptr [rdi] ]
[ movdqa xmm1, xmmword ptr [rsi] ]
[ pcmpeqb xmm0, xmm1 ]
[ pslldq xmm2,  [ argument ]  ]
[ pcmpeqb xmm2, xmm1 ]
[ psubb xmm2, xmm0 ]
[ pmovmskb r9d, xmm2 ]
[ shr edx, cl ]
[ shr r9d, cl ]
[ sub edx, r9d ]
[ jnz  [ addr ]  ]
[ movdqa xmm3, xmmword ptr [rdi] ]
[ pxor xmm0, xmm0 ]
[ mov rcx,  [ argument ]  ]
[ mov r9d,  [ argument ]  ]
[ lea r10, ptr [rdi  +  [ displacement ] ] ]
[ and r10,  [ argument ]  ]
[ sub r10,  [ argument ]  ]
[ nop word ptr [rax + rax * 1], ax ]
[ add r10,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ movdqa xmm1, xmmword ptr [rsi + rcx * 1] ]
[ movdqa xmm2, xmmword ptr [rdi + rcx * 1] ]
[ movdqa xmm4, xmm2 ]
[ psrldq xmm3,  [ argument ]  ]
[ pslldq xmm2,  [ argument ]  ]
[ por xmm2, xmm3 ]
[ pcmpeqb xmm0, xmm1 ]
[ pcmpeqb xmm1, xmm2 ]
[ psubb xmm1, xmm0 ]
[ pmovmskb edx, xmm1 ]
[ sub edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
RET========================================================
#ret target: 7f5eac67a070
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67a070
#call parent addr: 7f5eac679e93
#root size: 304
===============================================================
RET========================================================
#ret target: 7f5eac67a070
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67a070
#call parent addr: 7f5eac679e93
#root size: 304
===============================================================
RET========================================================
#ret target: 7f5eac67a070
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67a070
#call parent addr: 7f5eac679e93
#root size: 304
===============================================================
RET========================================================
#ret target: 7f5eac67a070
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67a306
#call parent addr: 7f5eac679e93
#root size: 304
===============================================================
RET========================================================
#ret target: 7f5eac67a306
#function name: malloc
#func_id: 32
===========================================================
[ mov edx, dword ptr [rdi  +  [ displacement ] ] ]
[ add rdx, rdi ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac67a588
#call parent addr: 7f5eac679e93
#root size: 304
===============================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac67a588
#root size: 305
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 306
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 306
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 306
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 307
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 307
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 307
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 308
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 308
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 308
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 309
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 309
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 309
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 310
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 310
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 310
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 311
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 311
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 311
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 312
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 312
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 312
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67a070
#call parent addr: 7f5eac679e93
#root size: 312
===============================================================
RET========================================================
#ret target: 7f5eac67a070
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67a070
#call parent addr: 7f5eac679e93
#root size: 312
===============================================================
RET========================================================
#ret target: 7f5eac67a070
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67a306
#call parent addr: 7f5eac679e93
#root size: 312
===============================================================
CALL===========================================================
#now call addr: 7f5eac68452b
#call parent addr: 7f5eac67a306
#root size: 313
===============================================================
RET========================================================
#ret target: 7f5eac68452b
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67a588
#call parent addr: 7f5eac67a306
#root size: 313
===============================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac67a588
#root size: 314
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 315
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 315
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 315
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 316
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 316
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 316
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 317
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 317
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 317
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 318
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 318
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 318
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 319
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 319
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 319
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 320
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 320
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 320
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 321
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 321
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 321
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 321
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 322
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 322
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67a070
#call parent addr: 7f5eac679e93
#root size: 322
===============================================================
RET========================================================
#ret target: 7f5eac67a070
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 322
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 323
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 323
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 323
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 324
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 324
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 324
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 325
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 325
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 325
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 326
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 326
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67a070
#call parent addr: 7f5eac679e93
#root size: 326
===============================================================
RET========================================================
#ret target: 7f5eac67a070
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67a070
#call parent addr: 7f5eac679e93
#root size: 326
===============================================================
RET========================================================
#ret target: 7f5eac67a070
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67a070
#call parent addr: 7f5eac679e93
#root size: 326
===============================================================
RET========================================================
#ret target: 7f5eac67a070
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67a070
#call parent addr: 7f5eac679e93
#root size: 326
===============================================================
RET========================================================
#ret target: 7f5eac67a070
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67a070
#call parent addr: 7f5eac679e93
#root size: 326
===============================================================
RET========================================================
#ret target: 7f5eac67a070
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67a306
#call parent addr: 7f5eac679e93
#root size: 326
===============================================================
RET========================================================
#ret target: 7f5eac67a306
#function name: malloc
#func_id: 32
===========================================================
CALL===========================================================
#now call addr: 7f5eac67a588
#call parent addr: 7f5eac679e93
#root size: 326
===============================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac67a588
#root size: 327
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 328
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 328
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 328
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 329
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 329
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 329
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 330
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 330
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 330
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 331
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 331
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 331
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 332
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 332
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 332
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 333
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 333
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 333
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 334
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 334
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 334
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67a070
#call parent addr: 7f5eac679e93
#root size: 334
===============================================================
RET========================================================
#ret target: 7f5eac67a070
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 334
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 335
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 335
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 335
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 336
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 336
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 336
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 337
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 337
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 337
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 338
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 338
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67a070
#call parent addr: 7f5eac679e93
#root size: 338
===============================================================
RET========================================================
#ret target: 7f5eac67a070
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67a070
#call parent addr: 7f5eac679e93
#root size: 338
===============================================================
RET========================================================
#ret target: 7f5eac67a070
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67a070
#call parent addr: 7f5eac679e93
#root size: 338
===============================================================
RET========================================================
#ret target: 7f5eac67a070
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67a306
#call parent addr: 7f5eac679e93
#root size: 338
===============================================================
RET========================================================
#ret target: 7f5eac67a306
#function name: malloc
#func_id: 32
===========================================================
CALL===========================================================
#now call addr: 7f5eac67a588
#call parent addr: 7f5eac679e93
#root size: 338
===============================================================
CALL===========================================================
#now call addr: 7f5eac67a306
#call parent addr: 7f5eac67a588
#root size: 339
===============================================================
RET========================================================
#ret target: 7f5eac67a306
#function name: malloc
#func_id: 32
===========================================================
CALL===========================================================
#now call addr: 7f5eac67a588
#call parent addr: 7f5eac67a588
#root size: 339
===============================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac67a588
#root size: 340
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 341
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 341
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 341
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 342
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 342
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 342
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 343
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 343
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 343
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 344
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 344
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 344
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 345
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 345
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 345
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 346
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 346
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 346
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 347
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 347
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 347
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67a070
#call parent addr: 7f5eac679e93
#root size: 347
===============================================================
RET========================================================
#ret target: 7f5eac67a070
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67a070
#call parent addr: 7f5eac679e93
#root size: 347
===============================================================
RET========================================================
#ret target: 7f5eac67a070
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 347
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 348
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 348
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 348
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 349
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 349
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 349
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 350
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 350
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679e93
#call parent addr: 7f5eac679e93
#root size: 350
===============================================================
CALL===========================================================
#now call addr: 7f5eac679b94
#call parent addr: 7f5eac679e93
#root size: 351
===============================================================
RET========================================================
#ret target: 7f5eac679b94
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac679bc7
#call parent addr: 7f5eac679e93
#root size: 351
===============================================================
RET========================================================
#ret target: 7f5eac679bc7
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67a070
#call parent addr: 7f5eac679e93
#root size: 351
===============================================================
RET========================================================
#ret target: 7f5eac67a070
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67a070
#call parent addr: 7f5eac679e93
#root size: 351
===============================================================
RET========================================================
#ret target: 7f5eac67a070
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67a070
#call parent addr: 7f5eac679e93
#root size: 351
===============================================================
RET========================================================
#ret target: 7f5eac67a070
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67a070
#call parent addr: 7f5eac679e93
#root size: 351
===============================================================
RET========================================================
#ret target: 7f5eac67a070
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67a070
#call parent addr: 7f5eac679e93
#root size: 351
===============================================================
RET========================================================
#ret target: 7f5eac67a070
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67a070
#call parent addr: 7f5eac679e93
#root size: 351
===============================================================
RET========================================================
#ret target: 7f5eac67a070
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac67a306
#call parent addr: 7f5eac679e93
#root size: 351
===============================================================
RET========================================================
#ret target: 7f5eac67a306
#function name: malloc
#func_id: 32
===========================================================
[ test eax, eax ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [rbx] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ pop rbx ]
[ ret  ]
[ pop rbx ]
[ ret  ]
[ mov qword ptr [rip  +  [ displacement ] ], rbp ]
[ mov qword ptr [rip  +  [ displacement ] ], rbx ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ ret  ]
[ movzx eax, byte ptr [rip  +  [ displacement ] ] ]
[ cmp qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov byte ptr [rbp- [ displacement ] ], al ]
[ jz  [ addr ]  ]
[ cmp byte ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax, qword ptr [rdx] ]
[ xor al, al ]
[ mov qword ptr fs:[ [ displacement ] ], rax ]
[ mov rax, qword ptr [rdx  +  [ displacement ] ] ]
[ mov qword ptr fs:[ [ displacement ] ], rax ]
[ mov qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ mov r11d, dword ptr [rbp- [ displacement ] ] ]
[ test r11d, r11d ]
[ jnz  [ addr ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66cfa8
#call parent addr: 7f5eac679e93
#root size: 351
===============================================================
[ push rbx ]
[ mov rbx, qword ptr [rip  +  [ displacement ] ] ]
[ cmp qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], rbx ]
[ jnz  [ addr ]  ]
[ lea rdi, ptr [rbx  +  [ displacement ] ] ]
[ mov esi,  [ argument ]  ]
[ shl rdi,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac668c1a
#call parent addr: 7f5eac66cfa8
#root size: 352
===============================================================
RET========================================================
#ret target: 7f5eac668c1a
#function name: malloc
#func_id: 32
===========================================================
[ lea rdx, ptr [rbx  +  [ displacement ] ] ]
[ cmp qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ lea rdi, ptr [rax  +  [ displacement ] ] ]
[ mov qword ptr [rax], rdx ]
[ mov qword ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ xor esi, esi ]
[ xor edx, edx ]
[ cmp qword ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ mov rcx, rdx ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ cmp qword ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ mov rcx, rdx ]
[ jz  [ addr ]  ]
[ shl rdx,  [ argument ]  ]
[ add esi,  [ argument ]  ]
[ mov qword ptr [rdi + rdx * 1 + [ displacement ] ], rax ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ movsxd rdx, esi ]
[ mov rcx, rdx ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ cmp rbx, rcx ]
[ jnz  [ addr ]  ]
[ cmp rbx, rcx ]
[ jnz  [ addr ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac668c90
#call parent addr: 7f5eac66cfa8
#root size: 352
===============================================================
[ nop edx, edi ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ mov r12, qword ptr [rip  +  [ displacement ] ] ]
[ push rbp ]
[ push rbx ]
[ test r12, r12 ]
[ jz  [ addr ]  ]
[ cmp qword ptr [r12  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rdi, qword ptr [r12  +  [ displacement ] ] ]
[ test rdi, rdi ]
[ jz  [ addr ]  ]
[ mov r13, qword ptr [r12] ]
[ xor r9d, r9d ]
[ xor r11d, r11d ]
[ xor ebp, ebp ]
[ xor ebx, ebx ]
[ mov r10d,  [ argument ]  ]
[ jmp  [ addr ]  ]
[ cmp r13, r9 ]
[ jz  [ addr ]  ]
[ mov rcx, qword ptr [rdi  +  [ displacement ] ] ]
[ mov rax, qword ptr [rdi  +  [ displacement ] ] ]
[ mov rsi, rbp ]
[ mov r8, qword ptr [rdi  +  [ displacement ] ] ]
[ neg rax ]
[ lea r14, ptr [rcx- [ displacement ] ] ]
[ and r14, rax ]
[ cmp r10, rcx ]
[ cmovb r10, rcx ]
[ sub rsi, rbx ]
[ cmp rsi, r8 ]
[ jb  [ addr ]  ]
[ lea rax, ptr [rcx + rbx * 1- [ displacement ] ] ]
[ xor edx, edx ]
[ add rax, r8 ]
[ sub rax, r14 ]
[ div rcx ]
[ imul rax, rcx ]
[ add rax, r14 ]
[ cmp rax, rbp ]
[ jnbe  [ addr ]  ]
[ lea rax, ptr [rcx + r11 * 1- [ displacement ] ] ]
[ xor edx, edx ]
[ add rsi, r8 ]
[ add rax, r8 ]
[ add rsi, r11 ]
[ sub rax, r14 ]
[ div rcx ]
[ imul rax, rcx ]
[ add rax, r14 ]
[ cmp rsi, rax ]
[ jnb  [ addr ]  ]
[ mov rbp, rax ]
[ mov rbx, r11 ]
[ sub rbp, r8 ]
[ mov qword ptr [rdi  +  [ displacement ] ], rax ]
[ mov r11, rax ]
[ add r9,  [ argument ]  ]
[ mov rax, r9 ]
[ shl rax,  [ argument ]  ]
[ mov rdi, qword ptr [r12 + rax * 1 + [ displacement ] ] ]
[ test rdi, rdi ]
[ jz  [ addr ]  ]
[ cmp r13, r9 ]
[ jz  [ addr ]  ]
[ mov qword ptr [rdi  +  [ displacement ] ], rax ]
[ mov r11, rax ]
[ add r9,  [ argument ]  ]
[ mov rax, r9 ]
[ shl rax,  [ argument ]  ]
[ mov rdi, qword ptr [r12 + rax * 1 + [ displacement ] ] ]
[ test rdi, rdi ]
[ jz  [ addr ]  ]
[ cmp r13, r9 ]
[ jz  [ addr ]  ]
[ mov rcx, qword ptr [rdi  +  [ displacement ] ] ]
[ mov rax, qword ptr [rdi  +  [ displacement ] ] ]
[ mov rsi, rbp ]
[ mov r8, qword ptr [rdi  +  [ displacement ] ] ]
[ neg rax ]
[ lea r14, ptr [rcx- [ displacement ] ] ]
[ and r14, rax ]
[ cmp r10, rcx ]
[ cmovb r10, rcx ]
[ sub rsi, rbx ]
[ cmp rsi, r8 ]
[ jb  [ addr ]  ]
[ lea rax, ptr [r11 + r10 * 1 + [ displacement ] ] ]
[ xor edx, edx ]
[ div r10 ]
[ imul rax, r10 ]
[ add rax,  [ argument ]  ]
[ movq xmm0, rax ]
[ movq xmm1, r11 ]
[ pop rbx ]
[ pop rbp ]
[ mov qword ptr [rip  +  [ displacement ] ], r10 ]
[ punpcklqdq xmm0, xmm1 ]
[ pop r12 ]
[ pop r13 ]
[ movups xmmword ptr [rip  +  [ displacement ] ], xmm0 ]
[ pop r14 ]
[ ret  ]
RET========================================================
#ret target: 7f5eac668c90
#function name: _dl_mcount
#func_id: 19
===========================================================
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac668c95
#call parent addr: 7f5eac66cfa8
#root size: 352
===============================================================
[ nop edx, edi ]
[ push r12 ]
[ mov r12, qword ptr [rip  +  [ displacement ] ] ]
[ push rbp ]
[ push rbx ]
[ mov rbx, qword ptr [rip  +  [ displacement ] ] ]
[ lea rdi, ptr [rbx + r12 * 1 + [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac67b6bb
#call parent addr: 7f5eac668c95
#root size: 353
===============================================================
RET========================================================
#ret target: 7f5eac67b6bb
#function name: malloc
#func_id: 32
===========================================================
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rbp, rax ]
[ xor edx, edx ]
[ lea rax, ptr [rax + r12 * 1- [ displacement ] ] ]
[ mov esi,  [ argument ]  ]
[ div r12 ]
[ imul rax, r12 ]
[ lea r12, ptr [rbx + rax * 1- [ displacement ] ] ]
[ xor eax, eax ]
[ lea rdi, ptr [r12  +  [ displacement ] ] ]
[ mov rcx, r12 ]
[ mov qword ptr [r12],  [ argument ]  ]
[ mov qword ptr [r12  +  [ displacement ] ],  [ argument ]  ]
[ and rdi,  [ addr ]  ]
[ sub rcx, rdi ]
[ add ecx,  [ argument ]  ]
[ shr ecx,  [ argument ]  ]
[ rep stosq qword ptr  [ str ] ]
[ mov qword ptr [r12  +  [ displacement ] ], rbp ]
[ mov rdi, qword ptr [rip  +  [ displacement ] ] ]
[ lea rbx, ptr [rdi  +  [ displacement ] ] ]
[ add rdi,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac67b72f
#call parent addr: 7f5eac668c95
#root size: 353
===============================================================
RET========================================================
#ret target: 7f5eac67b72f
#function name: malloc
#func_id: 32
===========================================================
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov qword ptr [rax], rbx ]
[ add rax,  [ argument ]  ]
[ mov qword ptr [r12  +  [ displacement ] ], rax ]
[ mov rax, r12 ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ ret  ]
[ mov rsi, rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ mov edi,  [ argument ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ mov eax,  [ argument ]  ]
[ mov qword ptr [rsi], rsi ]
[ mov qword ptr [rsi  +  [ displacement ] ], rsi ]
[ syscall  ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ lea rbx, ptr [rip  +  [ displacement ] ] ]
[ nop dword ptr [rax + rax * 1], eax ]
[ mov rdx, rbx ]
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ mov edi,  [ argument ]  ]
[ xor eax, eax ]
[ call  [ addr.func ]  ]
[ mov rax, rsi ]
[ mov byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ pop rbx ]
[ ret  ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ jmp  [ addr ]  ]
[ cmp byte ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax, qword ptr [rdx] ]
[ xor al, al ]
[ mov qword ptr fs:[ [ displacement ] ], rax ]
[ mov rax, qword ptr [rdx  +  [ displacement ] ] ]
[ mov qword ptr fs:[ [ displacement ] ], rax ]
[ mov qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ mov r11d, dword ptr [rbp- [ displacement ] ] ]
[ test r11d, r11d ]
[ jnz  [ addr ]  ]
[ mov rdx, qword ptr [r15  +  [ displacement ] ] ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ lea r12, ptr [r15  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ movdqu xmm6, xmmword ptr [r15  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rip  +  [ displacement ] ], r12 ]
[ mov qword ptr [rip  +  [ displacement ] ], rdx ]
[ movups xmmword ptr [rip  +  [ displacement ] ], xmm6 ]
[ test ah,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov rdi, r15 ]
[ mov rsi, qword ptr [rax] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66b489
#call parent addr: 7f5eac668c95
#root size: 353
===============================================================
[ nop edx, edi ]
[ jmp  [ addr ]  ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov ebx, dword ptr [rip  +  [ displacement ] ] ]
[ mov ecx, ebx ]
[ shr ebx,  [ argument ]  ]
[ and ecx,  [ argument ]  ]
[ and ebx,  [ argument ]  ]
[ cmp ecx,  [ argument ]  ]
[ setz dl ]
[ cmp ebx,  [ argument ]  ]
[ setz al ]
[ and al, dl ]
[ jnz  [ addr ]  ]
[ mov edx, dword ptr [rip  +  [ displacement ] ] ]
[ test dl,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov r14, rdi ]
[ mov r12, rsi ]
[ mov edi, edx ]
[ mov esi, edx ]
[ and edi,  [ argument ]  ]
[ and esi,  [ argument ]  ]
[ setnz byte ptr [rsp  +  [ displacement ] ] ]
[ cmp ecx,  [ argument ]  ]
[ mov dword ptr [rsp  +  [ displacement ] ], esi ]
[ setnz sil ]
[ and esi, edx ]
[ mov byte ptr [rsp  +  [ displacement ] ], dil ]
[ cmp ebx,  [ argument ]  ]
[ movzx edi, byte ptr [rsp  +  [ displacement ] ] ]
[ setnz dl ]
[ mov r15d, esi ]
[ and edx, edi ]
[ mov byte ptr [rsp  +  [ displacement ] ], dl ]
[ test r12, r12 ]
[ jz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
RET========================================================
#ret target: 7f5eac66b489
#function name: __get_cpu_features
#func_id: 31
===========================================================
[ xor r12d, r12d ]
[ cmp qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ setnz r12b ]
[ or dword ptr [rip  +  [ displacement ] ], r12d ]
[ rdtsc  ]
[ mov rbx, rax ]
[ mov eax, dword ptr [r15  +  [ displacement ] ] ]
[ shl rdx,  [ argument ]  ]
[ or rbx, rdx ]
[ lea r14d, ptr [rax- [ displacement ] ] ]
[ shl r14,  [ argument ]  ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ mov r13, qword ptr [rax + r14 * 1] ]
[ mov rax, qword ptr [r13  +  [ displacement ] ] ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ and byte ptr [r13  +  [ displacement ] ],  [ argument ]  ]
[ cmp r13, qword ptr [rbp- [ displacement ] ] ]
[ jz  [ addr ]  ]
[ mov esi, dword ptr [rip  +  [ displacement ] ] ]
[ xor edx, edx ]
[ mov ecx, r12d ]
[ mov rdi, r13 ]
[ test esi, esi ]
[ mov rsi, qword ptr [r13  +  [ displacement ] ] ]
[ setnz dl ]
[ call  [ addr.func ]  ]
[ mov dword ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ and byte ptr [r13  +  [ displacement ] ],  [ argument ]  ]
[ cmp r13, qword ptr [rbp- [ displacement ] ] ]
[ jz  [ addr ]  ]
[ mov esi, dword ptr [rip  +  [ displacement ] ] ]
[ xor edx, edx ]
[ mov ecx, r12d ]
[ mov rdi, r13 ]
[ test esi, esi ]
[ mov rsi, qword ptr [r13  +  [ displacement ] ] ]
[ setnz dl ]
[ call  [ addr.func ]  ]
[ cmp qword ptr [r13  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov esi,  [ argument ]  ]
[ mov rdi, r13 ]
[ call  [ addr.func ]  ]
[ sub r14,  [ argument ]  ]
[ cmp r14,  [ addr ]  ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ mov r13, qword ptr [rax + r14 * 1] ]
[ mov rax, qword ptr [r13  +  [ displacement ] ] ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ and byte ptr [r13  +  [ displacement ] ],  [ argument ]  ]
[ cmp r13, qword ptr [rbp- [ displacement ] ] ]
[ jz  [ addr ]  ]
[ mov esi, dword ptr [rip  +  [ displacement ] ] ]
[ xor edx, edx ]
[ mov ecx, r12d ]
[ mov rdi, r13 ]
[ test esi, esi ]
[ mov rsi, qword ptr [r13  +  [ displacement ] ] ]
[ setnz dl ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66b525
#call parent addr: 7f5eac668c95
#root size: 353
===============================================================
[ nop edx, edi ]
[ push rbp ]
[ mov rbp, rsp ]
[ push r15 ]
[ mov r15, rdi ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ push rbx ]
[ mov ebx, edx ]
[ sub rsp,  [ argument ]  ]
[ and edx,  [ addr ]  ]
[ mov qword ptr [rbp- [ displacement ] ], rsi ]
[ mov dword ptr [rbp- [ displacement ] ], ecx ]
[ jnz  [ addr ]  ]
[ xor eax, eax ]
[ cmp qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ setnz al ]
[ or ecx, eax ]
[ mov dword ptr [rbp- [ displacement ] ], ecx ]
[ test byte ptr [r15  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ mov r10d, dword ptr [rbp- [ displacement ] ] ]
[ and eax,  [ argument ]  ]
[ test r10d, r10d ]
[ jz  [ addr ]  ]
[ cmp qword ptr [r15  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ xor r13d, r13d ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ mov r13d, ebx ]
[ and r13d,  [ argument ]  ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ cmp qword ptr [r15  +  [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ jz  [ addr ]  ]
[ test r13d, r13d ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rax  +  [ displacement ] ] ]
[ test rdx, rdx ]
[ jnz  [ addr ]  ]
[ mov r9d, dword ptr [rbp- [ displacement ] ] ]
[ mov qword ptr [rax  +  [ displacement ] ], r15 ]
[ test r9d, r9d ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rax  +  [ displacement ] ], rdi ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ nop dword ptr [rax + rax * 1], eax ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ pxor xmm0, xmm0 ]
[ movaps xmmword ptr [rbp- [ displacement ] ], xmm0 ]
[ movaps xmmword ptr [rbp- [ displacement ] ], xmm0 ]
[ movaps xmmword ptr [rbp- [ displacement ] ], xmm0 ]
[ movaps xmmword ptr [rbp- [ displacement ] ], xmm0 ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ test byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ lea rcx, ptr [rip  +  [ displacement ] ] ]
[ cmovnz rdx, rcx ]
[ mov qword ptr [rax  +  [ displacement ] ], rdx ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ nop dword ptr [rax + rax * 1], eax ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ pxor xmm0, xmm0 ]
[ movaps xmmword ptr [rbp- [ displacement ] ], xmm0 ]
[ movaps xmmword ptr [rbp- [ displacement ] ], xmm0 ]
[ movaps xmmword ptr [rbp- [ displacement ] ], xmm0 ]
[ movaps xmmword ptr [rbp- [ displacement ] ], xmm0 ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rcx, qword ptr [rax  +  [ displacement ] ] ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rax  +  [ displacement ] ] ]
[ movq xmm0, rcx ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ movq xmm1, rdx ]
[ lea rdi, ptr [rcx + rdx * 1] ]
[ punpcklqdq xmm0, xmm1 ]
[ movaps xmmword ptr [rbp- [ displacement ] ], xmm0 ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ cmp qword ptr [r15  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ mov rsi, qword ptr [r15  +  [ displacement ] ] ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rsi  +  [ displacement ] ] ]
[ lea r8, ptr [rax + rsi * 1] ]
[ cmp r8, rdi ]
[ jnz  [ addr ]  ]
[ sub rdx, rsi ]
[ mov qword ptr [rbp- [ displacement ] ], rdx ]
[ lea rdi, ptr [rdx + rcx * 1] ]
[ test r13d, r13d ]
[ jnz  [ addr ]  ]
[ test r13d, r13d ]
[ jnz  [ addr ]  ]
[ cmp rax, rdi ]
[ jz  [ addr ]  ]
[ movq xmm0, rax ]
[ movq xmm2, rsi ]
[ mov dword ptr [rbp- [ displacement ] ], r13d ]
[ punpcklqdq xmm0, xmm2 ]
[ movaps xmmword ptr [rbp- [ displacement ] ], xmm0 ]
[ lea rax, ptr [rbp- [ displacement ] ] ]
[ and ebx,  [ addr ]  ]
[ mov r11, r15 ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ lea rax, ptr [rbp- [ displacement ] ] ]
[ mov dword ptr [rbp- [ displacement ] ], ebx ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov rdi, qword ptr [rbp- [ displacement ] ] ]
[ mov r15, qword ptr [r11] ]
[ mov rax, qword ptr [rdi] ]
[ mov rsi, qword ptr [rdi  +  [ displacement ] ] ]
[ mov r8d, dword ptr [rdi  +  [ displacement ] ] ]
[ add rsi, rax ]
[ mov qword ptr [rbp- [ displacement ] ], rsi ]
[ test r8d, r8d ]
[ jz  [ addr ]  ]
[ movq xmm0, rax ]
[ movq xmm2, rsi ]
[ mov dword ptr [rbp- [ displacement ] ], r13d ]
[ punpcklqdq xmm0, xmm2 ]
[ movaps xmmword ptr [rbp- [ displacement ] ], xmm0 ]
[ lea rax, ptr [rbp- [ displacement ] ] ]
[ and ebx,  [ addr ]  ]
[ mov r11, r15 ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ lea rax, ptr [rbp- [ displacement ] ] ]
[ mov dword ptr [rbp- [ displacement ] ], ebx ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov rdi, qword ptr [rbp- [ displacement ] ] ]
[ mov r15, qword ptr [r11] ]
[ mov rax, qword ptr [rdi] ]
[ mov rsi, qword ptr [rdi  +  [ displacement ] ] ]
[ mov r8d, dword ptr [rdi  +  [ displacement ] ] ]
[ add rsi, rax ]
[ mov qword ptr [rbp- [ displacement ] ], rsi ]
[ test r8d, r8d ]
[ jz  [ addr ]  ]
[ xor r12d, r12d ]
[ xor ebx, ebx ]
[ mov rdi, rsi ]
[ cmp rax, rsi ]
[ jb  [ addr ]  ]
[ jmp  [ addr ]  ]
[ mov rdx, qword ptr [r11  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rdx  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rdi  +  [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rsi ]
[ lea rdx, ptr [rdx + rdx * 2] ]
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ lea rbx, ptr [rax + rdx * 8] ]
[ cmp r11, rsi ]
[ jz  [ addr ]  ]
[ test r15, r15 ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [r11  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp rax, rbx ]
[ jnb  [ addr ]  ]
[ nop dword ptr [rax], eax ]
[ mov rcx, qword ptr [rax] ]
[ mov edx, dword ptr [rax  +  [ displacement ] ] ]
[ add rcx, r15 ]
[ cmp rdx,  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp rdx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rdx, qword ptr [rax  +  [ displacement ] ] ]
[ add rax,  [ argument ]  ]
[ add rdx, r15 ]
[ mov qword ptr [rcx], rdx ]
[ cmp rbx, rax ]
[ jnbe  [ addr ]  ]
[ mov r10, qword ptr [r11  +  [ displacement ] ] ]
[ test r10, r10 ]
[ jnz  [ addr ]  ]
[ mov qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ cmp qword ptr [rbp- [ displacement ] ], rbx ]
[ jbe  [ addr ]  ]
[ mov rcx, qword ptr [rax] ]
[ mov edx, dword ptr [rax  +  [ displacement ] ] ]
[ add rcx, r15 ]
[ cmp rdx,  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp rdx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rdx, qword ptr [rax  +  [ displacement ] ] ]
[ add rax,  [ argument ]  ]
[ add rdx, r15 ]
[ mov qword ptr [rcx], rdx ]
[ cmp rbx, rax ]
[ jnbe  [ addr ]  ]
[ mov r10, qword ptr [r11  +  [ displacement ] ] ]
[ test r10, r10 ]
[ jnz  [ addr ]  ]
[ mov qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ cmp qword ptr [rbp- [ displacement ] ], rbx ]
[ jbe  [ addr ]  ]
[ mov qword ptr [rbp- [ displacement ] ], r15 ]
[ mov qword ptr [rbp- [ displacement ] ], r10 ]
[ nop word ptr [rax + rax * 1], ax ]
[ mov r13, qword ptr [rbx  +  [ displacement ] ] ]
[ mov r12d, r13d ]
[ cmp r13d,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [r10  +  [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ cmp qword ptr [rbp- [ displacement ] ], rbx ]
[ jbe  [ addr ]  ]
[ mov qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rbp- [ displacement ] ], r15 ]
[ mov r15, r11 ]
[ nop word ptr [rax + rax * 1], ax ]
[ mov r13, qword ptr [rbx  +  [ displacement ] ] ]
[ mov r12d, r13d ]
[ cmp r13d,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rdi, qword ptr [rbp- [ displacement ] ] ]
[ mov rax, r13 ]
[ mov rcx, qword ptr [rbp- [ displacement ] ] ]
[ shr rax,  [ argument ]  ]
[ movzx esi, word ptr [rdi + rax * 2] ]
[ lea rax, ptr [rax + rax * 2] ]
[ mov rdi, qword ptr [rbp- [ displacement ] ] ]
[ lea r14, ptr [rcx + rax * 8] ]
[ add rdi, qword ptr [rbx] ]
[ mov qword ptr [rbp- [ displacement ] ], rdi ]
[ mov rdi, qword ptr [r15  +  [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], r14 ]
[ cmp r12,  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp r12,  [ argument ]  ]
[ jz  [ addr ]  ]
[ test r12, r12 ]
[ jz  [ addr ]  ]
[ movzx edx, byte ptr [r14  +  [ displacement ] ] ]
[ mov eax, edx ]
[ shr al,  [ argument ]  ]
[ jz  [ addr ]  ]
[ movzx eax, byte ptr [r14  +  [ displacement ] ] ]
[ and eax,  [ argument ]  ]
[ sub eax,  [ argument ]  ]
[ cmp eax,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ cmp r14, qword ptr [r15  +  [ displacement ] ] ]
[ jz  [ addr ]  ]
[ cmp r12,  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp r12,  [ argument ]  ]
[ jz  [ addr ]  ]
[ lea rax, ptr [r12- [ displacement ] ] ]
[ cmp rax,  [ argument ]  ]
[ setbe r9b ]
[ cmp r12,  [ argument ]  ]
[ setz al ]
[ or r9d, eax ]
[ movzx r9d, r9b ]
[ cmp r12,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov eax, r9d ]
[ or eax,  [ argument ]  ]
[ cmp r12,  [ argument ]  ]
[ cmovz r9d, eax ]
[ and esi,  [ argument ]  ]
[ mov dword ptr [r15  +  [ displacement ] ], r9d ]
[ lea rax, ptr [rsi + rsi * 2] ]
[ mov qword ptr [r15  +  [ displacement ] ], r14 ]
[ lea r8, ptr [rdi + rax * 8] ]
[ test r8, r8 ]
[ jz  [ addr ]  ]
[ mov ecx, dword ptr [r8  +  [ displacement ] ] ]
[ mov eax,  [ argument ]  ]
[ test ecx, ecx ]
[ cmovz r8, rax ]
[ mov edi, dword ptr [r14] ]
[ push  [ argument ]  ]
[ lea rdx, ptr [rbp- [ displacement ] ] ]
[ mov rsi, r15 ]
[ mov rcx, qword ptr [rbp- [ displacement ] ] ]
[ add rdi, qword ptr [rbp- [ displacement ] ] ]
[ push  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac66b525
#root size: 354
===============================================================
[ nop edx, edi ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ mov r13, rdi ]
[ push r12 ]
[ mov r12, rdx ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ movzx edx, byte ptr [rdi] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rsi ]
[ mov qword ptr [rsp  +  [ displacement ] ], rcx ]
[ mov qword ptr [rsp  +  [ displacement ] ], r8 ]
[ mov dword ptr [rsp  +  [ displacement ] ], r9d ]
[ test dl, dl ]
[ jz  [ addr ]  ]
[ mov rcx, rdi ]
[ mov eax,  [ argument ]  ]
[ nop word ptr [rax + rax * 1], ax ]
[ mov rsi, rax ]
[ add rcx,  [ argument ]  ]
[ shl rsi,  [ argument ]  ]
[ add rax, rsi ]
[ add rax, rdx ]
[ movzx edx, byte ptr [rcx] ]
[ test dl, dl ]
[ jnz  [ addr ]  ]
[ mov ebx, eax ]
[ add qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov eax,  [ addr ]  ]
[ pxor xmm0, xmm0 ]
[ cmp qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ movaps xmmword ptr [rsp  +  [ displacement ] ], xmm0 ]
[ jz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 355
===============================================================
[ add rbp,  [ argument ]  ]
[ cmp r11, rbp ]
[ jbe  [ addr ]  ]
[ mov rax, qword ptr [r13 + rbp * 8] ]
[ mov rbx, qword ptr [rax  +  [ displacement ] ] ]
[ cmp rbx, r12 ]
[ jz  [ addr ]  ]
[ test r15d, r15d ]
[ jz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 356
===============================================================
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ test r13, r13 ]
[ jz  [ addr ]  ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov edx, dword ptr [rsp  +  [ displacement ] ] ]
[ movzx r14d, word ptr [rax + rdx * 2] ]
[ mov rax, r14 ]
[ and eax,  [ argument ]  ]
[ lea rdx, ptr [rax + rax * 2] ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ lea rax, ptr [rax + rdx * 8] ]
[ mov ebp, dword ptr [rax  +  [ displacement ] ] ]
[ cmp ebp, dword ptr [r13  +  [ displacement ] ] ]
[ jz  [ addr ]  ]
[ mov rsi, qword ptr [r13] ]
[ mov rdi, qword ptr [rax] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 357
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ test eax, eax ]
[ jz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ mov rcx, qword ptr [rbp- [ displacement ] ] ]
[ mov qword ptr [r15  +  [ displacement ] ], rax ]
[ mov r11, rax ]
[ mov qword ptr [r15  +  [ displacement ] ], rcx ]
[ pop rax ]
[ pop rdx ]
[ xor r10d, r10d ]
[ test rcx, rcx ]
[ jnz  [ addr ]  ]
[ cmp r12,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ movsxd rax, dword ptr [rsi + r12 * 4] ]
[ add rax, rsi ]
[ jmp rax ]
[ movzx esi, word ptr [rcx  +  [ displacement ] ] ]
[ movzx edx, byte ptr [rcx  +  [ displacement ] ] ]
[ cmp si,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ xor r10d, r10d ]
[ jmp  [ addr ]  ]
[ mov r10, qword ptr [r11] ]
[ and edx,  [ argument ]  ]
[ add r10, qword ptr [rcx  +  [ displacement ] ] ]
[ cmp dl,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ test si, si ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ cmp r12,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ movsxd rax, dword ptr [rsi + r12 * 4] ]
[ add rax, rsi ]
[ jmp rax ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ add r10, qword ptr [rbx  +  [ displacement ] ] ]
[ mov qword ptr [rax], r10 ]
[ data16 nop ]
[ add rbx,  [ argument ]  ]
[ cmp qword ptr [rbp- [ displacement ] ], rbx ]
[ jnbe  [ addr ]  ]
[ mov rbx, qword ptr [rbp- [ displacement ] ] ]
[ mov r11, r15 ]
[ mov r15, qword ptr [rbp- [ displacement ] ] ]
[ test rbx, rbx ]
[ jz  [ addr ]  ]
[ mov r13, qword ptr [rbp- [ displacement ] ] ]
[ cmp rbx, r13 ]
[ jnbe  [ addr ]  ]
[ mov r13, qword ptr [rbx  +  [ displacement ] ] ]
[ mov r12d, r13d ]
[ cmp r13d,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rdi, qword ptr [rbp- [ displacement ] ] ]
[ mov rax, r13 ]
[ mov rcx, qword ptr [rbp- [ displacement ] ] ]
[ shr rax,  [ argument ]  ]
[ movzx esi, word ptr [rdi + rax * 2] ]
[ lea rax, ptr [rax + rax * 2] ]
[ mov rdi, qword ptr [rbp- [ displacement ] ] ]
[ lea r14, ptr [rcx + rax * 8] ]
[ add rdi, qword ptr [rbx] ]
[ mov qword ptr [rbp- [ displacement ] ], rdi ]
[ mov rdi, qword ptr [r15  +  [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], r14 ]
[ cmp r12,  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp r12,  [ argument ]  ]
[ jz  [ addr ]  ]
[ test r12, r12 ]
[ jz  [ addr ]  ]
[ movzx edx, byte ptr [r14  +  [ displacement ] ] ]
[ mov eax, edx ]
[ shr al,  [ argument ]  ]
[ jz  [ addr ]  ]
[ movzx eax, byte ptr [r14  +  [ displacement ] ] ]
[ and eax,  [ argument ]  ]
[ sub eax,  [ argument ]  ]
[ cmp eax,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ mov rcx, r14 ]
[ mov r11, r15 ]
[ movzx esi, word ptr [rcx  +  [ displacement ] ] ]
[ cmp si,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov r10, qword ptr [r11] ]
[ and edx,  [ argument ]  ]
[ add r10, qword ptr [rcx  +  [ displacement ] ] ]
[ cmp dl,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ test si, si ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [r11  +  [ displacement ] ] ]
[ lea rcx, ptr [rdx  +  [ displacement ] ] ]
[ cmp rcx,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rbp- [ displacement ] ] ]
[ sub rax, rdx ]
[ add rax, qword ptr [rbx  +  [ displacement ] ] ]
[ mov qword ptr [rsi], rax ]
[ jmp  [ addr ]  ]
[ add rbx,  [ argument ]  ]
[ cmp qword ptr [rbp- [ displacement ] ], rbx ]
[ jnbe  [ addr ]  ]
[ mov rbx, qword ptr [rbp- [ displacement ] ] ]
[ mov r11, r15 ]
[ mov r15, qword ptr [rbp- [ displacement ] ] ]
[ test rbx, rbx ]
[ jz  [ addr ]  ]
[ mov r13, qword ptr [rbp- [ displacement ] ] ]
[ cmp rbx, r13 ]
[ jnbe  [ addr ]  ]
[ cmp r14, qword ptr [r15  +  [ displacement ] ] ]
[ jz  [ addr ]  ]
[ cmp r12,  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp r12,  [ argument ]  ]
[ jz  [ addr ]  ]
[ lea rax, ptr [r12- [ displacement ] ] ]
[ cmp rax,  [ argument ]  ]
[ setbe r9b ]
[ cmp r12,  [ argument ]  ]
[ setz al ]
[ or r9d, eax ]
[ movzx r9d, r9b ]
[ cmp r12,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov eax, r9d ]
[ or eax,  [ argument ]  ]
[ cmp r12,  [ argument ]  ]
[ cmovz r9d, eax ]
[ and esi,  [ argument ]  ]
[ mov dword ptr [r15  +  [ displacement ] ], r9d ]
[ lea rax, ptr [rsi + rsi * 2] ]
[ mov qword ptr [r15  +  [ displacement ] ], r14 ]
[ lea r8, ptr [rdi + rax * 8] ]
[ test r8, r8 ]
[ jz  [ addr ]  ]
[ mov ecx, dword ptr [r8  +  [ displacement ] ] ]
[ mov eax,  [ argument ]  ]
[ test ecx, ecx ]
[ cmovz r8, rax ]
[ mov edi, dword ptr [r14] ]
[ push  [ argument ]  ]
[ lea rdx, ptr [rbp- [ displacement ] ] ]
[ mov rsi, r15 ]
[ mov rcx, qword ptr [rbp- [ displacement ] ] ]
[ add rdi, qword ptr [rbp- [ displacement ] ] ]
[ push  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 357
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 358
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 359
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 360
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov edx, dword ptr [rsp  +  [ displacement ] ] ]
[ movzx r14d, word ptr [rax + rdx * 2] ]
[ mov rax, r14 ]
[ and eax,  [ argument ]  ]
[ lea rdx, ptr [rax + rax * 2] ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ lea rax, ptr [rax + rdx * 8] ]
[ mov ebp, dword ptr [rax  +  [ displacement ] ] ]
[ cmp ebp, dword ptr [r13  +  [ displacement ] ] ]
[ jz  [ addr ]  ]
[ or ebp, dword ptr [r13  +  [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ test r14w, r14w ]
[ js  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 360
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 360
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 361
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 362
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 363
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 363
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 364
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 365
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 366
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 366
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 367
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 368
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 369
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 369
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 370
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 371
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 372
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov edx, dword ptr [rsp  +  [ displacement ] ] ]
[ movzx edx, word ptr [rax + rdx * 2] ]
[ xor eax, eax ]
[ mov ecx, edx ]
[ and ecx,  [ argument ]  ]
[ and ebp,  [ argument ]  ]
[ setz al ]
[ add eax,  [ argument ]  ]
[ cmp ecx, eax ]
[ jl  [ addr ]  ]
[ test dx, dx ]
[ js  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rsp  +  [ displacement ] ] ]
[ mov eax, dword ptr [rax] ]
[ lea edx, ptr [rax  +  [ displacement ] ] ]
[ mov dword ptr [rsi], edx ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [rax], rbx ]
[ data16 nop ]
[ xor eax, eax ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ ret  ]
[ add rsp,  [ argument ]  ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ mov edx, dword ptr [r14] ]
[ jmp  [ addr ]  ]
[ mov r15d, dword ptr [rsp  +  [ displacement ] ] ]
[ mov r13, qword ptr [rsp  +  [ displacement ] ] ]
[ mov rbp, qword ptr [rsp  +  [ displacement ] ] ]
[ mov r12, qword ptr [rsp  +  [ displacement ] ] ]
[ mov r11, qword ptr [rsp  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ cmp dword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov r8, qword ptr [rsp  +  [ displacement ] ] ]
[ test r8, r8 ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 372
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 373
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 374
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 375
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 375
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 375
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 376
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 377
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 378
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 378
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 379
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 380
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 381
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 381
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov dword ptr [r14  +  [ displacement ] ],  [ argument ]  ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 381
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 382
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 383
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 384
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 384
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 384
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 385
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 386
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 387
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 387
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 388
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 389
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 390
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 390
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 391
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 392
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 393
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 393
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 394
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 395
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 396
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 396
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 396
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 397
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 398
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 399
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 399
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 400
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 401
===============================================================
[ cmp cl,  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp dx,  [ argument ]  ]
[ jz  [ addr ]  ]
[ xor eax, eax ]
[ jmp  [ addr ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ ret  ]
RET========================================================
#ret target: 7f5eac672885
#function name: _dl_rtld_di_serinfo
#func_id: 17
===========================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 401
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 402
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 402
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 403
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 404
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 405
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 405
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 406
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 407
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 408
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 408
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 409
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 410
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 411
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 411
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 412
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 413
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 414
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 414
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 415
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 416
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 417
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 417
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 417
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 418
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 419
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 420
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov ecx, dword ptr [rip  +  [ displacement ] ] ]
[ test ecx, ecx ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ cmp qword ptr [rax],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ movq xmm0, r8 ]
[ movq xmm5, rbx ]
[ punpcklqdq xmm0, xmm5 ]
[ movaps xmmword ptr [rax], xmm0 ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ movq xmm0, r8 ]
[ movq xmm1, rbx ]
[ punpcklqdq xmm0, xmm1 ]
[ movaps xmmword ptr [rax], xmm0 ]
[ mov eax,  [ argument ]  ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 420
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 421
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 422
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 423
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 423
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 423
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 424
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 425
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 426
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 426
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 427
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 428
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 429
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 429
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 430
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 431
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 432
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ cmp r12,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ mov ecx, dword ptr [r15  +  [ displacement ] ] ]
[ xor r8d, r8d ]
[ cmp r8d, ecx ]
[ jnz  [ addr ]  ]
[ mov rcx, qword ptr [r15  +  [ displacement ] ] ]
[ add qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov r11, qword ptr [r15  +  [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rcx ]
[ jmp  [ addr ]  ]
[ mov rax,  [ addr ]  ]
[ mov ecx, r13d ]
[ xor r8d, r8d ]
[ shr rax, cl ]
[ mov ecx, dword ptr [r15  +  [ displacement ] ] ]
[ not rax ]
[ and eax,  [ argument ]  ]
[ cmp al,  [ argument ]  ]
[ mov edx, eax ]
[ setb r8b ]
[ shl edx,  [ argument ]  ]
[ shl eax,  [ argument ]  ]
[ sar edx,  [ argument ]  ]
[ sar eax,  [ argument ]  ]
[ add edx,  [ argument ]  ]
[ add eax,  [ argument ]  ]
[ cmp r12,  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp r12,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp edx, ecx ]
[ jnz  [ addr ]  ]
[ cmp r8d, ecx ]
[ jnz  [ addr ]  ]
[ mov rcx, qword ptr [r15  +  [ displacement ] ] ]
[ add qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov r11, qword ptr [r15  +  [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rcx ]
[ jmp  [ addr ]  ]
[ cmp r12,  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp r12,  [ argument ]  ]
[ jz  [ addr ]  ]
[ lea rax, ptr [r12- [ displacement ] ] ]
[ cmp rax,  [ argument ]  ]
[ setbe r9b ]
[ cmp r12,  [ argument ]  ]
[ setz al ]
[ or r9d, eax ]
[ movzx r9d, r9b ]
[ cmp r12,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov eax, r9d ]
[ or eax,  [ argument ]  ]
[ cmp r12,  [ argument ]  ]
[ cmovz r9d, eax ]
[ and esi,  [ argument ]  ]
[ mov dword ptr [r15  +  [ displacement ] ], r9d ]
[ lea rax, ptr [rsi + rsi * 2] ]
[ mov qword ptr [r15  +  [ displacement ] ], r14 ]
[ lea r8, ptr [rdi + rax * 8] ]
[ test r8, r8 ]
[ jz  [ addr ]  ]
[ mov ecx, dword ptr [r8  +  [ displacement ] ] ]
[ mov eax,  [ argument ]  ]
[ test ecx, ecx ]
[ cmovz r8, rax ]
[ mov edi, dword ptr [r14] ]
[ push  [ argument ]  ]
[ lea rdx, ptr [rbp- [ displacement ] ] ]
[ mov rsi, r15 ]
[ mov rcx, qword ptr [rbp- [ displacement ] ] ]
[ add rdi, qword ptr [rbp- [ displacement ] ] ]
[ push  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 432
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 433
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 434
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 435
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ xor r10d, r10d ]
[ test rcx, rcx ]
[ jnz  [ addr ]  ]
[ cmp r12,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ movsxd rax, dword ptr [rsi + r12 * 4] ]
[ add rax, rsi ]
[ jmp rax ]
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 435
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 436
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 437
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 438
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 438
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 439
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 440
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 441
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 441
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 442
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 443
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 444
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 444
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 445
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 446
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 447
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 447
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 448
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 449
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 450
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 450
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 451
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 452
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 453
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 453
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 454
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 455
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 456
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 456
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 457
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 458
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 459
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 459
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 460
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 461
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 462
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 462
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 463
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 464
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 465
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 465
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 466
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 467
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 468
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 468
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 469
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 470
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 471
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 471
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 472
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 473
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 474
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 474
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 475
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 476
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 477
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 477
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 478
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 479
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 480
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 480
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 481
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 482
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 483
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 483
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 484
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 485
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 486
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 486
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 487
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 488
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 489
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 489
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 490
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 491
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 492
===============================================================
[ pxor xmm0, xmm0 ]
[ movdqa xmm2, xmmword ptr [rdi] ]
[ movdqa xmm1, xmmword ptr [rsi] ]
[ pcmpeqb xmm0, xmm1 ]
[ pslldq xmm2,  [ argument ]  ]
[ pcmpeqb xmm2, xmm1 ]
[ psubb xmm2, xmm0 ]
[ pmovmskb r9d, xmm2 ]
[ shr edx, cl ]
[ shr r9d, cl ]
[ sub edx, r9d ]
[ jnz  [ addr ]  ]
[ movdqa xmm3, xmmword ptr [rdi] ]
[ pxor xmm0, xmm0 ]
[ mov rcx,  [ argument ]  ]
[ mov r9d,  [ argument ]  ]
[ lea r10, ptr [rdi  +  [ displacement ] ] ]
[ and r10,  [ argument ]  ]
[ sub r10,  [ argument ]  ]
[ nop word ptr [rax + rax * 1], ax ]
[ add r10,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ movdqa xmm1, xmmword ptr [rsi + rcx * 1] ]
[ movdqa xmm2, xmmword ptr [rdi + rcx * 1] ]
[ movdqa xmm4, xmm2 ]
[ psrldq xmm3,  [ argument ]  ]
[ pslldq xmm2,  [ argument ]  ]
[ por xmm2, xmm3 ]
[ pcmpeqb xmm0, xmm1 ]
[ pcmpeqb xmm1, xmm2 ]
[ psubb xmm1, xmm0 ]
[ pmovmskb edx, xmm1 ]
[ sub edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 492
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 492
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 493
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 494
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 495
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 495
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 495
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 496
===============================================================
[ xor eax, eax ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
RET========================================================
#ret target: 7f5eac6731e4
#function name: _dl_rtld_di_serinfo
#func_id: 17
===========================================================
[ mov r9, qword ptr [rbp  +  [ displacement ] ] ]
[ add rbp,  [ argument ]  ]
[ mov rcx, qword ptr [r12] ]
[ xor eax, eax ]
[ test r9, r9 ]
[ jz  [ addr ]  ]
[ push qword ptr [rsp  +  [ displacement ] ] ]
[ mov edi, dword ptr [rsp  +  [ displacement ] ] ]
[ mov r8, r15 ]
[ mov rdx, r14 ]
[ mov rsi, rbx ]
[ push rdi ]
[ push qword ptr [rsp  +  [ displacement ] ] ]
[ mov edi, dword ptr [rsp  +  [ displacement ] ] ]
[ push rdi ]
[ mov rdi, r13 ]
[ push qword ptr [rsp  +  [ displacement ] ] ]
[ push rax ]
[ call  [ addr.func ]  ]
[ cmp qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ test rcx, rcx ]
[ jz  [ addr ]  ]
[ movzx eax, byte ptr [rcx  +  [ displacement ] ] ]
[ and eax,  [ argument ]  ]
[ cmp al,  [ argument ]  ]
[ jz  [ addr ]  ]
[ test rcx, rcx ]
[ jz  [ addr ]  ]
[ movzx eax, byte ptr [rcx  +  [ displacement ] ] ]
[ shr al,  [ argument ]  ]
[ cmp al,  [ argument ]  ]
[ jz  [ addr ]  ]
[ test byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov qword ptr [r12],  [ argument ]  ]
[ xor r14d, r14d ]
[ jmp  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ mov rax, r14 ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ mov rcx, qword ptr [rbp- [ displacement ] ] ]
[ mov qword ptr [r15  +  [ displacement ] ], rax ]
[ mov r11, rax ]
[ mov qword ptr [r15  +  [ displacement ] ], rcx ]
[ pop rax ]
[ pop rdx ]
[ xor r10d, r10d ]
[ test rcx, rcx ]
[ jnz  [ addr ]  ]
[ cmp r12,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ movsxd rax, dword ptr [rsi + r12 * 4] ]
[ add rax, rsi ]
[ jmp rax ]
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac674f0f
#root size: 496
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 497
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 498
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 499
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 499
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 499
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 500
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 501
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 502
===============================================================
[ pxor xmm0, xmm0 ]
[ movdqa xmm2, xmmword ptr [rdi] ]
[ movdqa xmm1, xmmword ptr [rsi] ]
[ pcmpeqb xmm0, xmm1 ]
[ pslldq xmm2,  [ argument ]  ]
[ pcmpeqb xmm2, xmm1 ]
[ psubb xmm2, xmm0 ]
[ pmovmskb r9d, xmm2 ]
[ shr edx, cl ]
[ shr r9d, cl ]
[ sub edx, r9d ]
[ jnz  [ addr ]  ]
[ movdqa xmm3, xmmword ptr [rdi] ]
[ pxor xmm0, xmm0 ]
[ mov rcx,  [ argument ]  ]
[ mov r9d,  [ argument ]  ]
[ lea r10, ptr [rdi  +  [ displacement ] ] ]
[ and r10,  [ argument ]  ]
[ sub r10,  [ argument ]  ]
[ nop word ptr [rax + rax * 1], ax ]
[ add r10,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ movdqa xmm1, xmmword ptr [rsi + rcx * 1] ]
[ movdqa xmm2, xmmword ptr [rdi + rcx * 1] ]
[ movdqa xmm4, xmm2 ]
[ psrldq xmm3,  [ argument ]  ]
[ pslldq xmm2,  [ argument ]  ]
[ por xmm2, xmm3 ]
[ pcmpeqb xmm0, xmm1 ]
[ pcmpeqb xmm1, xmm2 ]
[ psubb xmm1, xmm0 ]
[ pmovmskb edx, xmm1 ]
[ sub edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 502
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 503
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 504
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 505
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 505
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 506
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 507
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 508
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 508
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 509
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 510
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 511
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 511
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 512
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 513
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 514
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 514
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 515
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 516
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 517
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 517
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 518
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 519
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 520
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 520
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 521
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 522
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 523
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 523
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 524
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 525
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 526
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 526
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 527
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 528
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 529
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 529
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 530
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 531
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 532
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 532
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 533
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 534
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 535
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 535
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 535
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 536
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 537
===============================================================
RET========================================================
#ret target: 7f5eac672885
#function name: _dl_rtld_di_serinfo
#func_id: 17
===========================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 537
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 538
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 538
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 539
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 540
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 541
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 541
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 542
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 543
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 544
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 544
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 545
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 546
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 547
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 547
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 548
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 549
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 550
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 550
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 551
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 552
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 553
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 553
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 554
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 555
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 556
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 556
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 557
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 558
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 559
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 559
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 560
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 561
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ add qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ cmp rax, qword ptr [rbp- [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ mov r15, r11 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ or byte ptr [r15  +  [ displacement ] ],  [ argument ]  ]
[ cmp qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rdi, qword ptr [rbp- [ displacement ] ] ]
[ mov r15, qword ptr [r11] ]
[ mov rax, qword ptr [rdi] ]
[ mov rsi, qword ptr [rdi  +  [ displacement ] ] ]
[ mov r8d, dword ptr [rdi  +  [ displacement ] ] ]
[ add rsi, rax ]
[ mov qword ptr [rbp- [ displacement ] ], rsi ]
[ test r8d, r8d ]
[ jz  [ addr ]  ]
[ xor r12d, r12d ]
[ xor ebx, ebx ]
[ mov rdi, rsi ]
[ cmp rax, rsi ]
[ jb  [ addr ]  ]
[ jmp  [ addr ]  ]
[ mov rsi, qword ptr [rax  +  [ displacement ] ] ]
[ mov ecx, esi ]
[ cmp esi,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov r12, rax ]
[ test rbx, rbx ]
[ jnz  [ addr ]  ]
[ mov rbx, rax ]
[ add rax,  [ argument ]  ]
[ cmp rdi, rax ]
[ jnbe  [ addr ]  ]
[ mov rdx, qword ptr [rax] ]
[ add rdx, r15 ]
[ cmp rcx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rcx, qword ptr [r11  +  [ displacement ] ] ]
[ test rcx, rcx ]
[ jnz  [ addr ]  ]
[ add qword ptr [rdx], r15 ]
[ add rax,  [ argument ]  ]
[ cmp rdi, rax ]
[ jbe  [ addr ]  ]
[ add rax,  [ argument ]  ]
[ cmp rdi, rax ]
[ jbe  [ addr ]  ]
[ mov rsi, qword ptr [rax  +  [ displacement ] ] ]
[ mov ecx, esi ]
[ cmp esi,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov r12, rax ]
[ test rbx, rbx ]
[ jnz  [ addr ]  ]
[ test rbx, rbx ]
[ jz  [ addr ]  ]
[ cmp rbx, r12 ]
[ jnbe  [ addr ]  ]
[ mov esi, dword ptr [rbp- [ displacement ] ] ]
[ mov r13, r11 ]
[ test esi, esi ]
[ jnz  [ addr ]  ]
[ nop dword ptr [rax + rax * 1], eax ]
[ cmp dword ptr [rbx  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov r14, qword ptr [rbx] ]
[ mov rax, qword ptr [rbx  +  [ displacement ] ] ]
[ add rax, qword ptr [r13] ]
[ call rax ]
CALL===========================================================
#now call addr: 7f5eac674c81
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
[ nop edx, edi ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov ecx, dword ptr [rdx  +  [ displacement ] ] ]
[ test ch,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax,  [ addr ]  ]
[ and rax, qword ptr [rdx  +  [ displacement ] ] ]
[ cmp rax,  [ argument ]  ]
[ jz  [ addr ]  ]
[ test ch,  [ argument ]  ]
[ jz  [ addr ]  ]
[ test byte ptr [rdx  +  [ displacement ] ],  [ argument ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ cmovz rax, rdx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac674c81
#function name: 
#func_id: 0
===========================================================
[ add r14, r15 ]
[ mov qword ptr [r14], rax ]
[ add rbx,  [ argument ]  ]
[ cmp rbx, r12 ]
[ jbe  [ addr ]  ]
[ mov r11, r13 ]
[ add qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ cmp rax, qword ptr [rbp- [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ mov r15, r11 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ cmp dword ptr [rbx  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov r14, qword ptr [rbx] ]
[ mov rax, qword ptr [rbx  +  [ displacement ] ] ]
[ add rax, qword ptr [r13] ]
[ call rax ]
CALL===========================================================
#now call addr: 7f5eac674c81
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
[ nop edx, edi ]
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov rdx,  [ addr ]  ]
[ mov rsi,  [ addr ]  ]
[ and rdx, qword ptr [rcx  +  [ displacement ] ] ]
[ cmp rdx, rsi ]
[ jz  [ addr ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ test byte ptr [rcx  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ test byte ptr [rcx  +  [ displacement ] ],  [ argument ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ cmovnz rax, rdx ]
[ ret  ]
[ ret  ]
RET========================================================
#ret target: 7f5eac674c81
#function name: 
#func_id: 0
===========================================================
[ add r14, r15 ]
[ mov qword ptr [r14], rax ]
[ add rbx,  [ argument ]  ]
[ cmp rbx, r12 ]
[ jbe  [ addr ]  ]
[ mov r11, r13 ]
[ add qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ cmp rax, qword ptr [rbp- [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ mov r15, r11 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac674c81
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
[ nop edx, edi ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ test byte ptr [rdx  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov ecx, dword ptr [rdx  +  [ displacement ] ] ]
[ test ecx,  [ addr ]  ]
[ jz  [ addr ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ test byte ptr [rdx  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5eac674c81
#function name: 
#func_id: 0
===========================================================
[ add r14, r15 ]
[ mov qword ptr [r14], rax ]
[ add rbx,  [ argument ]  ]
[ cmp rbx, r12 ]
[ jbe  [ addr ]  ]
[ mov r11, r13 ]
[ add qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ cmp rax, qword ptr [rbp- [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ mov r15, r11 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac674c81
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
[ nop edx, edi ]
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov rdx,  [ addr ]  ]
[ mov rsi,  [ addr ]  ]
[ and rdx, qword ptr [rcx  +  [ displacement ] ] ]
[ cmp rdx, rsi ]
[ jz  [ addr ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ test byte ptr [rcx  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ test byte ptr [rcx  +  [ displacement ] ],  [ argument ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ cmovnz rax, rdx ]
[ ret  ]
[ ret  ]
RET========================================================
#ret target: 7f5eac674c81
#function name: 
#func_id: 0
===========================================================
[ add r14, r15 ]
[ mov qword ptr [r14], rax ]
[ add rbx,  [ argument ]  ]
[ cmp rbx, r12 ]
[ jbe  [ addr ]  ]
[ mov r11, r13 ]
[ add qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ cmp rax, qword ptr [rbp- [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ mov r15, r11 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac674c81
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
[ nop edx, edi ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax,  [ addr ]  ]
[ and rax, qword ptr [rdx  +  [ displacement ] ] ]
[ mov rdx,  [ addr ]  ]
[ cmp rax, rdx ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ cmovz rax, rdx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac674c81
#function name: 
#func_id: 0
===========================================================
[ add r14, r15 ]
[ mov qword ptr [r14], rax ]
[ add rbx,  [ argument ]  ]
[ cmp rbx, r12 ]
[ jbe  [ addr ]  ]
[ mov r11, r13 ]
[ add qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ cmp rax, qword ptr [rbp- [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ mov r15, r11 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac674c81
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
[ nop edx, edi ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax,  [ addr ]  ]
[ and rax, qword ptr [rdx  +  [ displacement ] ] ]
[ mov rdx,  [ addr ]  ]
[ cmp rax, rdx ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ cmovz rax, rdx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac674c81
#function name: 
#func_id: 0
===========================================================
[ add r14, r15 ]
[ mov qword ptr [r14], rax ]
[ add rbx,  [ argument ]  ]
[ cmp rbx, r12 ]
[ jbe  [ addr ]  ]
[ mov r11, r13 ]
[ add qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ cmp rax, qword ptr [rbp- [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ mov r15, r11 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac674c81
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
[ nop edx, edi ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax,  [ addr ]  ]
[ and rax, qword ptr [rdx  +  [ displacement ] ] ]
[ mov rdx,  [ addr ]  ]
[ cmp rax, rdx ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ cmovz rax, rdx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac674c81
#function name: 
#func_id: 0
===========================================================
[ add r14, r15 ]
[ mov qword ptr [r14], rax ]
[ add rbx,  [ argument ]  ]
[ cmp rbx, r12 ]
[ jbe  [ addr ]  ]
[ mov r11, r13 ]
[ add qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ cmp rax, qword ptr [rbp- [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ mov r15, r11 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac674c81
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
[ nop edx, edi ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax,  [ addr ]  ]
[ and rax, qword ptr [rdx  +  [ displacement ] ] ]
[ mov rdx,  [ addr ]  ]
[ cmp rax, rdx ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ cmovz rax, rdx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac674c81
#function name: 
#func_id: 0
===========================================================
[ add r14, r15 ]
[ mov qword ptr [r14], rax ]
[ add rbx,  [ argument ]  ]
[ cmp rbx, r12 ]
[ jbe  [ addr ]  ]
[ mov r11, r13 ]
[ add qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ cmp rax, qword ptr [rbp- [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ mov r15, r11 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac674c81
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
[ nop edx, edi ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov ecx, dword ptr [rdx  +  [ displacement ] ] ]
[ test ch,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax,  [ addr ]  ]
[ and rax, qword ptr [rdx  +  [ displacement ] ] ]
[ cmp rax,  [ argument ]  ]
[ jz  [ addr ]  ]
[ test ch,  [ argument ]  ]
[ jz  [ addr ]  ]
[ test byte ptr [rdx  +  [ displacement ] ],  [ argument ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ cmovz rax, rdx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac674c81
#function name: 
#func_id: 0
===========================================================
[ add r14, r15 ]
[ mov qword ptr [r14], rax ]
[ add rbx,  [ argument ]  ]
[ cmp rbx, r12 ]
[ jbe  [ addr ]  ]
[ mov r11, r13 ]
[ add qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ cmp rax, qword ptr [rbp- [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ mov r15, r11 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac674c81
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
[ nop edx, edi ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax,  [ addr ]  ]
[ and rax, qword ptr [rdx  +  [ displacement ] ] ]
[ mov ecx, dword ptr [rdx  +  [ displacement ] ] ]
[ cmp rax,  [ argument ]  ]
[ jz  [ addr ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ test ecx,  [ addr ]  ]
[ jnz  [ addr ]  ]
[ and ch,  [ argument ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ cmovnz rax, rdx ]
[ ret  ]
[ test ecx,  [ addr ]  ]
[ jz  [ addr ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ test byte ptr [rdx  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5eac674c81
#function name: 
#func_id: 0
===========================================================
[ add r14, r15 ]
[ mov qword ptr [r14], rax ]
[ add rbx,  [ argument ]  ]
[ cmp rbx, r12 ]
[ jbe  [ addr ]  ]
[ mov r11, r13 ]
[ add qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ cmp rax, qword ptr [rbp- [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ mov r15, r11 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac674c81
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
[ nop edx, edi ]
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov rdx,  [ addr ]  ]
[ mov rsi,  [ addr ]  ]
[ and rdx, qword ptr [rcx  +  [ displacement ] ] ]
[ cmp rdx, rsi ]
[ jz  [ addr ]  ]
[ mov edx, dword ptr [rcx  +  [ displacement ] ] ]
[ test edx,  [ addr ]  ]
[ jz  [ addr ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ test byte ptr [rcx  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5eac674c81
#function name: 
#func_id: 0
===========================================================
[ add r14, r15 ]
[ mov qword ptr [r14], rax ]
[ add rbx,  [ argument ]  ]
[ cmp rbx, r12 ]
[ jbe  [ addr ]  ]
[ mov r11, r13 ]
[ add qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ cmp rax, qword ptr [rbp- [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ mov r15, r11 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac674c81
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
[ nop edx, edi ]
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov rdx,  [ addr ]  ]
[ mov rsi,  [ addr ]  ]
[ and rdx, qword ptr [rcx  +  [ displacement ] ] ]
[ cmp rdx, rsi ]
[ jz  [ addr ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ test byte ptr [rcx  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ test byte ptr [rcx  +  [ displacement ] ],  [ argument ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ cmovnz rax, rdx ]
[ ret  ]
[ ret  ]
RET========================================================
#ret target: 7f5eac674c81
#function name: 
#func_id: 0
===========================================================
[ add r14, r15 ]
[ mov qword ptr [r14], rax ]
[ add rbx,  [ argument ]  ]
[ cmp rbx, r12 ]
[ jbe  [ addr ]  ]
[ mov r11, r13 ]
[ add qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ cmp rax, qword ptr [rbp- [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ mov r15, r11 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac674c81
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
[ nop edx, edi ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov ecx, dword ptr [rdx  +  [ displacement ] ] ]
[ test ch,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax,  [ addr ]  ]
[ and rax, qword ptr [rdx  +  [ displacement ] ] ]
[ cmp rax,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [rdx  +  [ displacement ] ] ]
[ and eax,  [ argument ]  ]
[ test byte ptr [rdx  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ test eax, eax ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ cmovz rax, rdx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac674c81
#function name: 
#func_id: 0
===========================================================
[ add r14, r15 ]
[ mov qword ptr [r14], rax ]
[ add rbx,  [ argument ]  ]
[ cmp rbx, r12 ]
[ jbe  [ addr ]  ]
[ mov r11, r13 ]
[ add qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ cmp rax, qword ptr [rbp- [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ mov r15, r11 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac674c81
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
[ nop edx, edi ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax,  [ addr ]  ]
[ and rax, qword ptr [rdx  +  [ displacement ] ] ]
[ mov rdx,  [ addr ]  ]
[ cmp rax, rdx ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ cmovz rax, rdx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac674c81
#function name: 
#func_id: 0
===========================================================
[ add r14, r15 ]
[ mov qword ptr [r14], rax ]
[ add rbx,  [ argument ]  ]
[ cmp rbx, r12 ]
[ jbe  [ addr ]  ]
[ mov r11, r13 ]
[ add qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ cmp rax, qword ptr [rbp- [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ mov r15, r11 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac674c81
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
[ nop edx, edi ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax,  [ addr ]  ]
[ and rax, qword ptr [rdx  +  [ displacement ] ] ]
[ mov rdx,  [ addr ]  ]
[ cmp rax, rdx ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ cmovz rax, rdx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac674c81
#function name: 
#func_id: 0
===========================================================
[ add r14, r15 ]
[ mov qword ptr [r14], rax ]
[ add rbx,  [ argument ]  ]
[ cmp rbx, r12 ]
[ jbe  [ addr ]  ]
[ mov r11, r13 ]
[ add qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ cmp rax, qword ptr [rbp- [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ mov r15, r11 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac674c81
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
[ nop edx, edi ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ test byte ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ cmovnz rax, rdx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac674c81
#function name: 
#func_id: 0
===========================================================
[ add r14, r15 ]
[ mov qword ptr [r14], rax ]
[ add rbx,  [ argument ]  ]
[ cmp rbx, r12 ]
[ jbe  [ addr ]  ]
[ mov r11, r13 ]
[ add qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ cmp rax, qword ptr [rbp- [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ mov r15, r11 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac674c81
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
[ nop edx, edi ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ test byte ptr [rdx  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov ecx, dword ptr [rdx  +  [ displacement ] ] ]
[ test ecx,  [ addr ]  ]
[ jz  [ addr ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ test byte ptr [rdx  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5eac674c81
#function name: 
#func_id: 0
===========================================================
[ add r14, r15 ]
[ mov qword ptr [r14], rax ]
[ add rbx,  [ argument ]  ]
[ cmp rbx, r12 ]
[ jbe  [ addr ]  ]
[ mov r11, r13 ]
[ add qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ cmp rax, qword ptr [rbp- [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ mov r15, r11 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac674c81
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
RET========================================================
#ret target: 7f5eac674c81
#function name: 
#func_id: 0
===========================================================
CALL===========================================================
#now call addr: 7f5eac674c81
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
[ nop edx, edi ]
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov rdx,  [ addr ]  ]
[ mov rsi,  [ addr ]  ]
[ and rdx, qword ptr [rcx  +  [ displacement ] ] ]
[ cmp rdx, rsi ]
[ jz  [ addr ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ test byte ptr [rcx  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ test byte ptr [rcx  +  [ displacement ] ],  [ argument ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ cmovnz rax, rdx ]
[ ret  ]
[ ret  ]
RET========================================================
#ret target: 7f5eac674c81
#function name: 
#func_id: 0
===========================================================
[ add r14, r15 ]
[ mov qword ptr [r14], rax ]
[ add rbx,  [ argument ]  ]
[ cmp rbx, r12 ]
[ jbe  [ addr ]  ]
[ mov r11, r13 ]
[ add qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ cmp rax, qword ptr [rbp- [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ mov r15, r11 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac674c81
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
[ nop edx, edi ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov ecx, dword ptr [rdx  +  [ displacement ] ] ]
[ test ch,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax,  [ addr ]  ]
[ and rax, qword ptr [rdx  +  [ displacement ] ] ]
[ cmp rax,  [ argument ]  ]
[ jz  [ addr ]  ]
[ test ch,  [ argument ]  ]
[ jz  [ addr ]  ]
[ test byte ptr [rdx  +  [ displacement ] ],  [ argument ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ cmovz rax, rdx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac674c81
#function name: 
#func_id: 0
===========================================================
[ add r14, r15 ]
[ mov qword ptr [r14], rax ]
[ add rbx,  [ argument ]  ]
[ cmp rbx, r12 ]
[ jbe  [ addr ]  ]
[ mov r11, r13 ]
[ add qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ cmp rax, qword ptr [rbp- [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ mov r15, r11 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac674c81
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
[ nop edx, edi ]
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov rdx,  [ addr ]  ]
[ mov rsi,  [ addr ]  ]
[ and rdx, qword ptr [rcx  +  [ displacement ] ] ]
[ cmp rdx, rsi ]
[ jz  [ addr ]  ]
[ test byte ptr [rcx  +  [ displacement ] ],  [ argument ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ cmovnz rax, rdx ]
[ ret  ]
[ ret  ]
RET========================================================
#ret target: 7f5eac674c81
#function name: 
#func_id: 0
===========================================================
[ add r14, r15 ]
[ mov qword ptr [r14], rax ]
[ add rbx,  [ argument ]  ]
[ cmp rbx, r12 ]
[ jbe  [ addr ]  ]
[ mov r11, r13 ]
[ add qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ cmp rax, qword ptr [rbp- [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ mov r15, r11 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac674c81
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
[ nop edx, edi ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ lea r8, ptr [rip- [ displacement ] ] ]
[ mov rcx,  [ addr ]  ]
[ mov rdx, qword ptr [rax  +  [ displacement ] ] ]
[ mov rax,  [ addr ]  ]
[ and rax, rdx ]
[ cmp rax, rcx ]
[ jnz  [ addr ]  ]
[ mov rax,  [ addr ]  ]
[ lea r8, ptr [rip  +  [ displacement ] ] ]
[ and rdx, rax ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ cmp rdx,  [ argument ]  ]
[ cmovnz r8, rax ]
[ mov rax, r8 ]
[ ret  ]
RET========================================================
#ret target: 7f5eac674c81
#function name: 
#func_id: 0
===========================================================
[ add r14, r15 ]
[ mov qword ptr [r14], rax ]
[ add rbx,  [ argument ]  ]
[ cmp rbx, r12 ]
[ jbe  [ addr ]  ]
[ mov r11, r13 ]
[ add qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ cmp rax, qword ptr [rbp- [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ mov r15, r11 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac674c81
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
RET========================================================
#ret target: 7f5eac674c81
#function name: 
#func_id: 0
===========================================================
CALL===========================================================
#now call addr: 7f5eac674c81
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
[ nop edx, edi ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ test byte ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ cmovnz rax, rdx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac674c81
#function name: 
#func_id: 0
===========================================================
[ add r14, r15 ]
[ mov qword ptr [r14], rax ]
[ add rbx,  [ argument ]  ]
[ cmp rbx, r12 ]
[ jbe  [ addr ]  ]
[ mov r11, r13 ]
[ add qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ cmp rax, qword ptr [rbp- [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ mov r15, r11 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac674c81
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
[ nop edx, edi ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ test byte ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ cmovnz rax, rdx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac674c81
#function name: 
#func_id: 0
===========================================================
[ add r14, r15 ]
[ mov qword ptr [r14], rax ]
[ add rbx,  [ argument ]  ]
[ cmp rbx, r12 ]
[ jbe  [ addr ]  ]
[ mov r11, r13 ]
[ add qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ cmp rax, qword ptr [rbp- [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ mov r15, r11 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac674c81
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
[ nop edx, edi ]
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov rdx,  [ addr ]  ]
[ mov rsi,  [ addr ]  ]
[ and rdx, qword ptr [rcx  +  [ displacement ] ] ]
[ cmp rdx, rsi ]
[ jz  [ addr ]  ]
[ test byte ptr [rcx  +  [ displacement ] ],  [ argument ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ cmovnz rax, rdx ]
[ ret  ]
[ ret  ]
RET========================================================
#ret target: 7f5eac674c81
#function name: 
#func_id: 0
===========================================================
[ add r14, r15 ]
[ mov qword ptr [r14], rax ]
[ add rbx,  [ argument ]  ]
[ cmp rbx, r12 ]
[ jbe  [ addr ]  ]
[ mov r11, r13 ]
[ add qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ cmp rax, qword ptr [rbp- [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ mov r15, r11 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac674c81
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
[ nop edx, edi ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax,  [ addr ]  ]
[ and rax, qword ptr [rdx  +  [ displacement ] ] ]
[ mov rdx,  [ addr ]  ]
[ cmp rax, rdx ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ cmovz rax, rdx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac674c81
#function name: 
#func_id: 0
===========================================================
[ add r14, r15 ]
[ mov qword ptr [r14], rax ]
[ add rbx,  [ argument ]  ]
[ cmp rbx, r12 ]
[ jbe  [ addr ]  ]
[ mov r11, r13 ]
[ add qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ cmp rax, qword ptr [rbp- [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ mov r15, r11 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac674c81
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
[ nop edx, edi ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax,  [ addr ]  ]
[ and rax, qword ptr [rdx  +  [ displacement ] ] ]
[ mov rdx,  [ addr ]  ]
[ cmp rax, rdx ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ cmovz rax, rdx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac674c81
#function name: 
#func_id: 0
===========================================================
[ add r14, r15 ]
[ mov qword ptr [r14], rax ]
[ add rbx,  [ argument ]  ]
[ cmp rbx, r12 ]
[ jbe  [ addr ]  ]
[ mov r11, r13 ]
[ add qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ cmp rax, qword ptr [rbp- [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ mov r15, r11 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac674c81
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
[ nop edx, edi ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ test byte ptr [rdx  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov ecx, dword ptr [rdx  +  [ displacement ] ] ]
[ test ecx,  [ addr ]  ]
[ jz  [ addr ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ test byte ptr [rdx  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5eac674c81
#function name: 
#func_id: 0
===========================================================
[ add r14, r15 ]
[ mov qword ptr [r14], rax ]
[ add rbx,  [ argument ]  ]
[ cmp rbx, r12 ]
[ jbe  [ addr ]  ]
[ mov r11, r13 ]
[ add qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ cmp rax, qword ptr [rbp- [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ mov r15, r11 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac674c81
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
[ nop edx, edi ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax,  [ addr ]  ]
[ and rax, qword ptr [rdx  +  [ displacement ] ] ]
[ mov rdx,  [ addr ]  ]
[ cmp rax, rdx ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ cmovz rax, rdx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac674c81
#function name: 
#func_id: 0
===========================================================
[ add r14, r15 ]
[ mov qword ptr [r14], rax ]
[ add rbx,  [ argument ]  ]
[ cmp rbx, r12 ]
[ jbe  [ addr ]  ]
[ mov r11, r13 ]
[ add qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ cmp rax, qword ptr [rbp- [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ mov r15, r11 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac674c81
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
[ nop edx, edi ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax,  [ addr ]  ]
[ and rax, qword ptr [rdx  +  [ displacement ] ] ]
[ mov rdx,  [ addr ]  ]
[ cmp rax, rdx ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ cmovz rax, rdx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac674c81
#function name: 
#func_id: 0
===========================================================
[ add r14, r15 ]
[ mov qword ptr [r14], rax ]
[ add rbx,  [ argument ]  ]
[ cmp rbx, r12 ]
[ jbe  [ addr ]  ]
[ mov r11, r13 ]
[ add qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ cmp rax, qword ptr [rbp- [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ mov r15, r11 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac674c81
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
[ nop edx, edi ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ test byte ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ cmovnz rax, rdx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac674c81
#function name: 
#func_id: 0
===========================================================
[ add r14, r15 ]
[ mov qword ptr [r14], rax ]
[ add rbx,  [ argument ]  ]
[ cmp rbx, r12 ]
[ jbe  [ addr ]  ]
[ mov r11, r13 ]
[ add qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ cmp rax, qword ptr [rbp- [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ mov r15, r11 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac674c81
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
[ nop edx, edi ]
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov rdx,  [ addr ]  ]
[ mov rsi,  [ addr ]  ]
[ and rdx, qword ptr [rcx  +  [ displacement ] ] ]
[ cmp rdx, rsi ]
[ jz  [ addr ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ test byte ptr [rcx  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ test byte ptr [rcx  +  [ displacement ] ],  [ argument ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ cmovnz rax, rdx ]
[ ret  ]
[ ret  ]
RET========================================================
#ret target: 7f5eac674c81
#function name: 
#func_id: 0
===========================================================
[ add r14, r15 ]
[ mov qword ptr [r14], rax ]
[ add rbx,  [ argument ]  ]
[ cmp rbx, r12 ]
[ jbe  [ addr ]  ]
[ mov r11, r13 ]
[ add qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ cmp rax, qword ptr [rbp- [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ mov r15, r11 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac674c81
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
[ nop edx, edi ]
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov rdx,  [ addr ]  ]
[ mov rsi,  [ addr ]  ]
[ and rdx, qword ptr [rcx  +  [ displacement ] ] ]
[ cmp rdx, rsi ]
[ jz  [ addr ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ test byte ptr [rcx  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ test byte ptr [rcx  +  [ displacement ] ],  [ argument ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ cmovnz rax, rdx ]
[ ret  ]
[ ret  ]
RET========================================================
#ret target: 7f5eac674c81
#function name: 
#func_id: 0
===========================================================
[ add r14, r15 ]
[ mov qword ptr [r14], rax ]
[ add rbx,  [ argument ]  ]
[ cmp rbx, r12 ]
[ jbe  [ addr ]  ]
[ mov r11, r13 ]
[ add qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ cmp rax, qword ptr [rbp- [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ mov r15, r11 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac674c81
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
[ nop edx, edi ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax,  [ addr ]  ]
[ and rax, qword ptr [rdx  +  [ displacement ] ] ]
[ mov ecx, dword ptr [rdx  +  [ displacement ] ] ]
[ cmp rax,  [ argument ]  ]
[ jz  [ addr ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ test ecx,  [ addr ]  ]
[ jnz  [ addr ]  ]
[ and ch,  [ argument ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ cmovnz rax, rdx ]
[ ret  ]
[ test ecx,  [ addr ]  ]
[ jz  [ addr ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ test byte ptr [rdx  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5eac674c81
#function name: 
#func_id: 0
===========================================================
[ add r14, r15 ]
[ mov qword ptr [r14], rax ]
[ add rbx,  [ argument ]  ]
[ cmp rbx, r12 ]
[ jbe  [ addr ]  ]
[ mov r11, r13 ]
[ add qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ cmp rax, qword ptr [rbp- [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ mov r15, r11 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac674c81
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
[ nop edx, edi ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax,  [ addr ]  ]
[ and rax, qword ptr [rdx  +  [ displacement ] ] ]
[ mov rdx,  [ addr ]  ]
[ cmp rax, rdx ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ cmovz rax, rdx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac674c81
#function name: 
#func_id: 0
===========================================================
[ add r14, r15 ]
[ mov qword ptr [r14], rax ]
[ add rbx,  [ argument ]  ]
[ cmp rbx, r12 ]
[ jbe  [ addr ]  ]
[ mov r11, r13 ]
[ add qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ cmp rax, qword ptr [rbp- [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ mov r15, r11 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac674c81
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
[ nop edx, edi ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ test byte ptr [rdx  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov ecx, dword ptr [rdx  +  [ displacement ] ] ]
[ test ecx,  [ addr ]  ]
[ jz  [ addr ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ test byte ptr [rdx  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5eac674c81
#function name: 
#func_id: 0
===========================================================
[ add r14, r15 ]
[ mov qword ptr [r14], rax ]
[ add rbx,  [ argument ]  ]
[ cmp rbx, r12 ]
[ jbe  [ addr ]  ]
[ mov r11, r13 ]
[ add qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ cmp rax, qword ptr [rbp- [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ mov r15, r11 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac674c81
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
RET========================================================
#ret target: 7f5eac674c81
#function name: 
#func_id: 0
===========================================================
CALL===========================================================
#now call addr: 7f5eac674c81
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
RET========================================================
#ret target: 7f5eac674c81
#function name: 
#func_id: 0
===========================================================
CALL===========================================================
#now call addr: 7f5eac674c81
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
[ nop edx, edi ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov ecx, dword ptr [rdx  +  [ displacement ] ] ]
[ test ch,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax,  [ addr ]  ]
[ and rax, qword ptr [rdx  +  [ displacement ] ] ]
[ cmp rax,  [ argument ]  ]
[ jz  [ addr ]  ]
[ test ch,  [ argument ]  ]
[ jz  [ addr ]  ]
RET========================================================
#ret target: 7f5eac674c81
#function name: 
#func_id: 0
===========================================================
[ or byte ptr [r15  +  [ displacement ] ],  [ argument ]  ]
[ cmp qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ lea rsp, ptr [rbp- [ displacement ] ] ]
[ pop rbx ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ pop rbp ]
[ ret  ]
[ mov rsi, qword ptr [rip  +  [ displacement ] ] ]
[ mov rdx, qword ptr [r15  +  [ displacement ] ] ]
[ add rdx, qword ptr [r15] ]
[ neg rsi ]
[ mov rdi, rdx ]
[ add rax, rdx ]
[ and rdi, rsi ]
[ and rax, rsi ]
[ cmp rdi, rax ]
[ jz  [ addr ]  ]
[ sub rax, rdi ]
[ mov edx,  [ argument ]  ]
[ mov rsi, rax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac675794
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
RET========================================================
#ret target: 7f5eac675794
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ test eax, eax ]
[ jns  [ addr ]  ]
[ mov rsi, qword ptr [r15  +  [ displacement ] ] ]
[ mov edi, dword ptr [rip  +  [ displacement ] ] ]
[ lea rcx, ptr [rip  +  [ displacement ] ] ]
[ xor edx, edx ]
[ call  [ addr.func ]  ]
[ lea rsp, ptr [rbp- [ displacement ] ] ]
[ pop rbx ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ pop rbp ]
[ ret  ]
[ cmp qword ptr [r13  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov esi,  [ argument ]  ]
[ mov rdi, r13 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66b545
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
[ nop edx, edi ]
[ push r13 ]
[ mov r13d, esi ]
[ push r12 ]
[ mov r12, rdi ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov rbp, qword ptr [rdi  +  [ displacement ] ] ]
[ mov rbx, qword ptr [rip  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [rbx] ]
[ cmp rax, rbp ]
[ jbe  [ addr ]  ]
[ test r13b, r13b ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ shl rbp,  [ argument ]  ]
[ add rbx, rbp ]
[ add rax,  [ argument ]  ]
[ mov qword ptr [rbx  +  [ displacement ] ], r12 ]
[ mov qword ptr [rbx  +  [ displacement ] ], rax ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ ret  ]
RET========================================================
#ret target: 7f5eac66b545
#function name: _dl_deallocate_tls
#func_id: 23
===========================================================
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac66b525
#call parent addr: 7f5eac672885
#root size: 562
===============================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac66b525
#root size: 563
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 564
===============================================================
RET========================================================
#ret target: 7f5eac6731e4
#function name: _dl_rtld_di_serinfo
#func_id: 17
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac674f0f
#root size: 564
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 565
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 566
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 567
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 567
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 567
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 568
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 569
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 570
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 570
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 570
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 571
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 572
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 573
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 573
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 573
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 574
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 575
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 576
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 576
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 576
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 577
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 578
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 579
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 579
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 579
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 580
===============================================================
RET========================================================
#ret target: 7f5eac6731e4
#function name: _dl_rtld_di_serinfo
#func_id: 17
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac674f0f
#root size: 580
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 581
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 582
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 583
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 583
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 583
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 584
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 585
===============================================================
RET========================================================
#ret target: 7f5eac672885
#function name: _dl_rtld_di_serinfo
#func_id: 17
===========================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 585
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 586
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 586
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ lea rsp, ptr [rbp- [ displacement ] ] ]
[ pop rbx ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ pop rbp ]
[ ret  ]
CALL===========================================================
#now call addr: 7f5eac675794
#call parent addr: 7f5eac672885
#root size: 586
===============================================================
RET========================================================
#ret target: 7f5eac675794
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66b525
#call parent addr: 7f5eac672885
#root size: 586
===============================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac66b525
#root size: 587
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 588
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 589
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 590
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 590
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 591
===============================================================
RET========================================================
#ret target: 7f5eac6731e4
#function name: _dl_rtld_di_serinfo
#func_id: 17
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac674f0f
#root size: 591
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 592
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 593
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 594
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 594
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 595
===============================================================
RET========================================================
#ret target: 7f5eac6731e4
#function name: _dl_rtld_di_serinfo
#func_id: 17
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac674f0f
#root size: 595
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 596
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 597
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 598
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 598
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 598
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 599
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 600
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 601
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 601
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 602
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 603
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 604
===============================================================
[ add rcx,  [ argument ]  ]
[ movdqa xmm3, xmm4 ]
[ add r10,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ movdqa xmm1, xmmword ptr [rsi + rcx * 1] ]
[ movdqa xmm2, xmmword ptr [rdi + rcx * 1] ]
[ movdqa xmm4, xmm2 ]
[ psrldq xmm3,  [ argument ]  ]
[ pslldq xmm2,  [ argument ]  ]
[ por xmm2, xmm3 ]
[ pcmpeqb xmm0, xmm1 ]
[ pcmpeqb xmm1, xmm2 ]
[ psubb xmm1, xmm0 ]
[ pmovmskb edx, xmm1 ]
[ sub edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ add rcx,  [ argument ]  ]
[ movdqa xmm3, xmm4 ]
[ jmp  [ addr ]  ]
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 604
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 604
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 605
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 606
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 607
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 607
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 607
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 608
===============================================================
RET========================================================
#ret target: 7f5eac6731e4
#function name: _dl_rtld_di_serinfo
#func_id: 17
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac674f0f
#root size: 608
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 609
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 610
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 611
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 611
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 612
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 613
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 614
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 614
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 614
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 615
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 616
===============================================================
RET========================================================
#ret target: 7f5eac672885
#function name: _dl_rtld_di_serinfo
#func_id: 17
===========================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 616
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 617
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 617
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac675794
#call parent addr: 7f5eac672885
#root size: 617
===============================================================
RET========================================================
#ret target: 7f5eac675794
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66b525
#call parent addr: 7f5eac672885
#root size: 617
===============================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac66b525
#root size: 618
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 619
===============================================================
RET========================================================
#ret target: 7f5eac6731e4
#function name: _dl_rtld_di_serinfo
#func_id: 17
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac674f0f
#root size: 619
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 620
===============================================================
RET========================================================
#ret target: 7f5eac6731e4
#function name: _dl_rtld_di_serinfo
#func_id: 17
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac674f0f
#root size: 620
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 621
===============================================================
RET========================================================
#ret target: 7f5eac6731e4
#function name: _dl_rtld_di_serinfo
#func_id: 17
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac674f0f
#root size: 621
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 622
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 623
===============================================================
RET========================================================
#ret target: 7f5eac672885
#function name: _dl_rtld_di_serinfo
#func_id: 17
===========================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 623
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 624
===============================================================
[ pxor xmm0, xmm0 ]
[ movdqa xmm2, xmmword ptr [rdi] ]
[ movdqa xmm1, xmmword ptr [rsi] ]
[ pcmpeqb xmm0, xmm1 ]
[ pslldq xmm2,  [ argument ]  ]
[ pcmpeqb xmm2, xmm1 ]
[ psubb xmm2, xmm0 ]
[ pmovmskb r9d, xmm2 ]
[ shr edx, cl ]
[ shr r9d, cl ]
[ sub edx, r9d ]
[ jnz  [ addr ]  ]
[ movdqa xmm3, xmmword ptr [rdi] ]
[ pxor xmm0, xmm0 ]
[ mov rcx,  [ argument ]  ]
[ mov r9d,  [ argument ]  ]
[ lea r10, ptr [rdi  +  [ displacement ] ] ]
[ and r10,  [ argument ]  ]
[ sub r10,  [ argument ]  ]
[ nop word ptr [rax + rax * 1], ax ]
[ add r10,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ movdqa xmm1, xmmword ptr [rsi + rcx * 1] ]
[ movdqa xmm2, xmmword ptr [rdi + rcx * 1] ]
[ movdqa xmm4, xmm2 ]
[ psrldq xmm3,  [ argument ]  ]
[ pslldq xmm2,  [ argument ]  ]
[ por xmm2, xmm3 ]
[ pcmpeqb xmm0, xmm1 ]
[ pcmpeqb xmm1, xmm2 ]
[ psubb xmm1, xmm0 ]
[ pmovmskb edx, xmm1 ]
[ sub edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 624
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac675794
#call parent addr: 7f5eac672885
#root size: 624
===============================================================
RET========================================================
#ret target: 7f5eac675794
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66b525
#call parent addr: 7f5eac672885
#root size: 624
===============================================================
[ test r11, r11 ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [r11  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rbp- [ displacement ] ] ]
[ mov qword ptr [rsi], rax ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac66b525
#root size: 625
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 626
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 627
===============================================================
RET========================================================
#ret target: 7f5eac672885
#function name: _dl_rtld_di_serinfo
#func_id: 17
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac6731e4
#root size: 627
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 628
===============================================================
RET========================================================
#ret target: 7f5eac6731e4
#function name: _dl_rtld_di_serinfo
#func_id: 17
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac674f0f
#root size: 628
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 629
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 630
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 631
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 631
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 631
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 632
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 633
===============================================================
RET========================================================
#ret target: 7f5eac672885
#function name: _dl_rtld_di_serinfo
#func_id: 17
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac6731e4
#root size: 633
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 634
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 635
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 636
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 636
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 636
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 637
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 638
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 639
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 639
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 639
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 640
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 641
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 642
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 642
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 642
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 643
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 644
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 645
===============================================================
[ add rcx,  [ argument ]  ]
[ movdqa xmm3, xmm4 ]
[ add r10,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ movdqa xmm1, xmmword ptr [rsi + rcx * 1] ]
[ movdqa xmm2, xmmword ptr [rdi + rcx * 1] ]
[ movdqa xmm4, xmm2 ]
[ psrldq xmm3,  [ argument ]  ]
[ pslldq xmm2,  [ argument ]  ]
[ por xmm2, xmm3 ]
[ pcmpeqb xmm0, xmm1 ]
[ pcmpeqb xmm1, xmm2 ]
[ psubb xmm1, xmm0 ]
[ pmovmskb edx, xmm1 ]
[ sub edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ add rcx,  [ argument ]  ]
[ movdqa xmm3, xmm4 ]
[ jmp  [ addr ]  ]
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 645
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 646
===============================================================
RET========================================================
#ret target: 7f5eac6731e4
#function name: _dl_rtld_di_serinfo
#func_id: 17
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac674f0f
#root size: 646
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 647
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 648
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 649
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 649
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 650
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 651
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 652
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 652
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 652
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 653
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 654
===============================================================
RET========================================================
#ret target: 7f5eac672885
#function name: _dl_rtld_di_serinfo
#func_id: 17
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac6731e4
#root size: 654
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 655
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 656
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 657
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 657
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 658
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 659
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 660
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 660
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 661
===============================================================
RET========================================================
#ret target: 7f5eac6731e4
#function name: _dl_rtld_di_serinfo
#func_id: 17
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac674f0f
#root size: 661
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 662
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 663
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 664
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 664
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 664
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 665
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 666
===============================================================
RET========================================================
#ret target: 7f5eac672885
#function name: _dl_rtld_di_serinfo
#func_id: 17
===========================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 666
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 667
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 667
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 667
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 668
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 669
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 670
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 670
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 670
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 671
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 672
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 673
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 673
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac675794
#call parent addr: 7f5eac672885
#root size: 673
===============================================================
RET========================================================
#ret target: 7f5eac675794
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac66b545
#call parent addr: 7f5eac672885
#root size: 673
===============================================================
RET========================================================
#ret target: 7f5eac66b545
#function name: _dl_deallocate_tls
#func_id: 23
===========================================================
CALL===========================================================
#now call addr: 7f5eac66b525
#call parent addr: 7f5eac672885
#root size: 673
===============================================================
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ cmp qword ptr [r15  +  [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ jz  [ addr ]  ]
[ test r13d, r13d ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ pxor xmm0, xmm0 ]
[ movaps xmmword ptr [rbp- [ displacement ] ], xmm0 ]
[ movaps xmmword ptr [rbp- [ displacement ] ], xmm0 ]
[ movaps xmmword ptr [rbp- [ displacement ] ], xmm0 ]
[ movaps xmmword ptr [rbp- [ displacement ] ], xmm0 ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rcx, qword ptr [rax  +  [ displacement ] ] ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rax  +  [ displacement ] ] ]
[ movq xmm0, rcx ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ movq xmm1, rdx ]
[ lea rdi, ptr [rcx + rdx * 1] ]
[ punpcklqdq xmm0, xmm1 ]
[ movaps xmmword ptr [rbp- [ displacement ] ], xmm0 ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ cmp qword ptr [r15  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ mov rsi, qword ptr [r15  +  [ displacement ] ] ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rsi  +  [ displacement ] ] ]
[ lea r8, ptr [rax + rsi * 1] ]
[ cmp r8, rdi ]
[ jnz  [ addr ]  ]
[ sub rdx, rsi ]
[ mov qword ptr [rbp- [ displacement ] ], rdx ]
[ lea rdi, ptr [rdx + rcx * 1] ]
[ test r13d, r13d ]
[ jnz  [ addr ]  ]
[ cmp rax, rdi ]
[ jz  [ addr ]  ]
[ add rdx, rsi ]
[ mov qword ptr [rbp- [ displacement ] ], rdx ]
[ jmp  [ addr ]  ]
[ lea rax, ptr [rbp- [ displacement ] ] ]
[ and ebx,  [ addr ]  ]
[ mov r11, r15 ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ lea rax, ptr [rbp- [ displacement ] ] ]
[ mov dword ptr [rbp- [ displacement ] ], ebx ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov rdi, qword ptr [rbp- [ displacement ] ] ]
[ mov r15, qword ptr [r11] ]
[ mov rax, qword ptr [rdi] ]
[ mov rsi, qword ptr [rdi  +  [ displacement ] ] ]
[ mov r8d, dword ptr [rdi  +  [ displacement ] ] ]
[ add rsi, rax ]
[ mov qword ptr [rbp- [ displacement ] ], rsi ]
[ test r8d, r8d ]
[ jz  [ addr ]  ]
[ xor r12d, r12d ]
[ xor ebx, ebx ]
[ mov rdi, rsi ]
[ cmp rax, rsi ]
[ jb  [ addr ]  ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac66b525
#root size: 674
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 675
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 676
===============================================================
RET========================================================
#ret target: 7f5eac672885
#function name: _dl_rtld_di_serinfo
#func_id: 17
===========================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 676
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 677
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 677
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 677
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 678
===============================================================
RET========================================================
#ret target: 7f5eac6731e4
#function name: _dl_rtld_di_serinfo
#func_id: 17
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac674f0f
#root size: 678
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 679
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 680
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 681
===============================================================
[ add rcx,  [ argument ]  ]
[ movdqa xmm3, xmm4 ]
[ add r10,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ movdqa xmm1, xmmword ptr [rsi + rcx * 1] ]
[ movdqa xmm2, xmmword ptr [rdi + rcx * 1] ]
[ movdqa xmm4, xmm2 ]
[ psrldq xmm3,  [ argument ]  ]
[ pslldq xmm2,  [ argument ]  ]
[ por xmm2, xmm3 ]
[ pcmpeqb xmm0, xmm1 ]
[ pcmpeqb xmm1, xmm2 ]
[ psubb xmm1, xmm0 ]
[ pmovmskb edx, xmm1 ]
[ sub edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ add rcx,  [ argument ]  ]
[ movdqa xmm3, xmm4 ]
[ jmp  [ addr ]  ]
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 681
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 681
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 682
===============================================================
RET========================================================
#ret target: 7f5eac6731e4
#function name: _dl_rtld_di_serinfo
#func_id: 17
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac674f0f
#root size: 682
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 683
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 684
===============================================================
RET========================================================
#ret target: 7f5eac672885
#function name: _dl_rtld_di_serinfo
#func_id: 17
===========================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 684
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 685
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 685
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 685
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 686
===============================================================
RET========================================================
#ret target: 7f5eac6731e4
#function name: _dl_rtld_di_serinfo
#func_id: 17
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac674f0f
#root size: 686
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 687
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 688
===============================================================
RET========================================================
#ret target: 7f5eac672885
#function name: _dl_rtld_di_serinfo
#func_id: 17
===========================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 688
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 689
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 689
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ or r9d,  [ argument ]  ]
[ jmp  [ addr ]  ]
[ and esi,  [ argument ]  ]
[ mov dword ptr [r15  +  [ displacement ] ], r9d ]
[ lea rax, ptr [rsi + rsi * 2] ]
[ mov qword ptr [r15  +  [ displacement ] ], r14 ]
[ lea r8, ptr [rdi + rax * 8] ]
[ test r8, r8 ]
[ jz  [ addr ]  ]
[ mov ecx, dword ptr [r8  +  [ displacement ] ] ]
[ mov eax,  [ argument ]  ]
[ test ecx, ecx ]
[ cmovz r8, rax ]
[ mov edi, dword ptr [r14] ]
[ push  [ argument ]  ]
[ lea rdx, ptr [rbp- [ displacement ] ] ]
[ mov rsi, r15 ]
[ mov rcx, qword ptr [rbp- [ displacement ] ] ]
[ add rdi, qword ptr [rbp- [ displacement ] ] ]
[ push  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 689
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 690
===============================================================
[ test byte ptr [rbx  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ test byte ptr [rbx  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ test byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 691
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 692
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 692
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov r12, qword ptr [rbp- [ displacement ] ] ]
[ test r12, r12 ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [r12  +  [ displacement ] ] ]
[ mov rdi, qword ptr [rbp- [ displacement ] ] ]
[ mov rsi, r10 ]
[ cmp qword ptr [r14  +  [ displacement ] ], rdx ]
[ cmovbe rdx, qword ptr [r14  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac675215
#call parent addr: 7f5eac672885
#root size: 692
===============================================================
RET========================================================
#ret target: 7f5eac675215
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov rax, qword ptr [r14  +  [ displacement ] ] ]
[ cmp qword ptr [r12  +  [ displacement ] ], rax ]
[ jnbe  [ addr ]  ]
[ jnb  [ addr ]  ]
[ mov r12d, dword ptr [rip  +  [ displacement ] ] ]
[ test r12d, r12d ]
[ jz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 692
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 693
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 694
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 695
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 695
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac675215
#call parent addr: 7f5eac672885
#root size: 695
===============================================================
RET========================================================
#ret target: 7f5eac675215
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 695
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 696
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 697
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 698
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 698
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac675215
#call parent addr: 7f5eac672885
#root size: 698
===============================================================
RET========================================================
#ret target: 7f5eac675215
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov rax, qword ptr [r14  +  [ displacement ] ] ]
[ cmp qword ptr [r12  +  [ displacement ] ], rax ]
[ jnbe  [ addr ]  ]
[ jnb  [ addr ]  ]
[ mov r12d, dword ptr [rip  +  [ displacement ] ] ]
[ test r12d, r12d ]
[ jz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 698
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 699
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 700
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 701
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 701
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac675215
#call parent addr: 7f5eac672885
#root size: 701
===============================================================
RET========================================================
#ret target: 7f5eac675215
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 701
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 702
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 703
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 704
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 704
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac675215
#call parent addr: 7f5eac672885
#root size: 704
===============================================================
RET========================================================
#ret target: 7f5eac675215
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 704
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 705
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 706
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 707
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 707
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac675215
#call parent addr: 7f5eac672885
#root size: 707
===============================================================
RET========================================================
#ret target: 7f5eac675215
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov r9d,  [ argument ]  ]
[ cmp r12,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ or r9d,  [ argument ]  ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 707
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 708
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 709
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 710
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 710
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 710
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 711
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 712
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 713
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 713
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 713
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 714
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 715
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 716
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 716
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 716
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 717
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 718
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 719
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 719
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 719
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 720
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 721
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 722
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 722
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 722
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 723
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 724
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 725
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 725
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 725
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 726
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 727
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 728
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 728
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 728
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 729
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 730
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 731
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 731
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ cmp r15, r11 ]
[ jz  [ addr ]  ]
[ movzx eax, byte ptr [r11  +  [ displacement ] ] ]
[ test al,  [ argument ]  ]
[ jz  [ addr ]  ]
[ test al,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov qword ptr [rbp- [ displacement ] ], r11 ]
[ call r10 ]
CALL===========================================================
#now call addr: 7f5eac675557
#call parent addr: 7f5eac672885
#root size: 731
===============================================================
[ nop edx, edi ]
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov rdx,  [ addr ]  ]
[ mov rsi,  [ addr ]  ]
[ and rdx, qword ptr [rcx  +  [ displacement ] ] ]
[ cmp rdx, rsi ]
[ jz  [ addr ]  ]
[ mov edx, dword ptr [rcx  +  [ displacement ] ] ]
[ test edx,  [ addr ]  ]
[ jz  [ addr ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ test byte ptr [rcx  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
RET========================================================
#ret target: 7f5eac675557
#function name: 
#func_id: 0
===========================================================
[ mov r11, qword ptr [rbp- [ displacement ] ] ]
[ mov r10, rax ]
[ cmp r12,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ data16 nop ]
[ xor edx, edx ]
[ mov esi, r13d ]
[ mov rdi, r15 ]
[ call  [ addr.func ]  ]
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ movsxd rax, dword ptr [rsi + r12 * 4] ]
[ add rax, rsi ]
[ jmp rax ]
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 731
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 732
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 733
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 734
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 734
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 734
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 735
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 736
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 737
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 737
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 737
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 738
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 739
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 740
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 740
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac675557
#call parent addr: 7f5eac672885
#root size: 740
===============================================================
[ nop edx, edi ]
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov rdx,  [ addr ]  ]
[ mov rsi,  [ addr ]  ]
[ and rdx, qword ptr [rcx  +  [ displacement ] ] ]
[ cmp rdx, rsi ]
[ jz  [ addr ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ test byte ptr [rcx  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ test byte ptr [rcx  +  [ displacement ] ],  [ argument ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ cmovnz rax, rdx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac675557
#function name: 
#func_id: 0
===========================================================
[ mov r11, qword ptr [rbp- [ displacement ] ] ]
[ mov r10, rax ]
[ cmp r12,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ data16 nop ]
[ xor edx, edx ]
[ mov esi, r13d ]
[ mov rdi, r15 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 740
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 741
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 742
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 743
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 743
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 743
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 744
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 745
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 746
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 746
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 746
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 747
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 748
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 749
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 749
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 749
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 750
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 751
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 752
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 752
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 752
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 753
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 754
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 755
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 755
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 755
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 756
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 757
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 758
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 758
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 758
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 759
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 760
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 761
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 761
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 761
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 762
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 763
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 764
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 764
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 764
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 765
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 766
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 767
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ xor eax, eax ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ ret  ]
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac672885
#root size: 767
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 768
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 768
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 768
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 769
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 770
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 771
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 771
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 771
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 772
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 773
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 774
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 774
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 774
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 775
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 776
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 777
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 777
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 777
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 778
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 779
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 780
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 780
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 780
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 781
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 782
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 783
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 783
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 783
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 784
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 785
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 786
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 786
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 786
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 787
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 788
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 789
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 789
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 789
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 790
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 791
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 792
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 792
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 792
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 793
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 794
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 795
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 795
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac675557
#call parent addr: 7f5eac672885
#root size: 795
===============================================================
[ nop edx, edi ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax,  [ addr ]  ]
[ and rax, qword ptr [rdx  +  [ displacement ] ] ]
[ mov rdx,  [ addr ]  ]
[ cmp rax, rdx ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ cmovz rax, rdx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac675557
#function name: 
#func_id: 0
===========================================================
[ mov r11, qword ptr [rbp- [ displacement ] ] ]
[ mov r10, rax ]
[ cmp r12,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ data16 nop ]
[ xor edx, edx ]
[ mov esi, r13d ]
[ mov rdi, r15 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 795
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 796
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 797
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 798
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 798
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 798
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 799
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 800
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 801
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 801
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 801
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 802
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 803
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 804
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 804
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 804
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 805
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 806
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 807
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 807
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 807
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 808
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 809
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 810
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 810
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac675557
#call parent addr: 7f5eac672885
#root size: 810
===============================================================
[ nop edx, edi ]
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov rdx,  [ addr ]  ]
[ mov rsi,  [ addr ]  ]
[ and rdx, qword ptr [rcx  +  [ displacement ] ] ]
[ cmp rdx, rsi ]
[ jz  [ addr ]  ]
[ test byte ptr [rcx  +  [ displacement ] ],  [ argument ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ cmovnz rax, rdx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac675557
#function name: 
#func_id: 0
===========================================================
[ mov r11, qword ptr [rbp- [ displacement ] ] ]
[ mov r10, rax ]
[ cmp r12,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ data16 nop ]
[ xor edx, edx ]
[ mov esi, r13d ]
[ mov rdi, r15 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 810
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 811
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 812
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 813
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 813
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 813
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 814
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 815
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 816
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 816
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 816
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 817
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 818
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 819
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 819
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 819
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 820
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 821
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 822
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 822
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 822
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 823
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 824
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 825
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 825
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac675557
#call parent addr: 7f5eac672885
#root size: 825
===============================================================
[ nop edx, edi ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax,  [ addr ]  ]
[ and rax, qword ptr [rdx  +  [ displacement ] ] ]
[ mov rdx,  [ addr ]  ]
[ cmp rax, rdx ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ cmovz rax, rdx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac675557
#function name: 
#func_id: 0
===========================================================
[ mov r11, qword ptr [rbp- [ displacement ] ] ]
[ mov r10, rax ]
[ cmp r12,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ data16 nop ]
[ xor edx, edx ]
[ mov esi, r13d ]
[ mov rdi, r15 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 825
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 826
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 827
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 828
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 828
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 829
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 830
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 831
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 831
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 831
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 832
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 833
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 834
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 834
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 834
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 835
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 836
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 837
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 837
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac675557
#call parent addr: 7f5eac672885
#root size: 837
===============================================================
[ nop edx, edi ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rax  +  [ displacement ] ] ]
[ test rsi, rsi ]
[ jz  [ addr ]  ]
[ sub rsp,  [ argument ]  ]
[ pxor xmm0, xmm0 ]
[ xor r9d, r9d ]
[ mov rcx,  [ addr ]  ]
[ lea rdx, ptr [rsp  +  [ displacement ] ] ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rcx ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdi ]
[ lea rcx, ptr [rsi  +  [ displacement ] ] ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdx ]
[ lea rdx, ptr [rsp  +  [ displacement ] ] ]
[ movaps xmmword ptr [rsp  +  [ displacement ] ], xmm0 ]
[ mov qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov byte ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ push  [ argument ]  ]
[ push  [ argument ]  ]
[ lea r8, ptr [rsp  +  [ displacement ] ] ]
[ call qword ptr [rax  +  [ displacement ] ] ]
CALL===========================================================
#now call addr: 7f5e978ec113
#call parent addr: 7f5eac675557
#root size: 838
===============================================================
[ nop edx, edi ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ mov r13, rdi ]
[ push r12 ]
[ mov r12, rdx ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ movzx edx, byte ptr [rdi] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rsi ]
[ mov qword ptr [rsp  +  [ displacement ] ], rcx ]
[ mov qword ptr [rsp  +  [ displacement ] ], r8 ]
[ mov dword ptr [rsp  +  [ displacement ] ], r9d ]
[ test dl, dl ]
[ jz  [ addr ]  ]
[ mov rcx, rdi ]
[ mov eax,  [ argument ]  ]
[ nop word ptr [rax + rax * 1], ax ]
[ mov rsi, rax ]
[ add rcx,  [ argument ]  ]
[ shl rsi,  [ argument ]  ]
[ add rax, rsi ]
[ add rax, rdx ]
[ movzx edx, byte ptr [rcx] ]
[ test dl, dl ]
[ jnz  [ addr ]  ]
[ mov ebx, eax ]
[ add qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov eax,  [ addr ]  ]
[ pxor xmm0, xmm0 ]
[ cmp qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ movaps xmmword ptr [rsp  +  [ displacement ] ], xmm0 ]
[ jz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5e978ec113
#root size: 839
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 840
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 841
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 841
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov rdx, qword ptr [rsp  +  [ displacement ] ] ]
[ pop rcx ]
[ pop rsi ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ cmp word ptr [rdx  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rax] ]
[ add rax, qword ptr [rdx  +  [ displacement ] ] ]
[ lea rdx, ptr [rip- [ displacement ] ] ]
[ cmovz rax, rdx ]
[ add rsp,  [ argument ]  ]
[ ret  ]
[ mov r11, qword ptr [rbp- [ displacement ] ] ]
[ mov r10, rax ]
[ cmp r12,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ data16 nop ]
[ xor edx, edx ]
[ mov esi, r13d ]
[ mov rdi, r15 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 841
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 842
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 843
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 844
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 844
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 844
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 845
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 846
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 847
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 847
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 847
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 848
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 849
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 850
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 850
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 850
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 851
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 852
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 853
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 853
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac675557
#call parent addr: 7f5eac672885
#root size: 853
===============================================================
[ nop edx, edi ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov ecx, dword ptr [rdx  +  [ displacement ] ] ]
[ test ch,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax,  [ addr ]  ]
[ and rax, qword ptr [rdx  +  [ displacement ] ] ]
[ cmp rax,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [rdx  +  [ displacement ] ] ]
[ and eax,  [ argument ]  ]
[ test byte ptr [rdx  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
RET========================================================
#ret target: 7f5eac675557
#function name: 
#func_id: 0
===========================================================
[ mov r11, qword ptr [rbp- [ displacement ] ] ]
[ mov r10, rax ]
[ cmp r12,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ data16 nop ]
[ xor edx, edx ]
[ mov esi, r13d ]
[ mov rdi, r15 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 853
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 854
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 855
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 856
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 856
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 856
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 857
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 858
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 859
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 859
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 859
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 860
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 861
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 862
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 862
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac675557
#call parent addr: 7f5eac672885
#root size: 862
===============================================================
[ nop edx, edi ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ test byte ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ cmovnz rax, rdx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac675557
#function name: 
#func_id: 0
===========================================================
[ mov r11, qword ptr [rbp- [ displacement ] ] ]
[ mov r10, rax ]
[ cmp r12,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ data16 nop ]
[ xor edx, edx ]
[ mov esi, r13d ]
[ mov rdi, r15 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 862
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 863
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 864
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 865
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 865
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 865
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 866
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 867
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 868
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 868
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac675557
#call parent addr: 7f5eac672885
#root size: 868
===============================================================
[ nop edx, edi ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax,  [ addr ]  ]
[ and rax, qword ptr [rdx  +  [ displacement ] ] ]
[ mov ecx, dword ptr [rdx  +  [ displacement ] ] ]
[ cmp rax,  [ argument ]  ]
[ jz  [ addr ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ test ecx,  [ addr ]  ]
[ jnz  [ addr ]  ]
[ and ch,  [ argument ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ cmovnz rax, rdx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac675557
#function name: 
#func_id: 0
===========================================================
[ mov r11, qword ptr [rbp- [ displacement ] ] ]
[ mov r10, rax ]
[ cmp r12,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ data16 nop ]
[ xor edx, edx ]
[ mov esi, r13d ]
[ mov rdi, r15 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 868
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 869
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 870
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 871
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 871
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 871
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 872
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 873
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 874
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 874
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 874
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 875
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 876
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 877
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 877
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 877
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 878
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 879
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 880
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 880
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 881
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 882
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 883
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 883
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac675557
#call parent addr: 7f5eac672885
#root size: 883
===============================================================
[ nop edx, edi ]
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov rdx,  [ addr ]  ]
[ mov rsi,  [ addr ]  ]
[ and rdx, qword ptr [rcx  +  [ displacement ] ] ]
[ cmp rdx, rsi ]
[ jz  [ addr ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ test byte ptr [rcx  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ test byte ptr [rcx  +  [ displacement ] ],  [ argument ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ cmovnz rax, rdx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac675557
#function name: 
#func_id: 0
===========================================================
[ mov r11, qword ptr [rbp- [ displacement ] ] ]
[ mov r10, rax ]
[ cmp r12,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ data16 nop ]
[ xor edx, edx ]
[ mov esi, r13d ]
[ mov rdi, r15 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 883
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 884
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 885
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 886
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 886
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 886
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 887
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 888
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 889
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 889
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 889
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 890
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 891
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 892
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 892
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 892
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 893
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 894
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 895
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 895
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac675557
#call parent addr: 7f5eac672885
#root size: 895
===============================================================
[ nop edx, edi ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip- [ displacement ] ] ]
[ mov ecx, dword ptr [rdx  +  [ displacement ] ] ]
[ test ch,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax,  [ addr ]  ]
[ and rax, qword ptr [rdx  +  [ displacement ] ] ]
[ cmp rax,  [ argument ]  ]
[ jz  [ addr ]  ]
[ test ch,  [ argument ]  ]
[ jz  [ addr ]  ]
[ test byte ptr [rdx  +  [ displacement ] ],  [ argument ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ cmovz rax, rdx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac675557
#function name: 
#func_id: 0
===========================================================
[ mov r11, qword ptr [rbp- [ displacement ] ] ]
[ mov r10, rax ]
[ cmp r12,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ data16 nop ]
[ xor edx, edx ]
[ mov esi, r13d ]
[ mov rdi, r15 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 895
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 896
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 897
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 898
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 898
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 898
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 899
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 900
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 901
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 901
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac675557
#call parent addr: 7f5eac672885
#root size: 901
===============================================================
[ nop edx, edi ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov ecx, dword ptr [rdx  +  [ displacement ] ] ]
[ test ch,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax,  [ addr ]  ]
[ and rax, qword ptr [rdx  +  [ displacement ] ] ]
[ cmp rax,  [ argument ]  ]
[ jz  [ addr ]  ]
[ test ch,  [ argument ]  ]
[ jz  [ addr ]  ]
RET========================================================
#ret target: 7f5eac675557
#function name: 
#func_id: 0
===========================================================
[ mov r11, qword ptr [rbp- [ displacement ] ] ]
[ mov r10, rax ]
[ cmp r12,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ data16 nop ]
[ xor edx, edx ]
[ mov esi, r13d ]
[ mov rdi, r15 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 901
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 902
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 903
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 904
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 904
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 904
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 905
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 906
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 907
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 907
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 908
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 909
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 910
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 910
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 910
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 911
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 912
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 913
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 913
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 913
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 914
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 915
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 916
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 916
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 916
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 917
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 918
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 919
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 919
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 919
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 920
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 921
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 922
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 922
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 922
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 923
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 924
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 925
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 925
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 925
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 926
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 927
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 928
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 928
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 928
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 929
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 930
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 931
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 931
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 931
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 932
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 933
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 934
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 934
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 934
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 935
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 936
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 937
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 937
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 937
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 938
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 939
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 940
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 940
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 940
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 941
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 942
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 943
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 943
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 943
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 944
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 945
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 946
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 946
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 946
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 947
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 948
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 949
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 949
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 949
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 950
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 951
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 952
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 952
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac675557
#call parent addr: 7f5eac672885
#root size: 952
===============================================================
[ nop edx, edi ]
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov rdx,  [ addr ]  ]
[ mov rsi,  [ addr ]  ]
[ and rdx, qword ptr [rcx  +  [ displacement ] ] ]
[ cmp rdx, rsi ]
[ jz  [ addr ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ test byte ptr [rcx  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ test byte ptr [rcx  +  [ displacement ] ],  [ argument ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ cmovnz rax, rdx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac675557
#function name: 
#func_id: 0
===========================================================
[ mov r11, qword ptr [rbp- [ displacement ] ] ]
[ mov r10, rax ]
[ cmp r12,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ data16 nop ]
[ xor edx, edx ]
[ mov esi, r13d ]
[ mov rdi, r15 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 952
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 953
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 954
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 955
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 955
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 955
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 956
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 957
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 958
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 958
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 958
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 959
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 960
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 961
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 961
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 961
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 962
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 963
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 964
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 964
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 964
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 965
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 966
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 967
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 967
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac675557
#call parent addr: 7f5eac672885
#root size: 967
===============================================================
[ nop edx, edi ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov ecx, dword ptr [rdx  +  [ displacement ] ] ]
[ test ch,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax,  [ addr ]  ]
[ and rax, qword ptr [rdx  +  [ displacement ] ] ]
[ cmp rax,  [ argument ]  ]
[ jz  [ addr ]  ]
[ test ch,  [ argument ]  ]
[ jz  [ addr ]  ]
RET========================================================
#ret target: 7f5eac675557
#function name: 
#func_id: 0
===========================================================
[ mov r11, qword ptr [rbp- [ displacement ] ] ]
[ mov r10, rax ]
[ cmp r12,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ data16 nop ]
[ xor edx, edx ]
[ mov esi, r13d ]
[ mov rdi, r15 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 967
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 968
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 969
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 970
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 970
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac675557
#call parent addr: 7f5eac672885
#root size: 970
===============================================================
[ nop edx, edi ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov ecx, dword ptr [rdx  +  [ displacement ] ] ]
[ test ch,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax,  [ addr ]  ]
[ and rax, qword ptr [rdx  +  [ displacement ] ] ]
[ cmp rax,  [ argument ]  ]
[ jz  [ addr ]  ]
[ test ch,  [ argument ]  ]
[ jz  [ addr ]  ]
RET========================================================
#ret target: 7f5eac675557
#function name: 
#func_id: 0
===========================================================
[ mov r11, qword ptr [rbp- [ displacement ] ] ]
[ mov r10, rax ]
[ cmp r12,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ data16 nop ]
[ xor edx, edx ]
[ mov esi, r13d ]
[ mov rdi, r15 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 970
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 971
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 972
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 973
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 973
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 973
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 974
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 975
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 976
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 976
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 976
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 977
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 978
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 979
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 979
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 979
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 980
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 981
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 982
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 982
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 982
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 983
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 984
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 985
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 985
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 985
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 986
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 987
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 988
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 988
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 988
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 989
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 990
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 991
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 991
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 991
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 992
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 993
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 994
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 994
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 995
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 996
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 997
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 997
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 997
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 998
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 999
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 1000
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 1000
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 1000
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 1001
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 1002
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 1003
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 1003
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 1003
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 1004
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 1005
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 1006
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 1006
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 1006
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 1007
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 1008
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 1009
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 1009
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 1009
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 1010
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 1011
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 1012
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 1012
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 1012
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 1013
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 1014
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 1015
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 1015
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 1015
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 1016
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 1017
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 1018
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 1018
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 1018
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 1019
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 1020
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 1021
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 1021
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 1021
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 1022
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 1023
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 1024
===============================================================
[ add rcx,  [ argument ]  ]
[ movdqa xmm3, xmm4 ]
[ add r10,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ movdqa xmm1, xmmword ptr [rsi + rcx * 1] ]
[ movdqa xmm2, xmmword ptr [rdi + rcx * 1] ]
[ movdqa xmm4, xmm2 ]
[ psrldq xmm3,  [ argument ]  ]
[ pslldq xmm2,  [ argument ]  ]
[ por xmm2, xmm3 ]
[ pcmpeqb xmm0, xmm1 ]
[ pcmpeqb xmm1, xmm2 ]
[ psubb xmm1, xmm0 ]
[ pmovmskb edx, xmm1 ]
[ sub edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ add rcx,  [ argument ]  ]
[ movdqa xmm3, xmm4 ]
[ jmp  [ addr ]  ]
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 1024
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 1024
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 1025
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 1026
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 1027
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 1027
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 1027
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 1028
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 1029
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 1030
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 1030
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov r10, qword ptr [r11  +  [ displacement ] ] ]
[ test r10, r10 ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [r10  +  [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ cmp qword ptr [rbp- [ displacement ] ], rbx ]
[ jbe  [ addr ]  ]
[ mov qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rbp- [ displacement ] ], r15 ]
[ mov r15, r11 ]
[ nop word ptr [rax + rax * 1], ax ]
[ mov r13, qword ptr [rbx  +  [ displacement ] ] ]
[ mov r12d, r13d ]
[ cmp r13d,  [ argument ]  ]
[ jz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac675794
#call parent addr: 7f5eac672885
#root size: 1030
===============================================================
RET========================================================
#ret target: 7f5eac675794
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ rdtsc  ]
[ shl rdx,  [ argument ]  ]
[ or rax, rdx ]
[ sub rax, rbx ]
[ cmp qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ jz  [ addr ]  ]
[ call  [ addr.func ]  ]
[ cmp byte ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ call  [ addr.func ]  ]
[ add qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov rbx, qword ptr [rbp- [ displacement ] ] ]
[ mov rdi, rbx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66b699
#call parent addr: 7f5eac672885
#root size: 1030
===============================================================
[ nop edx, edi ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdi ]
[ test rdi, rdi ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rdi  +  [ displacement ] ] ]
[ mov r9, qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rsp], rax ]
[ cmp qword ptr [rax- [ displacement ] ], r9 ]
[ jb  [ addr ]  ]
[ mov r15, qword ptr [rip  +  [ displacement ] ] ]
[ xor r12d, r12d ]
[ xor ebp, ebp ]
[ nop dword ptr [rax], eax ]
[ xor ebx, ebx ]
[ test rbp, rbp ]
[ setz bl ]
[ cmp rbx, qword ptr [r15] ]
[ jb  [ addr ]  ]
[ lea rdi, ptr [rbp + rbx * 1] ]
[ cmp rdi, r9 ]
[ jbe  [ addr ]  ]
[ mov rax, qword ptr [rsp] ]
[ mov qword ptr [rax], r12 ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ mov rdx, rbx ]
[ shl rdx,  [ argument ]  ]
[ mov rax, qword ptr [r15 + rdx * 1 + [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [r15 + rdx * 1 + [ displacement ] ] ]
[ cmp rdx, qword ptr [rip  +  [ displacement ] ] ]
[ jnbe  [ addr ]  ]
[ mov r8, qword ptr [rax  +  [ displacement ] ] ]
[ cmp r12, rdx ]
[ mov rsi, qword ptr [rax  +  [ displacement ] ] ]
[ cmovb r12, rdx ]
[ movdqa xmm0, xmmword ptr [rip  +  [ displacement ] ] ]
[ mov rdx, r8 ]
[ lea r10, ptr [rsi  +  [ displacement ] ] ]
[ shl rdx,  [ argument ]  ]
[ add rdx, qword ptr [rsp] ]
[ movups xmmword ptr [rdx], xmm0 ]
[ cmp r10,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ cmp r8, rdi ]
[ jnz  [ addr ]  ]
[ mov r14, qword ptr [rax  +  [ displacement ] ] ]
[ mov r13, qword ptr [rax  +  [ displacement ] ] ]
[ cmp r14, r13 ]
[ jb  [ addr ]  ]
[ cmp rsi, r14 ]
[ jb  [ addr ]  ]
[ mov rdi, qword ptr [rsp  +  [ displacement ] ] ]
[ sub rdi, rsi ]
[ mov rsi, qword ptr [rax  +  [ displacement ] ] ]
[ mov qword ptr [rdx], rdi ]
[ mov rdx, r13 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac67b86a
#call parent addr: 7f5eac66b699
#root size: 1031
===============================================================
RET========================================================
#ret target: 7f5eac67b86a
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov rdx, r14 ]
[ xor esi, esi ]
[ mov rdi, rax ]
[ sub rdx, r13 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac67b87a
#call parent addr: 7f5eac66b699
#root size: 1031
===============================================================
RET========================================================
#ret target: 7f5eac67b87a
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov r9, qword ptr [rip  +  [ displacement ] ] ]
[ add rbx,  [ argument ]  ]
[ cmp qword ptr [r15], rbx ]
[ jbe  [ addr ]  ]
[ lea rdi, ptr [rbp + rbx * 1] ]
[ cmp rdi, r9 ]
[ jbe  [ addr ]  ]
[ mov rax, qword ptr [rsp] ]
[ mov qword ptr [rax], r12 ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
CALL===========================================================
#now call addr: 7f5eac67b86a
#call parent addr: 7f5eac66b699
#root size: 1031
===============================================================
RET========================================================
#ret target: 7f5eac67b86a
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov rdx, r14 ]
[ xor esi, esi ]
[ mov rdi, rax ]
[ sub rdx, r13 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac67b87a
#call parent addr: 7f5eac66b699
#root size: 1031
===============================================================
RET========================================================
#ret target: 7f5eac67b87a
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov qword ptr [rbx], rbx ]
[ mov rsi, rbx ]
[ mov eax,  [ argument ]  ]
[ mov edi,  [ argument ]  ]
[ mov qword ptr [rbx  +  [ displacement ] ], rbx ]
[ syscall  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ cmp qword ptr [rip  +  [ displacement ] ], rax ]
[ jnz  [ addr ]  ]
[ cmp byte ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ call  [ addr.func ]  ]
[ rdtsc  ]
[ and byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ xor ecx, ecx ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ mov rsi, qword ptr [r15  +  [ displacement ] ] ]
[ mov rbx, rax ]
[ shl rdx,  [ argument ]  ]
[ or rbx, rdx ]
[ xor edx, edx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66bc09
#call parent addr: 7f5eac66b699
#root size: 1031
===============================================================
[ mov rdi, qword ptr [rbp- [ displacement ] ] ]
[ mov rax, r13 ]
[ mov rcx, qword ptr [rbp- [ displacement ] ] ]
[ shr rax,  [ argument ]  ]
[ movzx esi, word ptr [rdi + rax * 2] ]
[ lea rax, ptr [rax + rax * 2] ]
[ mov rdi, qword ptr [rbp- [ displacement ] ] ]
[ lea r14, ptr [rcx + rax * 8] ]
[ add rdi, qword ptr [rbx] ]
[ mov qword ptr [rbp- [ displacement ] ], rdi ]
[ mov rdi, qword ptr [r15  +  [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], r14 ]
[ cmp r12,  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp r12,  [ argument ]  ]
[ jz  [ addr ]  ]
[ test r12, r12 ]
[ jz  [ addr ]  ]
[ movzx edx, byte ptr [r14  +  [ displacement ] ] ]
[ mov eax, edx ]
[ shr al,  [ argument ]  ]
[ jz  [ addr ]  ]
[ movzx eax, byte ptr [r14  +  [ displacement ] ] ]
[ and eax,  [ argument ]  ]
[ sub eax,  [ argument ]  ]
[ cmp eax,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ cmp r14, qword ptr [r15  +  [ displacement ] ] ]
[ jz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac66bc09
#root size: 1032
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 1033
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 1034
===============================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 1035
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 1035
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 1036
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 1037
===============================================================
RET========================================================
#ret target: 7f5eac672885
#function name: _dl_rtld_di_serinfo
#func_id: 17
===========================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 1037
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 1038
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 1038
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 1038
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 1039
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 1040
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 1041
===============================================================
[ add rcx,  [ argument ]  ]
[ movdqa xmm3, xmm4 ]
[ add r10,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ movdqa xmm1, xmmword ptr [rsi + rcx * 1] ]
[ movdqa xmm2, xmmword ptr [rdi + rcx * 1] ]
[ movdqa xmm4, xmm2 ]
[ psrldq xmm3,  [ argument ]  ]
[ pslldq xmm2,  [ argument ]  ]
[ por xmm2, xmm3 ]
[ pcmpeqb xmm0, xmm1 ]
[ pcmpeqb xmm1, xmm2 ]
[ psubb xmm1, xmm0 ]
[ pmovmskb edx, xmm1 ]
[ sub edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ add rcx,  [ argument ]  ]
[ movdqa xmm3, xmm4 ]
[ jmp  [ addr ]  ]
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 1041
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 1041
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 1042
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 1043
===============================================================
RET========================================================
#ret target: 7f5eac672885
#function name: _dl_rtld_di_serinfo
#func_id: 17
===========================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 1043
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 1044
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 1044
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 1044
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 1045
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 1046
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 1047
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 1047
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 1047
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 1048
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 1049
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 1050
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 1050
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 1050
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 1051
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 1052
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 1053
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 1053
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 1053
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 1054
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 1055
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 1056
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 1056
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac674f0f
#call parent addr: 7f5eac672885
#root size: 1056
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac674f0f
#root size: 1057
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 1058
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 1059
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 1059
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac675794
#call parent addr: 7f5eac672885
#root size: 1059
===============================================================
RET========================================================
#ret target: 7f5eac675794
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ rdtsc  ]
[ shl rdx,  [ argument ]  ]
[ or rax, rdx ]
[ sub rax, rbx ]
[ add qword ptr [rip  +  [ displacement ] ], rax ]
[ jmp  [ addr ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66b77a
#call parent addr: 7f5eac672885
#root size: 1059
===============================================================
[ nop edx, edi ]
[ ret  ]
RET========================================================
#ret target: 7f5eac66b77a
#function name: __get_cpu_features
#func_id: 31
===========================================================
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ xor esi, esi ]
[ xor edi, edi ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66b791
#call parent addr: 7f5eac672885
#root size: 1059
===============================================================
RET========================================================
#ret target: 7f5eac66b791
#function name: _dl_debug_state
#func_id: 18
===========================================================
[ mov dword ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ mov rbx, rax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66b7a0
#call parent addr: 7f5eac672885
#root size: 1059
===============================================================
[ nop edx, edi ]
[ ret  ]
RET========================================================
#ret target: 7f5eac66b7a0
#function name: _dl_debug_state
#func_id: 18
===========================================================
[ nop ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac66b7a6
#call parent addr: 7f5eac672885
#root size: 1059
===============================================================
[ nop edx, edi ]
[ mov rdi, qword ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rdi- [ displacement ] ] ]
[ cmp rax,  [ addr ]  ]
[ jbe  [ addr ]  ]
[ ret  ]
[ sub rsp,  [ argument ]  ]
[ mov rsi, qword ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac680f6b
#call parent addr: 7f5eac66b7a6
#root size: 1060
===============================================================
[ nop edx, edi ]
[ mov eax,  [ argument ]  ]
[ syscall  ]
[ cmp rax,  [ addr ]  ]
[ jnb  [ addr ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5eac680f6b
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ add rsp,  [ argument ]  ]
[ ret  ]
[ lea rsp, ptr [rbp- [ displacement ] ] ]
[ pop rbx ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ pop rbp ]
[ ret  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ mov r12, rax ]
[ test byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ mov rax, r12 ]
[ pop rbx ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ pop rbp ]
[ ret  ]
[ mov r12, rax ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ pop rdx ]
[ lea rsp, ptr [rsp + rax * 8] ]
[ sub edx, eax ]
[ push rdx ]
[ mov rsi, rdx ]
[ mov r13, rsp ]
[ and rsp,  [ addr ]  ]
[ mov rdi, qword ptr [rip  +  [ displacement ] ] ]
[ lea rcx, ptr [r13 + rdx * 8 + [ displacement ] ] ]
[ lea rdx, ptr [r13  +  [ displacement ] ] ]
[ xor ebp, ebp ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac668135
#call parent addr: 7f5eac66b7a6
#root size: 1060
===============================================================
[ nop edx, edi ]
[ push r15 ]
[ push r14 ]
[ mov r14, rdi ]
[ push r13 ]
[ mov r13, rcx ]
[ push r12 ]
[ mov r12, rdx ]
[ push rbp ]
[ mov ebp, esi ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov rbx, qword ptr [rdi  +  [ displacement ] ] ]
[ mov r15, qword ptr [rdi  +  [ displacement ] ] ]
[ mov rdi, qword ptr [rip  +  [ displacement ] ] ]
[ test rdi, rdi ]
[ jnz  [ addr ]  ]
[ test rbx, rbx ]
[ jz  [ addr ]  ]
[ test r15, r15 ]
[ jnz  [ addr ]  ]
[ test byte ptr [rdi  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac678d01
#call parent addr: 7f5eac668135
#root size: 1061
===============================================================
[ push r14 ]
[ push r13 ]
[ mov r13, rcx ]
[ push r12 ]
[ mov r12, rdx ]
[ push rbp ]
[ mov ebp, esi ]
[ push rbx ]
[ movzx eax, byte ptr [rdi  +  [ displacement ] ] ]
[ mov rbx, rdi ]
[ mov rsi, qword ptr [rdi  +  [ displacement ] ] ]
[ or eax,  [ argument ]  ]
[ mov byte ptr [rdi  +  [ displacement ] ], al ]
[ movzx edx, byte ptr [rsi] ]
[ test dl, dl ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rbx  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ test byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ mov rdx, r13 ]
[ add rax, qword ptr [rbx] ]
[ mov rsi, r12 ]
[ mov edi, ebp ]
[ call rax ]
CALL===========================================================
#now call addr: 7f5eac678b4a
#call parent addr: 7f5eac678d01
#root size: 1062
===============================================================
[ nop edx, edi ]
[ sub rsp,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e97713008
#call parent addr: 7f5eac678b4a
#root size: 1063
===============================================================
[ nop edx, edi ]
[ push r12 ]
[ lea r8, ptr [rip  +  [ displacement ] ] ]
[ push rbp ]
[ movq xmm0, r8 ]
[ push rbx ]
[ punpcklqdq xmm0, xmm0 ]
[ mov rdx, qword ptr fs:[ [ displacement ] ] ]
[ lea rdi, ptr [rdx  +  [ displacement ] ] ]
[ sub rsp,  [ argument ]  ]
[ mov rax, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ xor eax, eax ]
[ mov eax,  [ argument ]  ]
[ syscall  ]
[ mov dword ptr [rdx  +  [ displacement ] ], eax ]
[ lea rax, ptr [rdx  +  [ displacement ] ] ]
[ mov qword ptr fs:[ [ displacement ] ], rax ]
[ mov byte ptr fs:[ [ displacement ] ],  [ argument ]  ]
[ lea rdi, ptr [rdx  +  [ displacement ] ] ]
[ mov esi,  [ argument ]  ]
[ mov qword ptr [rdx  +  [ displacement ] ],  [ addr ]  ]
[ mov eax,  [ argument ]  ]
[ movq xmm1, rdi ]
[ punpcklqdq xmm1, xmm1 ]
[ movups xmmword ptr [rdx  +  [ displacement ] ], xmm1 ]
[ syscall  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax, qword ptr [rax] ]
[ mov qword ptr fs:[ [ displacement ] ], rax ]
[ lea rax, ptr [rdx  +  [ displacement ] ] ]
[ mov qword ptr [rip  +  [ displacement ] ], r8 ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ movups xmmword ptr [rdx  +  [ displacement ] ], xmm0 ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ movzx eax, byte ptr [rip  +  [ displacement ] ] ]
[ mov byte ptr fs:[ [ displacement ] ], al ]
[ lea rbp, ptr [rsp  +  [ displacement ] ] ]
[ xor eax, eax ]
[ mov ecx,  [ argument ]  ]
[ xor edx, edx ]
[ mov rdi, rbp ]
[ lea r12, ptr [rsp  +  [ displacement ] ] ]
[ mov dword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ rep stosq qword ptr  [ str ] ]
[ mov rsi, r12 ]
[ lea rax, ptr [rip- [ displacement ] ] ]
[ mov edi,  [ argument ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e97713ed3
#call parent addr: 7f5e97713008
#root size: 1064
===============================================================
[ nop edx, edi ]
[ sub rsp,  [ argument ]  ]
[ mov r8, rdx ]
[ mov rax, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ xor eax, eax ]
[ test rsi, rsi ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rsi] ]
[ movdqu xmm0, xmmword ptr [rsi  +  [ displacement ] ] ]
[ lea rdx, ptr [rsp  +  [ displacement ] ] ]
[ movdqu xmm1, xmmword ptr [rsi  +  [ displacement ] ] ]
[ movdqu xmm2, xmmword ptr [rsi  +  [ displacement ] ] ]
[ movdqu xmm3, xmmword ptr [rsi  +  [ displacement ] ] ]
[ movdqu xmm4, xmmword ptr [rsi  +  [ displacement ] ] ]
[ mov qword ptr [rsp], rax ]
[ mov eax, dword ptr [rsi  +  [ displacement ] ] ]
[ movdqu xmm5, xmmword ptr [rsi  +  [ displacement ] ] ]
[ movups xmmword ptr [rsp  +  [ displacement ] ], xmm0 ]
[ movdqu xmm6, xmmword ptr [rsi  +  [ displacement ] ] ]
[ movdqu xmm7, xmmword ptr [rsi  +  [ displacement ] ] ]
[ movups xmmword ptr [rsp  +  [ displacement ] ], xmm1 ]
[ mov rsi, rsp ]
[ or eax,  [ addr ]  ]
[ test r8, r8 ]
[ movups xmmword ptr [rsp  +  [ displacement ] ], xmm2 ]
[ cdqe  ]
[ movups xmmword ptr [rsp  +  [ displacement ] ], xmm3 ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ lea rax, ptr [rip- [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ mov eax,  [ argument ]  ]
[ cmovz rdx, rax ]
[ movups xmmword ptr [rsp  +  [ displacement ] ], xmm4 ]
[ movups xmmword ptr [rsp  +  [ displacement ] ], xmm5 ]
[ movups xmmword ptr [rsp  +  [ displacement ] ], xmm6 ]
[ movups xmmword ptr [rsp  +  [ displacement ] ], xmm7 ]
[ mov r10d,  [ argument ]  ]
[ mov eax,  [ argument ]  ]
[ syscall  ]
[ cmp rax,  [ addr ]  ]
[ jnbe  [ addr ]  ]
[ mov r9d, eax ]
[ test r8, r8 ]
[ jz  [ addr ]  ]
[ test eax, eax ]
[ js  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov eax, r9d ]
[ add rsp,  [ argument ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5e97713ed3
#function name: __libc_sigaction
#func_id: 2427
===========================================================
[ xor edx, edx ]
[ mov rsi, r12 ]
[ mov edi,  [ argument ]  ]
[ lea rax, ptr [rip- [ displacement ] ] ]
[ mov dword ptr [rsp  +  [ displacement ] ],  [ addr ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e97713ef9
#call parent addr: 7f5e97713008
#root size: 1064
===============================================================
[ nop edx, edi ]
[ sub rsp,  [ argument ]  ]
[ mov r8, rdx ]
[ mov rax, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ xor eax, eax ]
[ test rsi, rsi ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rsi] ]
[ movdqu xmm0, xmmword ptr [rsi  +  [ displacement ] ] ]
[ lea rdx, ptr [rsp  +  [ displacement ] ] ]
[ movdqu xmm1, xmmword ptr [rsi  +  [ displacement ] ] ]
[ movdqu xmm2, xmmword ptr [rsi  +  [ displacement ] ] ]
[ movdqu xmm3, xmmword ptr [rsi  +  [ displacement ] ] ]
[ movdqu xmm4, xmmword ptr [rsi  +  [ displacement ] ] ]
[ mov qword ptr [rsp], rax ]
[ mov eax, dword ptr [rsi  +  [ displacement ] ] ]
[ movdqu xmm5, xmmword ptr [rsi  +  [ displacement ] ] ]
[ movups xmmword ptr [rsp  +  [ displacement ] ], xmm0 ]
[ movdqu xmm6, xmmword ptr [rsi  +  [ displacement ] ] ]
[ movdqu xmm7, xmmword ptr [rsi  +  [ displacement ] ] ]
[ movups xmmword ptr [rsp  +  [ displacement ] ], xmm1 ]
[ mov rsi, rsp ]
[ or eax,  [ addr ]  ]
[ test r8, r8 ]
[ movups xmmword ptr [rsp  +  [ displacement ] ], xmm2 ]
[ cdqe  ]
[ movups xmmword ptr [rsp  +  [ displacement ] ], xmm3 ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ lea rax, ptr [rip- [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ mov eax,  [ argument ]  ]
[ cmovz rdx, rax ]
[ movups xmmword ptr [rsp  +  [ displacement ] ], xmm4 ]
[ movups xmmword ptr [rsp  +  [ displacement ] ], xmm5 ]
[ movups xmmword ptr [rsp  +  [ displacement ] ], xmm6 ]
[ movups xmmword ptr [rsp  +  [ displacement ] ], xmm7 ]
[ mov r10d,  [ argument ]  ]
[ mov eax,  [ argument ]  ]
[ syscall  ]
RET========================================================
#ret target: 7f5e97713ef9
#function name: __libc_sigaction
#func_id: 2427
===========================================================
[ mov r10d,  [ argument ]  ]
[ xor edx, edx ]
[ mov rsi, rbp ]
[ mov rax,  [ addr ]  ]
[ mov edi,  [ argument ]  ]
[ or qword ptr [rsp  +  [ displacement ] ], rax ]
[ mov eax,  [ argument ]  ]
[ syscall  ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ lea rsi, ptr [rsp  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e97713f30
#call parent addr: 7f5e97713008
#root size: 1064
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ push  [ argument ]  ]
[ bnd jmp  [ addr ]  ]
[ push qword ptr [rip  +  [ displacement ] ] ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ push rbx ]
[ mov rbx, rsp ]
[ and rsp,  [ addr ]  ]
[ sub rsp, qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rsp], rax ]
[ mov qword ptr [rsp  +  [ displacement ] ], rcx ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdx ]
[ mov qword ptr [rsp  +  [ displacement ] ], rsi ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdi ]
[ mov qword ptr [rsp  +  [ displacement ] ], r8 ]
[ mov qword ptr [rsp  +  [ displacement ] ], r9 ]
[ mov eax,  [ argument ]  ]
[ xor edx, edx ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdx ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdx ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdx ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdx ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdx ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdx ]
[ xsavec ptr [rsp  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rbx  +  [ displacement ] ] ]
[ mov rdi, qword ptr [rbx  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac67fc29
#call parent addr: 7f5e97713f30
#root size: 1065
===============================================================
[ nop edx, edi ]
[ push rbx ]
[ mov r10, rdi ]
[ mov esi, esi ]
[ lea rdx, ptr [rsi + rsi * 2] ]
[ sub rsp,  [ argument ]  ]
[ mov rax, qword ptr [rdi  +  [ displacement ] ] ]
[ mov rdi, qword ptr [rax  +  [ displacement ] ] ]
[ mov rax, qword ptr [r10  +  [ displacement ] ] ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ lea r8, ptr [rax + rdx * 8] ]
[ mov rax, qword ptr [r10  +  [ displacement ] ] ]
[ mov rsi, qword ptr [r8  +  [ displacement ] ] ]
[ mov rbx, qword ptr [r8] ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ mov rcx, rsi ]
[ shr rcx,  [ argument ]  ]
[ lea rdx, ptr [rcx + rcx * 2] ]
[ lea rdx, ptr [rax + rdx * 8] ]
[ mov rax, qword ptr [r10] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdx ]
[ add rbx, rax ]
[ cmp esi,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ test byte ptr [rdx  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov r8, qword ptr [r10  +  [ displacement ] ] ]
[ test r8, r8 ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [r8  +  [ displacement ] ] ]
[ movzx eax, word ptr [rax + rcx * 2] ]
[ and eax,  [ argument ]  ]
[ lea rcx, ptr [rax + rax * 2] ]
[ mov rax, qword ptr [r10  +  [ displacement ] ] ]
[ lea r8, ptr [rax + rcx * 8] ]
[ mov eax,  [ argument ]  ]
[ mov r9d, dword ptr [r8  +  [ displacement ] ] ]
[ test r9d, r9d ]
[ cmovz r8, rax ]
[ mov ecx, dword ptr fs:[ [ displacement ] ] ]
[ mov eax,  [ argument ]  ]
[ test ecx, ecx ]
[ jnz  [ addr ]  ]
[ mov edx, dword ptr [rdx] ]
[ lea r11, ptr [rsp  +  [ displacement ] ] ]
[ mov r9d,  [ argument ]  ]
[ mov rsi, r10 ]
[ mov rcx, qword ptr [r10  +  [ displacement ] ] ]
[ push  [ argument ]  ]
[ push rax ]
[ add rdi, rdx ]
[ mov rdx, r11 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac678182
#call parent addr: 7f5eac67fc29
#root size: 1066
===============================================================
[ nop edx, edi ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ mov r13, rdi ]
[ push r12 ]
[ mov r12, rdx ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ movzx edx, byte ptr [rdi] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rsi ]
[ mov qword ptr [rsp  +  [ displacement ] ], rcx ]
[ mov qword ptr [rsp  +  [ displacement ] ], r8 ]
[ mov dword ptr [rsp  +  [ displacement ] ], r9d ]
[ test dl, dl ]
[ jz  [ addr ]  ]
[ mov rcx, rdi ]
[ mov eax,  [ argument ]  ]
[ nop word ptr [rax + rax * 1], ax ]
[ mov rsi, rax ]
[ add rcx,  [ argument ]  ]
[ shl rsi,  [ argument ]  ]
[ add rax, rsi ]
[ add rax, rdx ]
[ movzx edx, byte ptr [rcx] ]
[ test dl, dl ]
[ jnz  [ addr ]  ]
[ mov ebx, eax ]
[ add qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov eax,  [ addr ]  ]
[ pxor xmm0, xmm0 ]
[ cmp qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ movaps xmmword ptr [rsp  +  [ displacement ] ], xmm0 ]
[ jz  [ addr ]  ]
[ mov rsi, rax ]
[ add rcx,  [ argument ]  ]
[ shl rsi,  [ argument ]  ]
[ add rax, rsi ]
[ add rax, rdx ]
[ movzx edx, byte ptr [rcx] ]
[ test dl, dl ]
[ jnz  [ addr ]  ]
[ mov ebx, eax ]
[ add qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov eax,  [ addr ]  ]
[ pxor xmm0, xmm0 ]
[ cmp qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ movaps xmmword ptr [rsp  +  [ displacement ] ], xmm0 ]
[ jz  [ addr ]  ]
[ test byte ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ mov rcx, qword ptr [r12] ]
[ cmp qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov r9, qword ptr [rax] ]
[ jnz  [ addr ]  ]
[ test r9, r9 ]
[ jz  [ addr ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov rbp, rax ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ lea r15, ptr [rsp  +  [ displacement ] ] ]
[ lea r14, ptr [rsp  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ push qword ptr [rsp  +  [ displacement ] ] ]
[ mov edi, dword ptr [rsp  +  [ displacement ] ] ]
[ mov r8, r15 ]
[ mov rdx, r14 ]
[ mov rsi, rbx ]
[ push rdi ]
[ push qword ptr [rsp  +  [ displacement ] ] ]
[ mov edi, dword ptr [rsp  +  [ displacement ] ] ]
[ push rdi ]
[ mov rdi, r13 ]
[ push qword ptr [rsp  +  [ displacement ] ] ]
[ push rax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac678182
#root size: 1067
===============================================================
[ push r15 ]
[ push r14 ]
[ mov r14, rsi ]
[ push r13 ]
[ push r12 ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov r12d, dword ptr [r9  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdi ]
[ mov rbp, qword ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdx ]
[ mov r15, qword ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rcx ]
[ mov qword ptr [rsp  +  [ displacement ] ], r8 ]
[ shr rsi,  [ argument ]  ]
[ mov r11, r12 ]
[ mov qword ptr [rsp  +  [ displacement ] ], r14 ]
[ mov r12, r15 ]
[ mov eax, dword ptr [rsp  +  [ displacement ] ] ]
[ mov r13, qword ptr [r9] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rsi ]
[ and eax,  [ argument ]  ]
[ mov dword ptr [rsp  +  [ displacement ] ], eax ]
[ mov r15d, eax ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [r13 + rbp * 8] ]
[ mov rbx, qword ptr [rax  +  [ displacement ] ] ]
[ cmp rbx, r12 ]
[ jz  [ addr ]  ]
[ test r15d, r15d ]
[ jz  [ addr ]  ]
[ test byte ptr [rbx  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ test byte ptr [rbx  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ test byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [rbx  +  [ displacement ] ] ]
[ mov rcx, qword ptr [rbx  +  [ displacement ] ] ]
[ cmp byte ptr [rdx],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov esi, dword ptr [rbx  +  [ displacement ] ] ]
[ test esi, esi ]
[ jz  [ addr ]  ]
[ mov dword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rbx  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ mov rax, qword ptr [rbx  +  [ displacement ] ] ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ mov qword ptr [rsp], rax ]
[ mov rax, qword ptr [rbx  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rdi, qword ptr [rsp  +  [ displacement ] ] ]
[ mov ecx, dword ptr [rbx  +  [ displacement ] ] ]
[ mov edx, dword ptr [rsp  +  [ displacement ] ] ]
[ and edx, dword ptr [rbx  +  [ displacement ] ] ]
[ mov rax, qword ptr [rax + rdx * 8] ]
[ mov rdx, rdi ]
[ shr rdx, cl ]
[ mov rcx, rdx ]
[ mov rdx, rax ]
[ shr rdx, cl ]
[ mov ecx, edi ]
[ shr rax, cl ]
[ and rax, rdx ]
[ test al,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ add rbp,  [ argument ]  ]
[ cmp r11, rbp ]
[ jbe  [ addr ]  ]
[ mov rax, qword ptr [r13 + rbp * 8] ]
[ mov rbx, qword ptr [rax  +  [ displacement ] ] ]
[ cmp rbx, r12 ]
[ jz  [ addr ]  ]
[ test r15d, r15d ]
[ jz  [ addr ]  ]
[ mov rax, rdi ]
[ xor edx, edx ]
[ div rsi ]
[ mov rax, qword ptr [rbx  +  [ displacement ] ] ]
[ mov eax, dword ptr [rax + rdx * 4] ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [rbx  +  [ displacement ] ] ]
[ mov dword ptr [rsp  +  [ displacement ] ], r15d ]
[ mov qword ptr [rsp  +  [ displacement ] ], r13 ]
[ mov r15d, dword ptr [rsp  +  [ displacement ] ] ]
[ lea r14, ptr [rdx + rax * 4] ]
[ lea rax, ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], r11 ]
[ mov r13, qword ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rbp ]
[ mov rbp, rdi ]
[ mov qword ptr [rsp  +  [ displacement ] ], r12 ]
[ mov r12, qword ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ jmp  [ addr ]  ]
[ mov eax, dword ptr [r14] ]
[ mov rdx, rax ]
[ xor rax, rbp ]
[ shr rax,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ sub rsp,  [ argument ]  ]
[ mov rax, r14 ]
[ sub rax, qword ptr [rbx  +  [ displacement ] ] ]
[ mov rsi, r12 ]
[ push qword ptr [rsp  +  [ displacement ] ] ]
[ sar rax,  [ argument ]  ]
[ mov edx, eax ]
[ lea rdx, ptr [rdx + rdx * 2] ]
[ lea rcx, ptr [rsp  +  [ displacement ] ] ]
[ push rcx ]
[ mov ecx, r15d ]
[ push rbx ]
[ push qword ptr [rsp  +  [ displacement ] ] ]
[ push rax ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ mov r8d, dword ptr [rsp  +  [ displacement ] ] ]
[ mov rdi, qword ptr [rsp  +  [ displacement ] ] ]
[ lea r9, ptr [rax + rdx * 8] ]
[ mov rdx, r13 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 1068
===============================================================
[ push r14 ]
[ mov r10, rdi ]
[ push r13 ]
[ mov r13, rdx ]
[ movzx edx, word ptr [r9  +  [ displacement ] ] ]
[ push r12 ]
[ push rbp ]
[ mov ebp, ecx ]
[ movzx ecx, byte ptr [r9  +  [ displacement ] ] ]
[ push rbx ]
[ mov rbx, r9 ]
[ mov r12, qword ptr [rsp  +  [ displacement ] ] ]
[ and ecx,  [ argument ]  ]
[ cmp qword ptr [r9  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov eax,  [ argument ]  ]
[ sar eax, cl ]
[ not eax ]
[ and eax,  [ argument ]  ]
[ test dx, dx ]
[ setz dl ]
[ movzx edx, dl ]
[ and r8d, edx ]
[ or eax, r8d ]
[ jnz  [ addr ]  ]
[ cmp rbx, rsi ]
[ jz  [ addr ]  ]
[ mov edi, dword ptr [rbx] ]
[ mov rsi, r10 ]
[ add rdi, qword ptr [rsp  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 1069
===============================================================
[ nop edx, edi ]
[ mov ecx, esi ]
[ mov eax, edi ]
[ and rcx,  [ argument ]  ]
[ and rax,  [ argument ]  ]
[ cmp ecx,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ cmp eax,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ movlpd xmm1, qword ptr [rdi] ]
[ movlpd xmm2, qword ptr [rsi] ]
[ movhpd xmm1, qword ptr [rdi  +  [ displacement ] ] ]
[ movhpd xmm2, qword ptr [rsi  +  [ displacement ] ] ]
[ pxor xmm0, xmm0 ]
[ pcmpeqb xmm0, xmm1 ]
[ pcmpeqb xmm1, xmm2 ]
[ psubb xmm1, xmm0 ]
[ pmovmskb edx, xmm1 ]
[ sub edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ add rsi,  [ argument ]  ]
[ add rdi,  [ argument ]  ]
[ nop word ptr [rax + rax * 1], ax ]
[ nop ]
[ and rsi,  [ addr ]  ]
[ and rdi,  [ addr ]  ]
[ mov edx,  [ argument ]  ]
[ xor r8d, r8d ]
[ and ecx,  [ argument ]  ]
[ and eax,  [ argument ]  ]
[ cmp ecx, eax ]
[ jz  [ addr ]  ]
[ jnbe  [ addr ]  ]
[ mov r8d, edx ]
[ xchg ecx, eax ]
[ xchg rdi, rsi ]
[ lea r9, ptr [rax  +  [ displacement ] ] ]
[ sub r9, rcx ]
[ lea r10, ptr [rip  +  [ displacement ] ] ]
[ movsxd r9, dword ptr [r10 + r9 * 4] ]
[ lea r10, ptr [r10 + r9 * 1] ]
[ jmp r10 ]
[ lea r9, ptr [rax  +  [ displacement ] ] ]
[ sub r9, rcx ]
[ lea r10, ptr [rip  +  [ displacement ] ] ]
[ movsxd r9, dword ptr [r10 + r9 * 4] ]
[ lea r10, ptr [r10 + r9 * 1] ]
[ jmp r10 ]
[ pxor xmm0, xmm0 ]
[ movdqa xmm2, xmmword ptr [rdi] ]
[ movdqa xmm1, xmmword ptr [rsi] ]
[ pcmpeqb xmm0, xmm1 ]
[ pslldq xmm2,  [ argument ]  ]
[ pcmpeqb xmm2, xmm1 ]
[ psubb xmm2, xmm0 ]
[ pmovmskb r9d, xmm2 ]
[ shr edx, cl ]
[ shr r9d, cl ]
[ sub edx, r9d ]
[ jnz  [ addr ]  ]
[ movdqa xmm3, xmmword ptr [rdi] ]
[ pxor xmm0, xmm0 ]
[ mov rcx,  [ argument ]  ]
[ mov r9d,  [ argument ]  ]
[ lea r10, ptr [rdi  +  [ displacement ] ] ]
[ and r10,  [ argument ]  ]
[ sub r10,  [ argument ]  ]
[ nop word ptr [rax + rax * 1], ax ]
[ add r10,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ movdqa xmm1, xmmword ptr [rsi + rcx * 1] ]
[ movdqa xmm2, xmmword ptr [rdi + rcx * 1] ]
[ movdqa xmm4, xmm2 ]
[ psrldq xmm3,  [ argument ]  ]
[ pslldq xmm2,  [ argument ]  ]
[ por xmm2, xmm3 ]
[ pcmpeqb xmm0, xmm1 ]
[ pcmpeqb xmm1, xmm2 ]
[ psubb xmm1, xmm0 ]
[ pmovmskb edx, xmm1 ]
[ sub edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ lea rax, ptr [r9 + rcx * 1- [ displacement ] ] ]
[ lea rdi, ptr [rdi + rax * 1] ]
[ lea rsi, ptr [rsi + rcx * 1] ]
[ test r8d, r8d ]
[ jz  [ addr ]  ]
[ xchg rdi, rsi ]
[ nop word ptr [rax + rax * 1], ax ]
[ bsf rdx, rdx ]
[ movzx ecx, byte ptr [rsi + rdx * 1] ]
[ movzx eax, byte ptr [rdi + rdx * 1] ]
[ sub eax, ecx ]
[ ret  ]
[ bsf rdx, rdx ]
[ movzx ecx, byte ptr [rsi + rdx * 1] ]
[ movzx eax, byte ptr [rdi + rdx * 1] ]
[ sub eax, ecx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ test r13, r13 ]
[ jz  [ addr ]  ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov edx, dword ptr [rsp  +  [ displacement ] ] ]
[ movzx r14d, word ptr [rax + rdx * 2] ]
[ mov rax, r14 ]
[ and eax,  [ argument ]  ]
[ lea rdx, ptr [rax + rax * 2] ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ lea rax, ptr [rax + rdx * 8] ]
[ mov ebp, dword ptr [rax  +  [ displacement ] ] ]
[ cmp ebp, dword ptr [r13  +  [ displacement ] ] ]
[ jz  [ addr ]  ]
[ or ebp, dword ptr [r13  +  [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ test r14w, r14w ]
[ js  [ addr ]  ]
[ mov rsi, qword ptr [r13] ]
[ mov rdi, qword ptr [rax] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 1069
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ test eax, eax ]
[ jz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ mov rax, rbx ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ ret  ]
[ add rsp,  [ argument ]  ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ mov edx, dword ptr [r14] ]
[ jmp  [ addr ]  ]
[ mov r15d, dword ptr [rsp  +  [ displacement ] ] ]
[ mov r13, qword ptr [rsp  +  [ displacement ] ] ]
[ mov r8, rax ]
[ mov rbp, qword ptr [rsp  +  [ displacement ] ] ]
[ mov r12, qword ptr [rsp  +  [ displacement ] ] ]
[ mov r11, qword ptr [rsp  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ cmp qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ movzx eax, byte ptr [r8  +  [ displacement ] ] ]
[ and eax,  [ argument ]  ]
[ sub eax,  [ argument ]  ]
[ cmp eax,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ movzx eax, byte ptr [r8  +  [ displacement ] ] ]
[ shr al,  [ argument ]  ]
[ cmp al,  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp al,  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp al,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ movq xmm0, r8 ]
[ movq xmm1, rbx ]
[ punpcklqdq xmm0, xmm1 ]
[ movaps xmmword ptr [rax], xmm0 ]
[ mov eax,  [ argument ]  ]
[ jmp  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ add rsp,  [ argument ]  ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ mov rcx, qword ptr [r12] ]
[ cmp qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ test rcx, rcx ]
[ jz  [ addr ]  ]
[ movzx eax, byte ptr [rcx  +  [ displacement ] ] ]
[ and eax,  [ argument ]  ]
[ cmp al,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov r14, qword ptr [rsp  +  [ displacement ] ] ]
[ xor ebx, ebx ]
[ movzx eax, byte ptr [r14  +  [ displacement ] ] ]
[ and eax,  [ argument ]  ]
[ cmp al,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov ecx, dword ptr [r14  +  [ displacement ] ] ]
[ test ecx, ecx ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ test eax,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [r12], rax ]
[ add rsp,  [ argument ]  ]
[ mov rax, r14 ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ mov r8, rax ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ pop rcx ]
[ pop rsi ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov rdx, qword ptr [rsp  +  [ displacement ] ] ]
[ xor eax, eax ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ cmp word ptr [rdx  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ test r8, r8 ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [r8] ]
[ add rax, qword ptr [rdx  +  [ displacement ] ] ]
[ movzx edx, byte ptr [rdx  +  [ displacement ] ] ]
[ and edx,  [ argument ]  ]
[ cmp dl,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov edx, dword ptr [rip  +  [ displacement ] ] ]
[ test edx, edx ]
[ jnz  [ addr ]  ]
[ mov qword ptr [rbx], rax ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ ret  ]
[ mov r11, rax ]
[ mov eax,  [ argument ]  ]
[ xor edx, edx ]
[ xrstor ptr [rsp  +  [ displacement ] ] ]
[ mov r9, qword ptr [rsp  +  [ displacement ] ] ]
[ mov r8, qword ptr [rsp  +  [ displacement ] ] ]
[ mov rdi, qword ptr [rsp  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rsp  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rsp  +  [ displacement ] ] ]
[ mov rcx, qword ptr [rsp  +  [ displacement ] ] ]
[ mov rax, qword ptr [rsp] ]
[ mov rsp, rbx ]
[ mov rbx, qword ptr [rsp] ]
[ add rsp,  [ argument ]  ]
[ bnd jmp r11 ]
[ nop edx, edi ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rdi], rax ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rsi], rax ]
[ ret  ]
[ mov rcx, qword ptr [rsp  +  [ displacement ] ] ]
[ lea rax, ptr [rcx- [ displacement ] ] ]
[ cmp rcx,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov eax,  [ argument ]  ]
[ mov ecx,  [ argument ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ xor edx, edx ]
[ lea rsi, ptr [rsp  +  [ displacement ] ] ]
[ mov edi,  [ argument ]  ]
[ lea rax, ptr [rcx + rax * 1- [ displacement ] ] ]
[ div rcx ]
[ imul rax, rcx ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ call  [ addr.func ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ xor edx, edx ]
[ lea rsi, ptr [rsp  +  [ displacement ] ] ]
[ mov edi,  [ argument ]  ]
[ lea rax, ptr [rcx + rax * 1- [ displacement ] ] ]
[ div rcx ]
[ imul rax, rcx ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e97713f84
#call parent addr: 7f5eac672885
#root size: 1069
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ push  [ argument ]  ]
[ bnd jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac67fc29
#call parent addr: 7f5e97713f84
#root size: 1070
===============================================================
CALL===========================================================
#now call addr: 7f5eac678182
#call parent addr: 7f5eac67fc29
#root size: 1071
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac678182
#root size: 1072
===============================================================
[ add r14,  [ argument ]  ]
[ and edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [r14] ]
[ mov rdx, rax ]
[ xor rax, rbp ]
[ shr rax,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ sub rsp,  [ argument ]  ]
[ mov rax, r14 ]
[ sub rax, qword ptr [rbx  +  [ displacement ] ] ]
[ mov rsi, r12 ]
[ push qword ptr [rsp  +  [ displacement ] ] ]
[ sar rax,  [ argument ]  ]
[ mov edx, eax ]
[ lea rdx, ptr [rdx + rdx * 2] ]
[ lea rcx, ptr [rsp  +  [ displacement ] ] ]
[ push rcx ]
[ mov ecx, r15d ]
[ push rbx ]
[ push qword ptr [rsp  +  [ displacement ] ] ]
[ push rax ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ mov r8d, dword ptr [rsp  +  [ displacement ] ] ]
[ mov rdi, qword ptr [rsp  +  [ displacement ] ] ]
[ lea r9, ptr [rax + rdx * 8] ]
[ mov rdx, r13 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 1073
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 1074
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 1074
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ nop edx, edi ]
[ mov r10, rsi ]
[ xor edx, edx ]
[ mov esi, edi ]
[ mov eax,  [ argument ]  ]
[ xor edi, edi ]
[ syscall  ]
[ cmp rax,  [ addr ]  ]
[ jnbe  [ addr ]  ]
[ ret  ]
[ mov edx,  [ addr ]  ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov rcx, qword ptr [rsp  +  [ displacement ] ] ]
[ cmp rcx,  [ addr ]  ]
[ jz  [ addr ]  ]
[ cmp rcx,  [ argument ]  ]
[ mov eax,  [ argument ]  ]
[ cmovnbe rax, rcx ]
[ mov rdx, rax ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov rbx, qword ptr [rax  +  [ displacement ] ] ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ add rax, rbx ]
[ add rax,  [ argument ]  ]
[ cmp rax, rdx ]
[ cmovb rax, rdx ]
[ mov rdx, rbx ]
[ neg rdx ]
[ lea rax, ptr [rbx + rax * 1- [ displacement ] ] ]
[ and rax, rdx ]
[ mov edx,  [ argument ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ xor eax, eax ]
[ lock cmpxchg dword ptr [rip  +  [ displacement ] ], edx ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [rip  +  [ displacement ] ], rbx ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ xor eax, eax ]
[ xchg dword ptr [rip  +  [ displacement ] ], eax ]
[ cmp eax,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ movq xmm0, qword ptr [rip  +  [ displacement ] ] ]
[ mov r12, qword ptr [rip  +  [ displacement ] ] ]
[ mov eax, dword ptr [r12  +  [ displacement ] ] ]
[ movhps xmm0, qword ptr [rip  +  [ displacement ] ] ]
[ mov dword ptr [r12  +  [ displacement ] ],  [ argument ]  ]
[ lea rbp, ptr [r12  +  [ displacement ] ] ]
[ movups xmmword ptr [r12  +  [ displacement ] ], xmm0 ]
[ lea ebx, ptr [rax- [ displacement ] ] ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ mov rdi, rbp ]
[ sub ebx,  [ argument ]  ]
[ call  [ addr.func ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ lea rcx, ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [r12  +  [ displacement ] ], rax ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ movq xmm0, rcx ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ movq xmm2, rax ]
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ punpcklqdq xmm0, xmm2 ]
[ movups xmmword ptr [r12  +  [ displacement ] ], xmm0 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e977140b9
#call parent addr: 7f5eac672885
#root size: 1074
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ push  [ argument ]  ]
[ bnd jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac67fc29
#call parent addr: 7f5e977140b9
#root size: 1075
===============================================================
CALL===========================================================
#now call addr: 7f5eac678182
#call parent addr: 7f5eac67fc29
#root size: 1076
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac678182
#root size: 1077
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 1078
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 1079
===============================================================
[ pxor xmm0, xmm0 ]
[ movdqa xmm2, xmmword ptr [rdi] ]
[ movdqa xmm1, xmmword ptr [rsi] ]
[ pcmpeqb xmm0, xmm1 ]
[ pslldq xmm2,  [ argument ]  ]
[ pcmpeqb xmm2, xmm1 ]
[ psubb xmm2, xmm0 ]
[ pmovmskb r9d, xmm2 ]
[ shr edx, cl ]
[ shr r9d, cl ]
[ sub edx, r9d ]
[ jnz  [ addr ]  ]
[ movdqa xmm3, xmmword ptr [rdi] ]
[ pxor xmm0, xmm0 ]
[ mov rcx,  [ argument ]  ]
[ mov r9d,  [ argument ]  ]
[ lea r10, ptr [rdi  +  [ displacement ] ] ]
[ and r10,  [ argument ]  ]
[ sub r10,  [ argument ]  ]
[ nop word ptr [rax + rax * 1], ax ]
[ add r10,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ movdqa xmm1, xmmword ptr [rsi + rcx * 1] ]
[ movdqa xmm2, xmmword ptr [rdi + rcx * 1] ]
[ movdqa xmm4, xmm2 ]
[ psrldq xmm3,  [ argument ]  ]
[ pslldq xmm2,  [ argument ]  ]
[ por xmm2, xmm3 ]
[ pcmpeqb xmm0, xmm1 ]
[ pcmpeqb xmm1, xmm2 ]
[ psubb xmm1, xmm0 ]
[ pmovmskb edx, xmm1 ]
[ sub edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 1079
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ nop edx, edi ]
[ push rbx ]
[ xor ecx, ecx ]
[ mov rbx, rdx ]
[ mov rdx, rsi ]
[ mov qword ptr [rip  +  [ displacement ] ], rdi ]
[ xor esi, esi ]
[ xor edi, edi ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978af868
#call parent addr: 7f5eac672885
#root size: 1079
===============================================================
[ nop edx, edi ]
[ push rbx ]
[ mov rbx, rdx ]
[ sub rsp,  [ argument ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdi ]
[ mov qword ptr [rsp  +  [ displacement ] ], rsi ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov edx,  [ argument ]  ]
[ cmpxchg dword ptr [rip  +  [ displacement ] ], edx ]
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ movdqa xmm0, xmmword ptr [rip  +  [ displacement ] ] ]
[ mov byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ xor eax, eax ]
[ movaps xmmword ptr [rip  +  [ displacement ] ], xmm0 ]
[ mov r8, rax ]
[ add rax,  [ argument ]  ]
[ shl r8,  [ argument ]  ]
[ add r8, qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ test r8, r8 ]
[ jz  [ addr ]  ]
[ movq xmm0, qword ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [r8  +  [ displacement ] ], rbx ]
[ mov qword ptr [r8  +  [ displacement ] ], rcx ]
[ movhps xmm0, qword ptr [rsp  +  [ displacement ] ] ]
[ movups xmmword ptr [r8], xmm0 ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ sub dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ cmp r8,  [ argument ]  ]
[ sbb eax, eax ]
[ add rsp,  [ argument ]  ]
[ and eax,  [ argument ]  ]
[ pop rbx ]
[ ret  ]
RET========================================================
#ret target: 7f5e978af868
#function name: __register_atfork
#func_id: 816
===========================================================
[ xor edx, edx ]
[ lea rcx, ptr [rip  +  [ displacement ] ] ]
[ nop word ptr [rax + rax * 1], ax ]
[ mov rax, qword ptr [rbx + rdx * 8] ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ rol rax,  [ argument ]  ]
[ mov qword ptr [rcx + rdx * 8], rax ]
[ add rdx,  [ argument ]  ]
[ cmp rdx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ pop rbx ]
[ mov dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ ret  ]
[ mov rax, qword ptr [rbx + rdx * 8] ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ rol rax,  [ argument ]  ]
[ mov qword ptr [rcx + rdx * 8], rax ]
[ add rdx,  [ argument ]  ]
[ cmp rdx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ pop rbx ]
[ mov dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ ret  ]
[ mov dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e977140cf
#call parent addr: 7f5eac672885
#root size: 1079
===============================================================
[ nop edx, edi ]
[ sub rsp,  [ argument ]  ]
[ lea rdx, ptr [rip- [ displacement ] ] ]
[ mov edi,  [ argument ]  ]
[ mov rax, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ xor eax, eax ]
[ lea rsi, ptr [rsp  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e977230f9
#call parent addr: 7f5e977140cf
#root size: 1080
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ push  [ argument ]  ]
[ bnd jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac67fc29
#call parent addr: 7f5e977230f9
#root size: 1081
===============================================================
CALL===========================================================
#now call addr: 7f5eac678182
#call parent addr: 7f5eac67fc29
#root size: 1082
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac678182
#root size: 1083
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 1084
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 1085
===============================================================
[ and rsi,  [ addr ]  ]
[ and rdi,  [ addr ]  ]
[ mov edx,  [ argument ]  ]
[ xor r8d, r8d ]
[ and ecx,  [ argument ]  ]
[ and eax,  [ argument ]  ]
[ cmp ecx, eax ]
[ jz  [ addr ]  ]
[ jnbe  [ addr ]  ]
[ mov r8d, edx ]
[ xchg ecx, eax ]
[ xchg rdi, rsi ]
[ lea r9, ptr [rax  +  [ displacement ] ] ]
[ sub r9, rcx ]
[ lea r10, ptr [rip  +  [ displacement ] ] ]
[ movsxd r9, dword ptr [r10 + r9 * 4] ]
[ lea r10, ptr [r10 + r9 * 1] ]
[ jmp r10 ]
[ pxor xmm0, xmm0 ]
[ movdqa xmm2, xmmword ptr [rdi] ]
[ movdqa xmm1, xmmword ptr [rsi] ]
[ pcmpeqb xmm0, xmm1 ]
[ pslldq xmm2,  [ argument ]  ]
[ pcmpeqb xmm2, xmm1 ]
[ psubb xmm2, xmm0 ]
[ pmovmskb r9d, xmm2 ]
[ shr edx, cl ]
[ shr r9d, cl ]
[ sub edx, r9d ]
[ jnz  [ addr ]  ]
[ movdqa xmm3, xmmword ptr [rdi] ]
[ pxor xmm0, xmm0 ]
[ mov rcx,  [ argument ]  ]
[ mov r9d,  [ argument ]  ]
[ lea r10, ptr [rdi  +  [ displacement ] ] ]
[ and r10,  [ argument ]  ]
[ sub r10,  [ argument ]  ]
[ nop word ptr [rax + rax * 1], ax ]
[ add r10,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ movdqa xmm1, xmmword ptr [rsi + rcx * 1] ]
[ movdqa xmm2, xmmword ptr [rdi + rcx * 1] ]
[ movdqa xmm4, xmm2 ]
[ psrldq xmm3,  [ argument ]  ]
[ pslldq xmm2,  [ argument ]  ]
[ por xmm2, xmm3 ]
[ pcmpeqb xmm0, xmm1 ]
[ pcmpeqb xmm1, xmm2 ]
[ psubb xmm1, xmm0 ]
[ pmovmskb edx, xmm1 ]
[ sub edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 1085
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ nop edx, edi ]
[ mov edi, edi ]
[ lea rcx, ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rdi * 8] ]
[ sub rax, rdi ]
[ lea rax, ptr [rcx + rax * 8] ]
[ mov r8d, dword ptr [rax  +  [ displacement ] ] ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ cmp r8d,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ test r8d, r8d ]
[ jnz  [ addr ]  ]
[ mov dword ptr [rsi], eax ]
[ lea rax, ptr [rdi * 8] ]
[ sub rax, rdi ]
[ cmp byte ptr [rcx + rax * 8 + [ displacement ] ],  [ argument ]  ]
[ lea rsi, ptr [rax * 8] ]
[ jz  [ addr ]  ]
[ ret  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ ret  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ ret  ]
[ add rsp,  [ argument ]  ]
[ ret  ]
[ mov rax, qword ptr [rbx  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [rbx  +  [ displacement ] ] ]
[ mov rbx, qword ptr [rbx] ]
[ add rbx, qword ptr [rax  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rdx  +  [ displacement ] ] ]
[ shr rdx,  [ argument ]  ]
[ test edx, edx ]
[ jz  [ addr ]  ]
[ lea eax, ptr [rdx- [ displacement ] ] ]
[ lea r14, ptr [rbx + rax * 8 + [ displacement ] ] ]
[ nop word ptr [rax + rax * 1], ax ]
[ mov rdx, r13 ]
[ mov rsi, r12 ]
[ mov edi, ebp ]
[ call qword ptr [rbx] ]
CALL===========================================================
#now call addr: 7f5eac678b88
#call parent addr: 7f5eac672885
#root size: 1085
===============================================================
[ nop edx, edi ]
[ jmp  [ addr ]  ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ sub rsi, rdi ]
[ mov rax, rsi ]
[ shr rsi,  [ argument ]  ]
[ sar rax,  [ argument ]  ]
[ add rsi, rax ]
[ sar rsi,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ jmp rax ]
[ ret  ]
RET========================================================
#ret target: 7f5eac678b88
#function name: register_tm_clones
#func_id: 2210
===========================================================
[ add rbx,  [ argument ]  ]
[ cmp r14, rbx ]
[ jnz  [ addr ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ ret  ]
[ mov rdx, r13 ]
[ mov rsi, r12 ]
[ mov edi, ebp ]
[ call qword ptr [rbx] ]
CALL===========================================================
#now call addr: 7f5eac678b88
#call parent addr: 7f5eac672885
#root size: 1085
===============================================================
[ nop edx, edi ]
[ push rbp ]
[ mov edi,  [ argument ]  ]
[ sub rsp,  [ argument ]  ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ mov rax, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ xor eax, eax ]
[ lea rbp, ptr [rsp  +  [ displacement ] ] ]
[ mov rsi, rbp ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9772319d
#call parent addr: 7f5eac678b88
#root size: 1086
===============================================================
[ nop edx, edi ]
[ mov edi, edi ]
[ lea rcx, ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rdi * 8] ]
[ sub rax, rdi ]
[ lea rax, ptr [rcx + rax * 8] ]
[ mov r8d, dword ptr [rax  +  [ displacement ] ] ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ cmp r8d,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ test r8d, r8d ]
[ jnz  [ addr ]  ]
[ mov dword ptr [rsi], eax ]
[ lea rax, ptr [rdi * 8] ]
[ sub rax, rdi ]
[ cmp byte ptr [rcx + rax * 8 + [ displacement ] ],  [ argument ]  ]
[ lea rsi, ptr [rax * 8] ]
[ jz  [ addr ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5e9772319d
#function name: __tunable_get_val
#func_id: 29
===========================================================
[ lea rdx, ptr [rip- [ displacement ] ] ]
[ mov rsi, rbp ]
[ mov edi,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e977231b1
#call parent addr: 7f5eac678b88
#root size: 1086
===============================================================
RET========================================================
#ret target: 7f5e977231b1
#function name: __tunable_get_val
#func_id: 29
===========================================================
[ lea rdx, ptr [rip- [ displacement ] ] ]
[ mov rsi, rbp ]
[ mov edi,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e977231c5
#call parent addr: 7f5eac678b88
#root size: 1086
===============================================================
RET========================================================
#ret target: 7f5e977231c5
#function name: __tunable_get_val
#func_id: 29
===========================================================
[ lea rdx, ptr [rip- [ displacement ] ] ]
[ mov rsi, rbp ]
[ mov edi,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e977231d9
#call parent addr: 7f5eac678b88
#root size: 1086
===============================================================
RET========================================================
#ret target: 7f5e977231d9
#function name: __tunable_get_val
#func_id: 29
===========================================================
[ lea rdx, ptr [rip- [ displacement ] ] ]
[ mov rsi, rbp ]
[ mov edi,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e977231ed
#call parent addr: 7f5eac678b88
#root size: 1086
===============================================================
RET========================================================
#ret target: 7f5e977231ed
#function name: __tunable_get_val
#func_id: 29
===========================================================
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ pop rbp ]
[ ret  ]
[ add rbx,  [ argument ]  ]
[ cmp r14, rbx ]
[ jnz  [ addr ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ ret  ]
[ mov qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jmp  [ addr ]  ]
[ test rbx, rbx ]
[ jz  [ addr ]  ]
[ test r15, r15 ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [r14  +  [ displacement ] ] ]
[ lea ebx, ptr [rax- [ displacement ] ] ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [r14  +  [ displacement ] ] ]
[ lea ebx, ptr [rax- [ displacement ] ] ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ shl rbx,  [ argument ]  ]
[ nop word ptr [rax + rax * 1], ax ]
[ mov rax, qword ptr [r14  +  [ displacement ] ] ]
[ mov rdi, qword ptr [rax + rbx * 1] ]
[ test byte ptr [rdi  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rcx, r13 ]
[ mov rdx, r12 ]
[ mov esi, ebp ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac678c8c
#call parent addr: 7f5eac678b88
#root size: 1086
===============================================================
[ push r14 ]
[ push r13 ]
[ mov r13, rcx ]
[ push r12 ]
[ mov r12, rdx ]
[ push rbp ]
[ mov ebp, esi ]
[ push rbx ]
[ movzx eax, byte ptr [rdi  +  [ displacement ] ] ]
[ mov rbx, rdi ]
[ mov rsi, qword ptr [rdi  +  [ displacement ] ] ]
[ or eax,  [ argument ]  ]
[ mov byte ptr [rdi  +  [ displacement ] ], al ]
[ movzx edx, byte ptr [rsi] ]
[ test dl, dl ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rbx  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ test byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rbx  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ test byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ nop dword ptr [rax], eax ]
[ test dl, dl ]
[ jz  [ addr ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ ret  ]
RET========================================================
#ret target: 7f5eac678c8c
#function name: _dl_rtld_di_serinfo
#func_id: 17
===========================================================
[ sub rbx,  [ argument ]  ]
[ cmp rbx,  [ addr ]  ]
[ jnz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ mov rax, qword ptr [r14  +  [ displacement ] ] ]
[ mov rdi, qword ptr [rax + rbx * 1] ]
[ test byte ptr [rdi  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rcx, r13 ]
[ mov rdx, r12 ]
[ mov esi, ebp ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac678c8c
#call parent addr: 7f5eac678b88
#root size: 1086
===============================================================
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ mov rdx, r13 ]
[ add rax, qword ptr [rbx] ]
[ mov rsi, r12 ]
[ mov edi, ebp ]
[ call rax ]
CALL===========================================================
#now call addr: 7f5eac678b4a
#call parent addr: 7f5eac678c8c
#root size: 1087
===============================================================
[ nop edx, edi ]
[ push rbp ]
[ mov ebp, edi ]
[ sub rsp,  [ argument ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [rax] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov edi, ebp ]
[ mov dword ptr [rip  +  [ displacement ] ], ebp ]
[ mov qword ptr [rip  +  [ displacement ] ], rsi ]
[ mov qword ptr [rax], rdx ]
[ call  [ addr.func ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ movzx edi, word ptr [rax] ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ cmp word ptr [rax  +  [ displacement ] ], di ]
[ jz  [ addr ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdx ]
[ mov qword ptr [rsp], rsi ]
[ call  [ addr.func ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov edi, ebp ]
[ mov dword ptr [rip  +  [ displacement ] ], ebp ]
[ mov qword ptr [rip  +  [ displacement ] ], rsi ]
[ mov qword ptr [rax], rdx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9783ef70
#call parent addr: 7f5eac678b4a
#root size: 1088
===============================================================
[ nop edx, edi ]
[ test rsi, rsi ]
[ jz  [ addr ]  ]
[ push rbp ]
[ push rbx ]
[ mov rbx, rsi ]
[ sub rsp,  [ argument ]  ]
[ mov rbp, qword ptr [rsi] ]
[ test rbp, rbp ]
[ jz  [ addr ]  ]
[ mov rdi, rbp ]
[ mov esi,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9793a102
#call parent addr: 7f5e9783ef70
#root size: 1089
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ movd xmm4, esi ]
[ mov ecx, edi ]
[ vpbroadcastb ymm4, xmm4 ]
[ vpxor ymm0, ymm0, ymm0 ]
[ and ecx,  [ argument ]  ]
[ cmp ecx,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ vmovdqu ymm1, ymmword ptr [rdi] ]
[ vpcmpeqb ymm2, ymm0, ymm1 ]
[ vpcmpeqb ymm3, ymm4, ymm1 ]
[ vpmovmskb ecx, ymm2 ]
[ vpmovmskb eax, ymm3 ]
[ add rdi,  [ argument ]  ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ test ecx, ecx ]
[ jnz  [ addr ]  ]
[ test ecx, ecx ]
[ jnz  [ addr ]  ]
[ mov edx, eax ]
[ mov rsi, rdi ]
[ and rdi,  [ addr ]  ]
[ jmp  [ addr ]  ]
[ mov r8d, ecx ]
[ sub r8d,  [ argument ]  ]
[ xor r8d, ecx ]
[ and eax, r8d ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ bsr eax, eax ]
[ lea rax, ptr [rdi + rax * 1- [ displacement ] ] ]
[ vzeroupper ]
[ ret  ]
RET========================================================
#ret target: 7f5e9793a102
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ lea rdx, ptr [rax  +  [ displacement ] ] ]
[ test rax, rax ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ cmovnz rbp, rdx ]
[ mov qword ptr [rax], rbp ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rbx] ]
[ mov qword ptr [rax], rdx ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ ret  ]
[ add rsp,  [ argument ]  ]
[ pop rbp ]
[ jmp  [ addr ]  ]
[ nop edx, edi ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax, qword ptr fs:[rax] ]
[ mov rax, qword ptr [rax] ]
[ mov rsi, qword ptr [rax  +  [ displacement ] ] ]
[ lea rdx, ptr [rsi  +  [ displacement ] ] ]
[ mov qword ptr fs:[rcx], rdx ]
[ mov rdi, qword ptr [rax  +  [ displacement ] ] ]
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ lea rdx, ptr [rdi  +  [ displacement ] ] ]
[ mov qword ptr fs:[rcx], rdx ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ add rax,  [ argument ]  ]
[ mov qword ptr fs:[rdx], rax ]
[ ret  ]
[ mov rax, qword ptr [rbx  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [rbx  +  [ displacement ] ] ]
[ mov rbx, qword ptr [rbx] ]
[ add rbx, qword ptr [rax  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rdx  +  [ displacement ] ] ]
[ shr rdx,  [ argument ]  ]
[ test edx, edx ]
[ jz  [ addr ]  ]
[ lea eax, ptr [rdx- [ displacement ] ] ]
[ lea r14, ptr [rbx + rax * 8 + [ displacement ] ] ]
[ nop word ptr [rax + rax * 1], ax ]
[ mov rdx, r13 ]
[ mov rsi, r12 ]
[ mov edi, ebp ]
[ call qword ptr [rbx] ]
CALL===========================================================
#now call addr: 7f5eac678b88
#call parent addr: 7f5e9783ef70
#root size: 1089
===============================================================
[ nop edx, edi ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ cmp qword ptr [rdx  +  [ displacement ] ], rax ]
[ jz  [ addr ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ rol rax,  [ argument ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ ret  ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ cmp qword ptr [rdx  +  [ displacement ] ], rax ]
[ jnz  [ addr ]  ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ cmp qword ptr [rdx  +  [ displacement ] ], rax ]
[ jnz  [ addr ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5eac678b88
#function name: abort
#func_id: 297
===========================================================
[ add rbx,  [ argument ]  ]
[ cmp r14, rbx ]
[ jnz  [ addr ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ ret  ]
CALL===========================================================
#now call addr: 7f5eac678b88
#call parent addr: 7f5e9783ef70
#root size: 1089
===============================================================
[ nop edx, edi ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov r13, qword ptr [rip  +  [ displacement ] ] ]
[ mov eax, dword ptr [r13  +  [ displacement ] ] ]
[ mov r15, qword ptr [r13  +  [ displacement ] ] ]
[ mov r14, qword ptr [r13  +  [ displacement ] ] ]
[ cmp eax,  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp eax,  [ argument ]  ]
[ jz  [ addr ]  ]
[ test r15, r15 ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [r13  +  [ displacement ] ] ]
[ mov edi,  [ argument ]  ]
[ mov dword ptr [rsp  +  [ displacement ] ], eax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9783eb8d
#call parent addr: 7f5eac678b88
#root size: 1090
===============================================================
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov r14, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ xor eax, eax ]
[ cmp dword ptr [r14  +  [ displacement ] ],  [ argument ]  ]
[ jbe  [ addr ]  ]
[ mov byte ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov ebp, edi ]
[ mov r15d,  [ argument ]  ]
[ lea r13, ptr [rsp  +  [ displacement ] ] ]
[ mov byte ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ lea r12, ptr [rsp  +  [ displacement ] ] ]
[ mov dword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ jmp  [ addr ]  ]
[ mov eax,  [ argument ]  ]
[ cpuid  ]
[ mov dword ptr [rsp  +  [ displacement ] ], edx ]
[ mov esi, eax ]
[ mov dword ptr [rsp  +  [ displacement ] ], ecx ]
[ cmp r15d,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ movzx eax, al ]
[ xor sil, sil ]
[ mov dword ptr [rsp  +  [ displacement ] ], eax ]
[ lea r9, ptr [r14  +  [ displacement ] ] ]
[ mov rcx, r13 ]
[ mov rdx, r12 ]
[ mov edi, ebp ]
[ lea r8, ptr [r14  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978d778a
#call parent addr: 7f5e9783eb8d
#root size: 1091
===============================================================
[ test esi, esi ]
[ js  [ addr ]  ]
[ push r13 ]
[ mov r13, r9 ]
[ push r12 ]
[ push rbp ]
[ push rbx ]
[ mov rbx, rdx ]
[ lea edx, ptr [rdi- [ displacement ] ] ]
[ movsxd rax, edx ]
[ sar edx,  [ argument ]  ]
[ imul rax, rax,  [ addr ]  ]
[ sub rsp,  [ argument ]  ]
[ shr rax,  [ argument ]  ]
[ sub eax, edx ]
[ lea r9d, ptr [rax + rax * 2] ]
[ test esi, esi ]
[ jz  [ addr ]  ]
[ mov r12, r8 ]
[ mov rbp, rcx ]
[ lea r8, ptr [rip  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ movzx eax, sil ]
[ cmp sil,  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp eax,  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp eax,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov ecx, esi ]
[ mov edx,  [ argument ]  ]
[ xor r10d, r10d ]
[ lea rax, ptr [r10 + rdx * 1] ]
[ shr rax,  [ argument ]  ]
[ lea r11, ptr [r8 + rax * 8] ]
[ cmp cl, byte ptr [r11] ]
[ jz  [ addr ]  ]
[ jnb  [ addr ]  ]
[ cmp rax, r10 ]
[ jbe  [ addr ]  ]
[ mov rdx, rax ]
[ lea rax, ptr [r10 + rdx * 1] ]
[ shr rax,  [ argument ]  ]
[ lea r11, ptr [r8 + rax * 8] ]
[ cmp cl, byte ptr [r11] ]
[ jnz  [ addr ]  ]
[ movzx edx, byte ptr [r11  +  [ displacement ] ] ]
[ cmp edx, r9d ]
[ jz  [ addr ]  ]
[ cmp dl,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ jnb  [ addr ]  ]
[ cmp rax, r10 ]
[ jbe  [ addr ]  ]
[ mov rdx, rax ]
[ lea rax, ptr [r10 + rdx * 1] ]
[ shr rax,  [ argument ]  ]
[ lea r11, ptr [r8 + rax * 8] ]
[ cmp cl, byte ptr [r11] ]
[ jnz  [ addr ]  ]
[ shr esi,  [ argument ]  ]
[ jz  [ addr ]  ]
[ movzx eax, sil ]
[ cmp sil,  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp eax,  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp eax,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp r9d,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp dword ptr [r12],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ lea r10, ptr [rax  +  [ displacement ] ] ]
[ cmp r10, rdx ]
[ jb  [ addr ]  ]
[ jmp  [ addr ]  ]
[ lea rax, ptr [r10 + rdx * 1] ]
[ shr rax,  [ argument ]  ]
[ lea r11, ptr [r8 + rax * 8] ]
[ cmp cl, byte ptr [r11] ]
[ jz  [ addr ]  ]
[ jnb  [ addr ]  ]
[ cmp rax, r10 ]
[ jbe  [ addr ]  ]
[ xor eax, eax ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ ret  ]
RET========================================================
#ret target: 7f5e978d778a
#function name: __bzero
#func_id: 934
===========================================================
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ lea r9, ptr [r14  +  [ displacement ] ] ]
[ mov rcx, r13 ]
[ mov rdx, r12 ]
[ mov esi, ebx ]
[ lea r8, ptr [r14  +  [ displacement ] ] ]
[ mov edi, ebp ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978d77b0
#call parent addr: 7f5e9783eb8d
#root size: 1091
===============================================================
[ mov eax,  [ argument ]  ]
[ xor ecx, ecx ]
[ cpuid  ]
[ mov edx, eax ]
[ and edx,  [ argument ]  ]
[ jz  [ addr ]  ]
[ xor esi, esi ]
[ cmp r9d,  [ argument ]  ]
[ jz  [ addr ]  ]
[ test r9d, r9d ]
[ jz  [ addr ]  ]
[ mov r8d,  [ argument ]  ]
[ shr eax,  [ argument ]  ]
[ and eax,  [ argument ]  ]
[ cmp eax,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp edx,  [ argument ]  ]
[ jz  [ addr ]  ]
[ add esi,  [ argument ]  ]
[ mov eax, r8d ]
[ mov ecx, esi ]
[ cpuid  ]
[ lea eax, ptr [rdi- [ displacement ] ] ]
[ sub eax, r9d ]
[ jz  [ addr ]  ]
[ cmp eax,  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp eax,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov eax, ebx ]
[ mov edx, ebx ]
[ shr ebx,  [ argument ]  ]
[ shr eax,  [ argument ]  ]
[ and edx,  [ argument ]  ]
[ add edx,  [ argument ]  ]
[ add eax,  [ argument ]  ]
[ imul eax, edx ]
[ lea edx, ptr [rcx  +  [ displacement ] ] ]
[ imul eax, edx ]
[ mov edx, ebx ]
[ and edx,  [ argument ]  ]
[ add edx,  [ argument ]  ]
[ imul eax, edx ]
[ jmp  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ ret  ]
RET========================================================
#ret target: 7f5e978d77b0
#function name: __bzero
#func_id: 934
===========================================================
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ mov esi, dword ptr [rsp  +  [ displacement ] ] ]
[ lea r9, ptr [r14  +  [ displacement ] ] ]
[ mov rcx, r13 ]
[ mov edi, ebp ]
[ lea r8, ptr [r14  +  [ displacement ] ] ]
[ mov rdx, r12 ]
[ call  [ addr.func ]  ]
[ mov rbx, qword ptr [rsp  +  [ displacement ] ] ]
[ xor rbx, qword ptr fs:[ [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ mov edi,  [ argument ]  ]
[ mov r12, rax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9783eb9a
#call parent addr: 7f5e9783eb8d
#root size: 1091
===============================================================
CALL===========================================================
#now call addr: 7f5e978d778a
#call parent addr: 7f5e9783eb9a
#root size: 1092
===============================================================
RET========================================================
#ret target: 7f5e978d778a
#function name: __bzero
#func_id: 934
===========================================================
CALL===========================================================
#now call addr: 7f5e978d77b0
#call parent addr: 7f5e9783eb9a
#root size: 1092
===============================================================
[ mov r10d,  [ argument ]  ]
[ jmp  [ addr ]  ]
[ shr eax,  [ argument ]  ]
[ and eax,  [ argument ]  ]
[ cmp eax,  [ argument ]  ]
[ setz r8b ]
[ cmp edx,  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ test r8b, r8b ]
[ jnz  [ addr ]  ]
[ test r8b, r8b ]
[ jz  [ addr ]  ]
[ add esi,  [ argument ]  ]
[ mov eax, r10d ]
[ mov ecx, esi ]
[ cpuid  ]
[ mov edx, eax ]
[ and edx,  [ argument ]  ]
[ jz  [ addr ]  ]
[ shr eax,  [ argument ]  ]
[ and eax,  [ argument ]  ]
[ cmp eax,  [ argument ]  ]
[ setz r8b ]
[ cmp edx,  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ test r8b, r8b ]
[ jnz  [ addr ]  ]
[ cmp eax,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp r9d,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ add esi,  [ argument ]  ]
[ mov eax, r10d ]
[ mov ecx, esi ]
[ cpuid  ]
[ cmp eax,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp r9d,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ lea eax, ptr [rdi- [ displacement ] ] ]
[ sub eax, r9d ]
[ jz  [ addr ]  ]
RET========================================================
#ret target: 7f5e978d77b0
#function name: __bzero
#func_id: 934
===========================================================
[ mov edi,  [ argument ]  ]
[ mov qword ptr [rsp], rax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9783eba8
#call parent addr: 7f5e9783eb9a
#root size: 1092
===============================================================
CALL===========================================================
#now call addr: 7f5e978d778a
#call parent addr: 7f5e9783eba8
#root size: 1093
===============================================================
RET========================================================
#ret target: 7f5e978d778a
#function name: __bzero
#func_id: 934
===========================================================
CALL===========================================================
#now call addr: 7f5e978d77b0
#call parent addr: 7f5e9783eba8
#root size: 1093
===============================================================
[ cmp eax,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp r9d,  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp eax,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp eax,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp r9d,  [ argument ]  ]
[ jz  [ addr ]  ]
[ jmp  [ addr ]  ]
RET========================================================
#ret target: 7f5e978d77b0
#function name: __bzero
#func_id: 934
===========================================================
[ mov rbp, rax ]
[ test rax, rax ]
[ jle  [ addr ]  ]
[ mov dword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ xor r10d, r10d ]
[ mov edi, dword ptr [r13  +  [ displacement ] ] ]
[ and edi,  [ addr ]  ]
[ jz  [ addr ]  ]
[ cmp dword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ jle  [ addr ]  ]
[ mov edi,  [ argument ]  ]
[ test r10d, r10d ]
[ jnz  [ addr ]  ]
[ xor ecx, ecx ]
[ xor r11d, r11d ]
[ mov esi,  [ argument ]  ]
[ mov r9d,  [ argument ]  ]
[ lea r8d, ptr [rcx  +  [ displacement ] ] ]
[ mov eax, r9d ]
[ cpuid  ]
[ test al,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov ecx, eax ]
[ shr ecx,  [ argument ]  ]
[ and ecx,  [ argument ]  ]
[ cmp ecx,  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp ecx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov ecx, r8d ]
[ jmp  [ addr ]  ]
[ lea r8d, ptr [rcx  +  [ displacement ] ] ]
[ mov eax, r9d ]
[ cpuid  ]
[ test dil,  [ argument ]  ]
[ jz  [ addr ]  ]
[ shr eax,  [ argument ]  ]
[ and edi,  [ addr ]  ]
[ and eax,  [ argument ]  ]
[ mov r11d, eax ]
[ jmp  [ addr ]  ]
[ test edi, edi ]
[ jz  [ addr ]  ]
[ mov ecx, r8d ]
[ jmp  [ addr ]  ]
[ test dil,  [ argument ]  ]
[ jz  [ addr ]  ]
[ shr eax,  [ argument ]  ]
[ shr edx,  [ argument ]  ]
[ and edi,  [ addr ]  ]
[ and eax,  [ argument ]  ]
[ mov esi, edx ]
[ mov r10d, eax ]
[ and esi,  [ argument ]  ]
[ test edi, edi ]
[ jz  [ addr ]  ]
[ mov ecx, r8d ]
[ jmp  [ addr ]  ]
[ cmp dword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ jle  [ addr ]  ]
[ mov ebx, dword ptr [rsp  +  [ displacement ] ] ]
[ test r11d, r11d ]
[ mov eax,  [ argument ]  ]
[ setnle cl ]
[ xor r8d, r8d ]
[ cmp ebx,  [ argument ]  ]
[ setz r8b ]
[ mov edx, r8d ]
[ and edx, ecx ]
[ test r10d, r10d ]
[ jnle  [ addr ]  ]
[ xor eax, eax ]
[ cmp ebx,  [ argument ]  ]
[ setz al ]
[ and eax, ecx ]
[ lea r8d, ptr [rax + rax * 1] ]
[ mov ecx, edi ]
[ or r8d, edx ]
[ jmp  [ addr ]  ]
[ lea r8d, ptr [rax + rax * 1] ]
[ mov ecx, edi ]
[ or r8d, edx ]
[ jmp  [ addr ]  ]
[ test r8d, r8d ]
[ jz  [ addr ]  ]
[ lea r9d, ptr [rcx  +  [ displacement ] ] ]
[ mov eax,  [ argument ]  ]
[ cpuid  ]
[ and ecx,  [ argument ]  ]
[ and ebx,  [ argument ]  ]
[ jz  [ addr ]  ]
[ test ecx, ecx ]
[ jz  [ addr ]  ]
[ cmp ecx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ test r8b,  [ argument ]  ]
[ jz  [ addr ]  ]
[ bsr ecx, r11d ]
[ or r11d,  [ addr ]  ]
[ add ecx,  [ argument ]  ]
[ sub ebx,  [ argument ]  ]
[ and r8d,  [ addr ]  ]
[ shl r11d, cl ]
[ not r11d ]
[ and r11d, ebx ]
[ jmp  [ addr ]  ]
[ mov ecx, r9d ]
[ test r8d, r8d ]
[ jz  [ addr ]  ]
[ lea r9d, ptr [rcx  +  [ displacement ] ] ]
[ mov eax,  [ argument ]  ]
[ cpuid  ]
[ cmp ecx,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov ecx, r9d ]
[ test r8d, r8d ]
[ jz  [ addr ]  ]
[ lea r9d, ptr [rcx  +  [ displacement ] ] ]
[ mov eax,  [ argument ]  ]
[ cpuid  ]
[ test r8b,  [ argument ]  ]
[ jz  [ addr ]  ]
[ sub ebx,  [ argument ]  ]
[ cmp dword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ bsr ecx, r10d ]
[ or r10d,  [ addr ]  ]
[ add ecx,  [ argument ]  ]
[ shl r10d, cl ]
[ not r10d ]
[ and r10d, ebx ]
[ and r8d,  [ addr ]  ]
[ jmp  [ addr ]  ]
[ cmp r11d,  [ argument ]  ]
[ sbb r11d,  [ addr ]  ]
[ test r10d, r10d ]
[ jle  [ addr ]  ]
[ cmp dword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ lea edi, ptr [r10  +  [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov edx, dword ptr [r13  +  [ displacement ] ] ]
[ mov eax, dword ptr [r13  +  [ displacement ] ] ]
[ test r11d, r11d ]
[ jz  [ addr ]  ]
[ test rbp, rbp ]
[ jle  [ addr ]  ]
[ test edi, edi ]
[ jz  [ addr ]  ]
[ mov rax, rbp ]
[ mov ecx, edi ]
[ cqo  ]
[ idiv rcx ]
[ mov rbp, rax ]
[ test sil, sil ]
[ jnz  [ addr ]  ]
[ test r11d, r11d ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rsp] ]
[ movsxd r11, r11d ]
[ cqo  ]
[ idiv r11 ]
[ mov qword ptr [rsp], rax ]
[ add rbp, qword ptr [rsp] ]
[ test r15, r15 ]
[ jz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ test r12, r12 ]
[ jle  [ addr ]  ]
[ mov rax, r12 ]
[ mov qword ptr [rip  +  [ displacement ] ], r12 ]
[ xor r12b, r12b ]
[ sar rax,  [ argument ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], r12 ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ mov rax, r12 ]
[ sar rax,  [ argument ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ test r14, r14 ]
[ jz  [ addr ]  ]
[ mov rbp, r14 ]
[ test rbp, rbp ]
[ jle  [ addr ]  ]
[ test rbp, rbp ]
[ jle  [ addr ]  ]
[ mov rax, rbp ]
[ mov qword ptr [rip  +  [ displacement ] ], rbp ]
[ xor bpl, bpl ]
[ sar rax,  [ argument ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], rbp ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ mov rax, rbp ]
[ sar rax,  [ argument ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ mov rax, qword ptr [r13  +  [ displacement ] ] ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ mov eax, edi ]
[ imul rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov ecx,  [ argument ]  ]
[ lea rax, ptr [rax + rax * 2] ]
[ cqo  ]
[ idiv rcx ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ add rbx,  [ argument ]  ]
[ cmp r14, rbx ]
[ jnz  [ addr ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ ret  ]
[ sub rbx,  [ argument ]  ]
[ cmp rbx,  [ addr ]  ]
[ jnz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
CALL===========================================================
#now call addr: 7f5eac678c8c
#call parent addr: 7f5e9783eba8
#root size: 1093
===============================================================
CALL===========================================================
#now call addr: 7f5eac678b4a
#call parent addr: 7f5eac678c8c
#root size: 1094
===============================================================
[ nop edx, edi ]
[ sub rsp,  [ argument ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ call rax ]
[ add rsp,  [ argument ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5eac678b4a
#function name: _init
#func_id: 2185
===========================================================
[ mov rax, qword ptr [rbx  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [rbx  +  [ displacement ] ] ]
[ mov rbx, qword ptr [rbx] ]
[ add rbx, qword ptr [rax  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rdx  +  [ displacement ] ] ]
[ shr rdx,  [ argument ]  ]
[ test edx, edx ]
[ jz  [ addr ]  ]
[ lea eax, ptr [rdx- [ displacement ] ] ]
[ lea r14, ptr [rbx + rax * 8 + [ displacement ] ] ]
[ nop word ptr [rax + rax * 1], ax ]
[ mov rdx, r13 ]
[ mov rsi, r12 ]
[ mov edi, ebp ]
[ call qword ptr [rbx] ]
CALL===========================================================
#now call addr: 7f5eac678b88
#call parent addr: 7f5eac678c8c
#root size: 1094
===============================================================
[ nop edx, edi ]
[ jmp  [ addr ]  ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ sub rsi, rdi ]
[ mov rax, rsi ]
[ shr rsi,  [ argument ]  ]
[ sar rax,  [ argument ]  ]
[ add rsi, rax ]
[ sar rsi,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ jmp rax ]
[ ret  ]
RET========================================================
#ret target: 7f5eac678b88
#function name: NULL
#func_id: 2189
===========================================================
[ add rbx,  [ argument ]  ]
[ cmp r14, rbx ]
[ jnz  [ addr ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ ret  ]
CALL===========================================================
#now call addr: 7f5eac678b88
#call parent addr: 7f5eac678c8c
#root size: 1094
===============================================================
[ nop edx, edi ]
[ mov dword ptr [rip  +  [ displacement ] ], edi ]
[ mov qword ptr [rip  +  [ displacement ] ], rsi ]
[ ret  ]
RET========================================================
#ret target: 7f5eac678b88
#function name: dlmopen
#func_id: 2198
===========================================================
[ add rbx,  [ argument ]  ]
[ cmp r14, rbx ]
[ jnz  [ addr ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ ret  ]
CALL===========================================================
#now call addr: 7f5eac678c8c
#call parent addr: 7f5eac678c8c
#root size: 1094
===============================================================
CALL===========================================================
#now call addr: 7f5eac678b4a
#call parent addr: 7f5eac678c8c
#root size: 1095
===============================================================
[ nop edx, edi ]
[ sub rsp,  [ argument ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ call rax ]
[ add rsp,  [ argument ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5eac678b4a
#function name: _init
#func_id: 2106
===========================================================
[ mov rax, qword ptr [rbx  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [rbx  +  [ displacement ] ] ]
[ mov rbx, qword ptr [rbx] ]
[ add rbx, qword ptr [rax  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rdx  +  [ displacement ] ] ]
[ shr rdx,  [ argument ]  ]
[ test edx, edx ]
[ jz  [ addr ]  ]
[ lea eax, ptr [rdx- [ displacement ] ] ]
[ lea r14, ptr [rbx + rax * 8 + [ displacement ] ] ]
[ nop word ptr [rax + rax * 1], ax ]
[ mov rdx, r13 ]
[ mov rsi, r12 ]
[ mov edi, ebp ]
[ call qword ptr [rbx] ]
CALL===========================================================
#now call addr: 7f5eac678b88
#call parent addr: 7f5eac678c8c
#root size: 1095
===============================================================
[ nop edx, edi ]
[ jmp  [ addr ]  ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ sub rsi, rdi ]
[ mov rax, rsi ]
[ shr rsi,  [ argument ]  ]
[ sar rax,  [ argument ]  ]
[ add rsi, rax ]
[ sar rsi,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ jmp rax ]
[ ret  ]
RET========================================================
#ret target: 7f5eac678b88
#function name: NULL
#func_id: 2110
===========================================================
[ add rbx,  [ argument ]  ]
[ cmp r14, rbx ]
[ jnz  [ addr ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ ret  ]
CALL===========================================================
#now call addr: 7f5eac678c8c
#call parent addr: 7f5eac678c8c
#root size: 1095
===============================================================
CALL===========================================================
#now call addr: 7f5eac678b4a
#call parent addr: 7f5eac678c8c
#root size: 1096
===============================================================
[ nop edx, edi ]
[ sub rsp,  [ argument ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ call rax ]
[ add rsp,  [ argument ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5eac678b4a
#function name: _init
#func_id: 47
===========================================================
[ mov rax, qword ptr [rbx  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [rbx  +  [ displacement ] ] ]
[ mov rbx, qword ptr [rbx] ]
[ add rbx, qword ptr [rax  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rdx  +  [ displacement ] ] ]
[ shr rdx,  [ argument ]  ]
[ test edx, edx ]
[ jz  [ addr ]  ]
[ lea eax, ptr [rdx- [ displacement ] ] ]
[ lea r14, ptr [rbx + rax * 8 + [ displacement ] ] ]
[ nop word ptr [rax + rax * 1], ax ]
[ mov rdx, r13 ]
[ mov rsi, r12 ]
[ mov edi, ebp ]
[ call qword ptr [rbx] ]
CALL===========================================================
#now call addr: 7f5eac678b88
#call parent addr: 7f5eac678c8c
#root size: 1096
===============================================================
[ nop edx, edi ]
[ jmp  [ addr ]  ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ sub rsi, rdi ]
[ mov rax, rsi ]
[ shr rsi,  [ argument ]  ]
[ sar rax,  [ argument ]  ]
[ add rsi, rax ]
[ sar rsi,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ jmp rax ]
[ ret  ]
RET========================================================
#ret target: 7f5eac678b88
#function name: NULL
#func_id: 51
===========================================================
[ add rbx,  [ argument ]  ]
[ cmp r14, rbx ]
[ jnz  [ addr ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ ret  ]
CALL===========================================================
#now call addr: 7f5eac678b88
#call parent addr: 7f5eac678c8c
#root size: 1096
===============================================================
[ nop edx, edi ]
[ push r15 ]
[ mov edi,  [ argument ]  ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov rax, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ xor eax, eax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e97ac9257
#call parent addr: 7f5eac678b88
#root size: 1097
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ push  [ argument ]  ]
[ bnd jmp  [ addr ]  ]
[ push qword ptr [rip  +  [ displacement ] ] ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ push rbx ]
[ mov rbx, rsp ]
[ and rsp,  [ addr ]  ]
[ sub rsp, qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rsp], rax ]
[ mov qword ptr [rsp  +  [ displacement ] ], rcx ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdx ]
[ mov qword ptr [rsp  +  [ displacement ] ], rsi ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdi ]
[ mov qword ptr [rsp  +  [ displacement ] ], r8 ]
[ mov qword ptr [rsp  +  [ displacement ] ], r9 ]
[ mov eax,  [ argument ]  ]
[ xor edx, edx ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdx ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdx ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdx ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdx ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdx ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdx ]
[ xsavec ptr [rsp  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rbx  +  [ displacement ] ] ]
[ mov rdi, qword ptr [rbx  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac67fc29
#call parent addr: 7f5e97ac9257
#root size: 1098
===============================================================
CALL===========================================================
#now call addr: 7f5eac678182
#call parent addr: 7f5eac67fc29
#root size: 1099
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac678182
#root size: 1100
===============================================================
[ mov r15d, dword ptr [rsp  +  [ displacement ] ] ]
[ mov r13, qword ptr [rsp  +  [ displacement ] ] ]
[ mov rbp, qword ptr [rsp  +  [ displacement ] ] ]
[ mov r12, qword ptr [rsp  +  [ displacement ] ] ]
[ mov r11, qword ptr [rsp  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ cmp dword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov r8, qword ptr [rsp  +  [ displacement ] ] ]
[ test r8, r8 ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 1101
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 1102
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 1102
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov ecx, dword ptr [rip  +  [ displacement ] ] ]
[ test ecx, ecx ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ cmp qword ptr [rax],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ movq xmm0, r8 ]
[ movq xmm5, rbx ]
[ punpcklqdq xmm0, xmm5 ]
[ movaps xmmword ptr [rax], xmm0 ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ movq xmm0, r8 ]
[ movq xmm1, rbx ]
[ punpcklqdq xmm0, xmm1 ]
[ movaps xmmword ptr [rax], xmm0 ]
[ mov eax,  [ argument ]  ]
[ jmp  [ addr ]  ]
[ nop edx, edi ]
[ push r13 ]
[ push r12 ]
[ push rbp ]
[ mov ebp, edi ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov rax, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ xor eax, eax ]
[ lea eax, ptr [rbp- [ displacement ] ] ]
[ cmp eax,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ cmp ebp,  [ argument ]  ]
[ jz  [ addr ]  ]
[ jnle  [ addr ]  ]
[ test ebp, ebp ]
[ jz  [ addr ]  ]
[ cmp ebp,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ xor esi, esi ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ xor eax, eax ]
[ call  [ addr.func ]  ]
[ cmp ebp,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ movsxd rax, dword ptr [rdx + rbp * 4] ]
[ add rax, rdx ]
[ jmp rax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e979007c6
#call parent addr: 7f5eac672885
#root size: 1102
===============================================================
[ nop edx, edi ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5e979007c6
#function name: getpagesize
#func_id: 1318
===========================================================
[ cdqe  ]
[ jmp  [ addr ]  ]
[ mov rcx, qword ptr [rsp  +  [ displacement ] ] ]
[ xor rcx, qword ptr fs:[ [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ ret  ]
[ mov qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ cmp qword ptr [rax],  [ argument ]  ]
[ jz  [ addr ]  ]
[ xor esi, esi ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e97ac92be
#call parent addr: 7f5eac672885
#root size: 1102
===============================================================
[ push r12 ]
[ push rbp ]
[ mov rbp, rdi ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov rax, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ xor eax, eax ]
[ lea rbx, ptr [rsp  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ mov rsi, rbx ]
[ mov rdi, rbp ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e97ac91c0
#call parent addr: 7f5e97ac92be
#root size: 1103
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ push  [ argument ]  ]
[ bnd jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac67fc29
#call parent addr: 7f5e97ac91c0
#root size: 1104
===============================================================
CALL===========================================================
#now call addr: 7f5eac678182
#call parent addr: 7f5eac67fc29
#root size: 1105
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac678182
#root size: 1106
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 1107
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 1108
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 1108
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ nop edx, edi ]
[ mov eax,  [ argument ]  ]
[ syscall  ]
[ cmp rax,  [ addr ]  ]
[ jnb  [ addr ]  ]
[ ret  ]
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ neg eax ]
[ mov dword ptr fs:[rcx], eax ]
[ or rax,  [ addr ]  ]
[ ret  ]
[ test eax, eax ]
[ js  [ addr ]  ]
[ jnz  [ addr ]  ]
[ cmp dword ptr [rsp  +  [ displacement ] ],  [ addr ]  ]
[ jnz  [ addr ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e97ac91b0
#call parent addr: 7f5eac672885
#root size: 1108
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ push  [ argument ]  ]
[ bnd jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac67fc29
#call parent addr: 7f5e97ac91b0
#root size: 1109
===============================================================
CALL===========================================================
#now call addr: 7f5eac678182
#call parent addr: 7f5eac67fc29
#root size: 1110
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac678182
#root size: 1111
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 1112
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 1113
===============================================================
[ pxor xmm0, xmm0 ]
[ movdqa xmm2, xmmword ptr [rdi] ]
[ movdqa xmm1, xmmword ptr [rsi] ]
[ pcmpeqb xmm0, xmm1 ]
[ pslldq xmm2,  [ argument ]  ]
[ pcmpeqb xmm2, xmm1 ]
[ psubb xmm2, xmm0 ]
[ pmovmskb r9d, xmm2 ]
[ shr edx, cl ]
[ shr r9d, cl ]
[ sub edx, r9d ]
[ jnz  [ addr ]  ]
[ movdqa xmm3, xmmword ptr [rdi] ]
[ pxor xmm0, xmm0 ]
[ mov rcx,  [ argument ]  ]
[ mov r9d,  [ argument ]  ]
[ lea r10, ptr [rdi  +  [ displacement ] ] ]
[ and r10,  [ argument ]  ]
[ sub r10,  [ argument ]  ]
[ nop word ptr [rax + rax * 1], ax ]
[ add r10,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ movdqa xmm1, xmmword ptr [rsi + rcx * 1] ]
[ movdqa xmm2, xmmword ptr [rdi + rcx * 1] ]
[ movdqa xmm4, xmm2 ]
[ psrldq xmm3,  [ argument ]  ]
[ pslldq xmm2,  [ argument ]  ]
[ por xmm2, xmm3 ]
[ pcmpeqb xmm0, xmm1 ]
[ pcmpeqb xmm1, xmm2 ]
[ psubb xmm1, xmm0 ]
[ pmovmskb edx, xmm1 ]
[ sub edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 1113
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ nop edx, edi ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ add rax, qword ptr fs:[ [ addr ]  ]
[ ret  ]
[ cmp dword ptr [rax],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rsi, rbx ]
[ mov rdi, rbp ]
[ call  [ addr.func ]  ]
[ or r12d,  [ addr ]  ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ mov eax, r12d ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ ret  ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e97ac92ce
#call parent addr: 7f5eac672885
#root size: 1113
===============================================================
CALL===========================================================
#now call addr: 7f5e97ac91c0
#call parent addr: 7f5e97ac92ce
#root size: 1114
===============================================================
[ nop edx, edi ]
[ mov eax,  [ argument ]  ]
[ syscall  ]
[ cmp rax,  [ addr ]  ]
[ jnb  [ addr ]  ]
[ ret  ]
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ neg eax ]
[ mov dword ptr fs:[rcx], eax ]
[ or rax,  [ addr ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5e97ac91c0
#function name: __statfs
#func_id: 1202
===========================================================
CALL===========================================================
#now call addr: 7f5e97ac91b0
#call parent addr: 7f5e97ac92ce
#root size: 1114
===============================================================
[ nop edx, edi ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ add rax, qword ptr fs:[ [ addr ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5e97ac91b0
#function name: __errno_location
#func_id: 302
===========================================================
[ test eax, eax ]
[ jz  [ addr ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e97ac92d7
#call parent addr: 7f5e97ac92ce
#root size: 1114
===============================================================
[ nop edx, edi ]
[ push r14 ]
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ push r13 ]
[ mov r13d,  [ argument ]  ]
[ push r12 ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov rax, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ xor eax, eax ]
[ mov qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e97ad099d
#call parent addr: 7f5e97ac92d7
#root size: 1115
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ push  [ argument ]  ]
[ bnd jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac67fc29
#call parent addr: 7f5e97ad099d
#root size: 1116
===============================================================
CALL===========================================================
#now call addr: 7f5eac678182
#call parent addr: 7f5eac67fc29
#root size: 1117
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac678182
#root size: 1118
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 1119
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 1120
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 1120
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ nop edx, edi ]
[ push r13 ]
[ mov r13, rsi ]
[ push r12 ]
[ push rbp ]
[ mov rbp, rdi ]
[ mov edi,  [ argument ]  ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9789daa9
#call parent addr: 7f5eac672885
#root size: 1120
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ push r12 ]
[ push rbp ]
[ mov rbp, rdi ]
[ push rbx ]
[ mov rax, qword ptr [rax] ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ test rdi, rdi ]
[ js  [ addr ]  ]
[ lea rax, ptr [rdi  +  [ displacement ] ] ]
[ xor ebx, ebx ]
[ cmp rax,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ mov rsi, qword ptr [rsp  +  [ displacement ] ] ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ jmp rax ]
[ nop edx, edi ]
[ push r12 ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ push rbp ]
[ mov rbp, rdi ]
[ push rbx ]
[ mov rbx, qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rbx],  [ argument ]  ]
[ test eax, eax ]
[ jns  [ addr ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978b4cb7
#call parent addr: 7f5e9789daa9
#root size: 1121
===============================================================
[ push rbp ]
[ sub rsp,  [ argument ]  ]
[ mov rax, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ xor eax, eax ]
[ cmp qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ lea rcx, ptr [rip- [ displacement ] ] ]
[ mov qword ptr [rax], rcx ]
[ lea rcx, ptr [rip  +  [ displacement ] ] ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ lea rdx, ptr [rcx  +  [ displacement ] ] ]
[ mov qword ptr fs:[rax], rcx ]
[ mov rax, rdx ]
[ add rcx,  [ argument ]  ]
[ data16 nop ]
[ movq xmm0, rax ]
[ add rax,  [ argument ]  ]
[ punpcklqdq xmm0, xmm0 ]
[ movaps xmmword ptr [rax], xmm0 ]
[ cmp rcx, rax ]
[ jnz  [ addr ]  ]
[ mov qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ lea rbp, ptr [rsp  +  [ displacement ] ] ]
[ mov edi,  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], rdx ]
[ mov rsi, rbp ]
[ lea rdx, ptr [rip- [ displacement ] ] ]
[ call  [ addr.func ]  ]
[ xor ecx, ecx ]
[ mov rdx, rsp ]
[ lea rsi, ptr [rsp  +  [ displacement ] ] ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978b43a1
#call parent addr: 7f5e978b4cb7
#root size: 1122
===============================================================
[ nop edx, edi ]
[ push r15 ]
[ push r14 ]
[ mov r14, rdx ]
[ push r13 ]
[ mov r13, rsi ]
[ push r12 ]
[ xor r12d, r12d ]
[ push rbp ]
[ push rbx ]
[ mov rbx, rdi ]
[ sub rsp,  [ argument ]  ]
[ mov r15, qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rcx ]
[ lea rdi, ptr [r15  +  [ displacement ] ] ]
[ call qword ptr [r15  +  [ displacement ] ] ]
CALL===========================================================
#now call addr: 7f5e9797a431
#call parent addr: 7f5e978b43a1
#root size: 1123
===============================================================
[ nop edx, edi ]
[ mov eax, dword ptr [rdi  +  [ displacement ] ] ]
[ mov edx, eax ]
[ and edx,  [ argument ]  ]
[ nop ]
[ and eax,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ test edx, edx ]
[ jnz  [ addr ]  ]
[ mov ecx, dword ptr [rip  +  [ displacement ] ] ]
[ test ecx, ecx ]
[ jnz  [ addr ]  ]
[ cmp edx,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov edx, dword ptr [rdi  +  [ displacement ] ] ]
[ and edx,  [ argument ]  ]
[ cmp edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov ecx, dword ptr fs:[ [ displacement ] ] ]
[ cmp dword ptr [rdi  +  [ displacement ] ], ecx ]
[ jnz  [ addr ]  ]
[ lock cmpxchg dword ptr [rdi], edx ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rdi  +  [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov dword ptr [rdi  +  [ displacement ] ],  [ argument ]  ]
[ jmp  [ addr ]  ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ mov dword ptr [rdi  +  [ displacement ] ], eax ]
[ add dword ptr [rdi  +  [ displacement ] ],  [ argument ]  ]
[ nop ]
[ xor eax, eax ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ ret  ]
RET========================================================
#ret target: 7f5e9797a431
#function name: pthread_mutex_lock
#func_id: 2269
===========================================================
[ mov rdi, rbx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9797a43b
#call parent addr: 7f5e978b43a1
#root size: 1123
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ push  [ argument ]  ]
[ bnd jmp  [ addr ]  ]
[ push qword ptr [rip  +  [ displacement ] ] ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ push rbx ]
[ mov rbx, rsp ]
[ and rsp,  [ addr ]  ]
[ sub rsp, qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rsp], rax ]
[ mov qword ptr [rsp  +  [ displacement ] ], rcx ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdx ]
[ mov qword ptr [rsp  +  [ displacement ] ], rsi ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdi ]
[ mov qword ptr [rsp  +  [ displacement ] ], r8 ]
[ mov qword ptr [rsp  +  [ displacement ] ], r9 ]
[ mov eax,  [ argument ]  ]
[ xor edx, edx ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdx ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdx ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdx ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdx ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdx ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdx ]
[ xsavec ptr [rsp  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rbx  +  [ displacement ] ] ]
[ mov rdi, qword ptr [rbx  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac67fc29
#call parent addr: 7f5e9797a43b
#root size: 1124
===============================================================
CALL===========================================================
#now call addr: 7f5eac678182
#call parent addr: 7f5eac67fc29
#root size: 1125
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac678182
#root size: 1126
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 1127
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 1128
===============================================================
[ pxor xmm0, xmm0 ]
[ movdqa xmm2, xmmword ptr [rdi] ]
[ movdqa xmm1, xmmword ptr [rsi] ]
[ pcmpeqb xmm0, xmm1 ]
[ pslldq xmm2,  [ argument ]  ]
[ pcmpeqb xmm2, xmm1 ]
[ psubb xmm2, xmm0 ]
[ pmovmskb r9d, xmm2 ]
[ shr edx, cl ]
[ shr r9d, cl ]
[ sub edx, r9d ]
[ jnz  [ addr ]  ]
[ movdqa xmm3, xmmword ptr [rdi] ]
[ pxor xmm0, xmm0 ]
[ mov rcx,  [ argument ]  ]
[ mov r9d,  [ argument ]  ]
[ lea r10, ptr [rdi  +  [ displacement ] ] ]
[ and r10,  [ argument ]  ]
[ sub r10,  [ argument ]  ]
[ nop word ptr [rax + rax * 1], ax ]
[ add r10,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ movdqa xmm1, xmmword ptr [rsi + rcx * 1] ]
[ movdqa xmm2, xmmword ptr [rdi + rcx * 1] ]
[ movdqa xmm4, xmm2 ]
[ psrldq xmm3,  [ argument ]  ]
[ pslldq xmm2,  [ argument ]  ]
[ por xmm2, xmm3 ]
[ pcmpeqb xmm0, xmm1 ]
[ pcmpeqb xmm1, xmm2 ]
[ psubb xmm1, xmm0 ]
[ pmovmskb edx, xmm1 ]
[ sub edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ lea rdi, ptr [rdi + rax * 1] ]
[ lea rsi, ptr [rsi + rcx * 1] ]
[ test r8d, r8d ]
[ jz  [ addr ]  ]
[ xchg rdi, rsi ]
[ nop word ptr [rax + rax * 1], ax ]
[ bsf rdx, rdx ]
[ movzx ecx, byte ptr [rsi + rdx * 1] ]
[ movzx eax, byte ptr [rdi + rdx * 1] ]
[ sub eax, ecx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 1128
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ nop edx, edi ]
[ push r13 ]
[ lea r13, ptr [rip  +  [ displacement ] ] ]
[ push r12 ]
[ push rbp ]
[ xor ebp, ebp ]
[ push rbx ]
[ mov rbx, rdi ]
[ sub rsp,  [ argument ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov r12, qword ptr [r13] ]
[ test r12, r12 ]
[ jz  [ addr ]  ]
[ nop ]
[ cmp qword ptr [r12  +  [ displacement ] ], rbx ]
[ jnbe  [ addr ]  ]
[ cmp qword ptr [r12  +  [ displacement ] ], rbx ]
[ jbe  [ addr ]  ]
[ test byte ptr [r12  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rsi, rbx ]
[ mov rdi, r12 ]
[ call  [ addr.func ]  ]
[ mov r12, qword ptr [r12  +  [ displacement ] ] ]
[ test r12, r12 ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ add rbp,  [ argument ]  ]
[ add r13,  [ argument ]  ]
[ cmp rbp, rax ]
[ jb  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ xor r12d, r12d ]
[ pop rbx ]
[ mov rax, r12 ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ ret  ]
[ cmp qword ptr [r12  +  [ displacement ] ], rbx ]
[ jnbe  [ addr ]  ]
[ cmp qword ptr [r12  +  [ displacement ] ], rbx ]
[ jbe  [ addr ]  ]
[ test byte ptr [r12  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [r12  +  [ displacement ] ], rbp ]
[ jnz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ mov rax, r12 ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ ret  ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [rax  +  [ displacement ] ] ]
[ movq xmm0, rdx ]
[ movhps xmm0, qword ptr [rax  +  [ displacement ] ] ]
[ movups xmmword ptr [r13], xmm0 ]
[ cmp byte ptr [rdx],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [rax  +  [ displacement ] ] ]
[ mov r12, qword ptr [rax  +  [ displacement ] ] ]
[ mov r9, qword ptr [rdx  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rax  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rdx  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rax  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rsi ]
[ mov esi, dword ptr [rdx  +  [ displacement ] ] ]
[ mov dword ptr [rsp  +  [ displacement ] ], esi ]
[ test r12, r12 ]
[ jz  [ addr ]  ]
[ mov ecx, dword ptr [rax  +  [ displacement ] ] ]
[ test ecx, ecx ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [rax  +  [ displacement ] ] ]
[ sub ecx,  [ argument ]  ]
[ xor r12d, r12d ]
[ lea r10, ptr [rdx  +  [ displacement ] ] ]
[ lea rsi, ptr [r10 + rcx * 4] ]
[ jmp  [ addr ]  ]
[ mov edx, dword ptr [rdx] ]
[ test edx, edx ]
[ jz  [ addr ]  ]
[ mov r8, qword ptr [rax  +  [ displacement ] ] ]
[ lea rdx, ptr [r8 + rdx * 4] ]
[ jmp  [ addr ]  ]
[ mov rdx, r10 ]
[ cmp r10, rsi ]
[ jz  [ addr ]  ]
[ add r10,  [ argument ]  ]
[ mov edx, dword ptr [rdx] ]
[ test edx, edx ]
[ jz  [ addr ]  ]
[ mov r8, qword ptr [rax  +  [ displacement ] ] ]
[ lea rdx, ptr [r8 + rdx * 4] ]
[ jmp  [ addr ]  ]
[ mov rcx, rdx ]
[ sub rcx, r8 ]
[ sar rcx,  [ argument ]  ]
[ mov ecx, ecx ]
[ lea rcx, ptr [rcx + rcx * 2] ]
[ lea rcx, ptr [r9 + rcx * 8] ]
[ movzx edi, word ptr [rcx  +  [ displacement ] ] ]
[ test di, di ]
[ jz  [ addr ]  ]
[ cmp di,  [ argument ]  ]
[ jz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ movzx r11d, byte ptr [rcx  +  [ displacement ] ] ]
[ and r11d,  [ argument ]  ]
[ cmp r11b,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rbp, qword ptr [rcx  +  [ displacement ] ] ]
[ mov r11, qword ptr [rax] ]
[ add r11, rbp ]
[ cmp rbx, r11 ]
[ jb  [ addr ]  ]
[ test di, di ]
[ jz  [ addr ]  ]
[ add rdx,  [ argument ]  ]
[ test byte ptr [rdx- [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rcx, rdx ]
[ sub rcx, r8 ]
[ sar rcx,  [ argument ]  ]
[ mov ecx, ecx ]
[ lea rcx, ptr [rcx + rcx * 2] ]
[ lea rcx, ptr [r9 + rcx * 8] ]
[ movzx edi, word ptr [rcx  +  [ displacement ] ] ]
[ test di, di ]
[ jz  [ addr ]  ]
[ cmp di,  [ argument ]  ]
[ jz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ mov rdi, qword ptr [rcx  +  [ displacement ] ] ]
[ test rdi, rdi ]
[ jnz  [ addr ]  ]
[ cmp rbx, r11 ]
[ jz  [ addr ]  ]
[ nop dword ptr [rax], eax ]
[ add rdx,  [ argument ]  ]
[ test byte ptr [rdx- [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ add r11, rdi ]
[ cmp rbx, r11 ]
[ jnb  [ addr ]  ]
[ test r12, r12 ]
[ jz  [ addr ]  ]
[ cmp rbp, qword ptr [r12  +  [ displacement ] ] ]
[ jbe  [ addr ]  ]
[ test r14, r14 ]
[ jz  [ addr ]  ]
[ mov qword ptr [r14], rax ]
[ mov rbx, qword ptr [rsp  +  [ displacement ] ] ]
[ test rbx, rbx ]
[ jz  [ addr ]  ]
[ mov qword ptr [rbx], r12 ]
[ test r12, r12 ]
[ jz  [ addr ]  ]
[ test r12, r12 ]
[ jz  [ addr ]  ]
[ mov edx, dword ptr [r12] ]
[ add rdx, qword ptr [rsp  +  [ displacement ] ] ]
[ cmp word ptr [r12  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [r13  +  [ displacement ] ], rdx ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rax] ]
[ add rax, qword ptr [r12  +  [ displacement ] ] ]
[ mov r12d,  [ argument ]  ]
[ mov qword ptr [r13  +  [ displacement ] ], rax ]
[ lea rdi, ptr [r15  +  [ displacement ] ] ]
[ call qword ptr [r15  +  [ displacement ] ] ]
[ pxor xmm0, xmm0 ]
[ mov r12d,  [ argument ]  ]
[ movups xmmword ptr [r13  +  [ displacement ] ], xmm0 ]
[ jmp  [ addr ]  ]
[ lea rdi, ptr [r15  +  [ displacement ] ] ]
[ call qword ptr [r15  +  [ displacement ] ] ]
CALL===========================================================
#now call addr: 7f5e9797a5b9
#call parent addr: 7f5eac672885
#root size: 1128
===============================================================
[ nop edx, edi ]
[ mov eax, dword ptr [rdi  +  [ displacement ] ] ]
[ mov edx, eax ]
[ and edx,  [ argument ]  ]
[ and eax,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov r8d, eax ]
[ test edx, edx ]
[ jnz  [ addr ]  ]
[ sub dword ptr [rdi  +  [ displacement ] ],  [ argument ]  ]
[ xor eax, eax ]
[ mov dword ptr [rdi  +  [ displacement ] ],  [ argument ]  ]
[ mov esi, dword ptr [rdi  +  [ displacement ] ] ]
[ xchg dword ptr [rdi], eax ]
[ cmp eax,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ cmp edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov esi, dword ptr [rdi  +  [ displacement ] ] ]
[ and esi,  [ argument ]  ]
[ jmp  [ addr ]  ]
[ mov eax, dword ptr [rdi  +  [ displacement ] ] ]
[ and eax,  [ argument ]  ]
[ cmp eax,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ cmp dword ptr [rdi  +  [ displacement ] ], eax ]
[ jz  [ addr ]  ]
[ mov r8d,  [ argument ]  ]
[ jmp  [ addr ]  ]
[ sub dword ptr [rdi  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ sub dword ptr [rdi  +  [ displacement ] ],  [ argument ]  ]
[ xor eax, eax ]
[ mov dword ptr [rdi  +  [ displacement ] ],  [ argument ]  ]
[ mov esi, dword ptr [rdi  +  [ displacement ] ] ]
[ xchg dword ptr [rdi], eax ]
[ cmp eax,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ nop ]
[ mov eax, r8d ]
[ ret  ]
RET========================================================
#ret target: 7f5e9797a5b9
#function name: pthread_mutex_unlock
#func_id: 2276
===========================================================
[ add rsp,  [ argument ]  ]
[ mov eax, r12d ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rsp] ]
[ cmp qword ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ lea rcx, ptr [rip  +  [ displacement ] ] ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ lea rdx, ptr [rcx  +  [ displacement ] ] ]
[ mov qword ptr fs:[rax], rcx ]
[ mov rax, rdx ]
[ add rcx,  [ argument ]  ]
[ data16 nop ]
[ movq xmm0, rax ]
[ add rax,  [ argument ]  ]
[ punpcklqdq xmm0, xmm0 ]
[ movaps xmmword ptr [rax], xmm0 ]
[ cmp rcx, rax ]
[ jnz  [ addr ]  ]
[ mov qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ lea rbp, ptr [rsp  +  [ displacement ] ] ]
[ mov edi,  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], rdx ]
[ mov rsi, rbp ]
[ lea rdx, ptr [rip- [ displacement ] ] ]
[ call  [ addr.func ]  ]
[ movq xmm0, rax ]
[ add rax,  [ argument ]  ]
[ punpcklqdq xmm0, xmm0 ]
[ movaps xmmword ptr [rax], xmm0 ]
[ cmp rcx, rax ]
[ jnz  [ addr ]  ]
[ mov qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ lea rbp, ptr [rsp  +  [ displacement ] ] ]
[ mov edi,  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], rdx ]
[ mov rsi, rbp ]
[ lea rdx, ptr [rip- [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978b4275
#call parent addr: 7f5eac672885
#root size: 1128
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ push  [ argument ]  ]
[ bnd jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac67fc29
#call parent addr: 7f5e978b4275
#root size: 1129
===============================================================
CALL===========================================================
#now call addr: 7f5eac678182
#call parent addr: 7f5eac67fc29
#root size: 1130
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac678182
#root size: 1131
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 1132
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 1133
===============================================================
[ movdqa xmm1, xmmword ptr [rsi] ]
[ pxor xmm0, xmm0 ]
[ pcmpeqb xmm0, xmm1 ]
[ pcmpeqb xmm1, xmmword ptr [rdi] ]
[ psubb xmm1, xmm0 ]
[ pmovmskb r9d, xmm1 ]
[ shr edx, cl ]
[ shr r9d, cl ]
[ sub edx, r9d ]
[ jnz  [ addr ]  ]
[ mov rcx,  [ argument ]  ]
[ mov r9,  [ argument ]  ]
[ pxor xmm0, xmm0 ]
[ nop dword ptr [rax], eax ]
[ movdqa xmm1, xmmword ptr [rsi + rcx * 1] ]
[ movdqa xmm2, xmmword ptr [rdi + rcx * 1] ]
[ pcmpeqb xmm0, xmm1 ]
[ pcmpeqb xmm1, xmm2 ]
[ psubb xmm1, xmm0 ]
[ pmovmskb edx, xmm1 ]
[ sub edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ add rcx,  [ argument ]  ]
[ movdqa xmm1, xmmword ptr [rsi + rcx * 1] ]
[ movdqa xmm2, xmmword ptr [rdi + rcx * 1] ]
[ pcmpeqb xmm0, xmm1 ]
[ pcmpeqb xmm1, xmm2 ]
[ psubb xmm1, xmm0 ]
[ pmovmskb edx, xmm1 ]
[ sub edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 1133
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ lea rdx, ptr [rip- [ displacement ] ] ]
[ mov rsi, rbp ]
[ mov edi,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978b4289
#call parent addr: 7f5eac672885
#root size: 1133
===============================================================
[ nop edx, edi ]
[ mov edi, edi ]
[ lea rcx, ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rdi * 8] ]
[ sub rax, rdi ]
[ lea rax, ptr [rcx + rax * 8] ]
[ mov r8d, dword ptr [rax  +  [ displacement ] ] ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ cmp r8d,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ test r8d, r8d ]
[ jnz  [ addr ]  ]
[ mov dword ptr [rsi], eax ]
[ lea rax, ptr [rdi * 8] ]
[ sub rax, rdi ]
[ cmp byte ptr [rcx + rax * 8 + [ displacement ] ],  [ argument ]  ]
[ lea rsi, ptr [rax * 8] ]
[ jz  [ addr ]  ]
[ mov qword ptr [rsi], rax ]
[ jmp  [ addr ]  ]
[ lea rax, ptr [rdi * 8] ]
[ sub rax, rdi ]
[ cmp byte ptr [rcx + rax * 8 + [ displacement ] ],  [ argument ]  ]
[ lea rsi, ptr [rax * 8] ]
[ jz  [ addr ]  ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ lea rdi, ptr [rcx + rsi * 1 + [ displacement ] ] ]
[ jmp rdx ]
RET========================================================
#ret target: 7f5e978b4289
#function name: __tunable_get_val
#func_id: 29
===========================================================
[ lea rdx, ptr [rip- [ displacement ] ] ]
[ mov rsi, rbp ]
[ mov edi,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978b429d
#call parent addr: 7f5eac672885
#root size: 1133
===============================================================
RET========================================================
#ret target: 7f5e978b429d
#function name: __tunable_get_val
#func_id: 29
===========================================================
[ lea rdx, ptr [rip- [ displacement ] ] ]
[ mov rsi, rbp ]
[ mov edi,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978b42b1
#call parent addr: 7f5eac672885
#root size: 1133
===============================================================
RET========================================================
#ret target: 7f5e978b42b1
#function name: __tunable_get_val
#func_id: 29
===========================================================
[ lea rdx, ptr [rip- [ displacement ] ] ]
[ mov rsi, rbp ]
[ mov edi,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978b42c5
#call parent addr: 7f5eac672885
#root size: 1133
===============================================================
RET========================================================
#ret target: 7f5e978b42c5
#function name: __tunable_get_val
#func_id: 29
===========================================================
[ lea rdx, ptr [rip- [ displacement ] ] ]
[ mov rsi, rbp ]
[ mov edi,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978b42d9
#call parent addr: 7f5eac672885
#root size: 1133
===============================================================
RET========================================================
#ret target: 7f5e978b42d9
#function name: __tunable_get_val
#func_id: 29
===========================================================
[ lea rdx, ptr [rip- [ displacement ] ] ]
[ mov rsi, rbp ]
[ mov edi,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978b42ed
#call parent addr: 7f5eac672885
#root size: 1133
===============================================================
RET========================================================
#ret target: 7f5e978b42ed
#function name: __tunable_get_val
#func_id: 29
===========================================================
[ lea rdx, ptr [rip- [ displacement ] ] ]
[ mov rsi, rbp ]
[ mov edi,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978b4301
#call parent addr: 7f5eac672885
#root size: 1133
===============================================================
RET========================================================
#ret target: 7f5e978b4301
#function name: __tunable_get_val
#func_id: 29
===========================================================
[ lea rdx, ptr [rip- [ displacement ] ] ]
[ mov rsi, rbp ]
[ mov edi,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978b4315
#call parent addr: 7f5eac672885
#root size: 1133
===============================================================
RET========================================================
#ret target: 7f5e978b4315
#function name: __tunable_get_val
#func_id: 29
===========================================================
[ lea rdx, ptr [rip- [ displacement ] ] ]
[ mov rsi, rbp ]
[ mov edi,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978b4329
#call parent addr: 7f5eac672885
#root size: 1133
===============================================================
RET========================================================
#ret target: 7f5e978b4329
#function name: __tunable_get_val
#func_id: 29
===========================================================
[ lea rdx, ptr [rip- [ displacement ] ] ]
[ mov rsi, rbp ]
[ mov edi,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978b433d
#call parent addr: 7f5eac672885
#root size: 1133
===============================================================
RET========================================================
#ret target: 7f5e978b433d
#function name: __tunable_get_val
#func_id: 29
===========================================================
[ lea rdx, ptr [rip- [ displacement ] ] ]
[ mov rsi, rbp ]
[ mov edi,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978b4351
#call parent addr: 7f5eac672885
#root size: 1133
===============================================================
RET========================================================
#ret target: 7f5e978b4351
#function name: __tunable_get_val
#func_id: 29
===========================================================
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax, qword ptr [rax] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ call rax ]
[ mov dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ pop rbp ]
[ ret  ]
[ mov rax, qword ptr [rbx] ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ test rbp, rbp ]
[ js  [ addr ]  ]
[ lea rax, ptr [rbp  +  [ displacement ] ] ]
[ xor ebx, ebx ]
[ cmp rax,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ and rax,  [ addr ]  ]
[ lea rbx, ptr [rax- [ displacement ] ] ]
[ shr rbx,  [ argument ]  ]
[ jmp  [ addr ]  ]
[ mov r12, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax, qword ptr fs:[r12] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ cmp qword ptr [rip  +  [ displacement ] ], rbx ]
[ jnbe  [ addr ]  ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ cmp byte ptr fs:[rax],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978b4d89
#call parent addr: 7f5eac672885
#root size: 1133
===============================================================
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ push rbp ]
[ mov rbp, qword ptr fs:[rax] ]
[ test rbp, rbp ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov edx,  [ argument ]  ]
[ cmpxchg dword ptr [rbp], edx ]
[ mov esi,  [ argument ]  ]
[ mov rdi, rbp ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978b3af6
#call parent addr: 7f5e978b4d89
#root size: 1134
===============================================================
[ test rsi, rsi ]
[ js  [ addr ]  ]
[ push r15 ]
[ lea rax, ptr [rsi  +  [ displacement ] ] ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ push rbp ]
[ mov rbp, rsi ]
[ push rbx ]
[ mov rbx, rdi ]
[ sub rsp,  [ argument ]  ]
[ cmp rax,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ test rdi, rdi ]
[ jz  [ addr ]  ]
[ and rax,  [ addr ]  ]
[ mov r13, rax ]
[ test rdi, rdi ]
[ jz  [ addr ]  ]
[ mov r14d, eax ]
[ shr r14d,  [ argument ]  ]
[ cmp rax, qword ptr [rip  +  [ displacement ] ] ]
[ jbe  [ addr ]  ]
[ cmp rax,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ lea eax, ptr [r14 + r14 * 1- [ displacement ] ] ]
[ lea rax, ptr [rax * 8  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ add rax, rbx ]
[ mov r8, qword ptr [rax  +  [ displacement ] ] ]
[ lea rcx, ptr [rax- [ displacement ] ] ]
[ cmp rcx, r8 ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [r8  +  [ displacement ] ] ]
[ cmp qword ptr [rdx  +  [ displacement ] ], r8 ]
[ jnz  [ addr ]  ]
[ lea r9, ptr [rip  +  [ displacement ] ] ]
[ or qword ptr [r8 + r13 * 1 + [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rax  +  [ displacement ] ], rdx ]
[ mov qword ptr [rdx  +  [ displacement ] ], rcx ]
[ cmp rbx, r9 ]
[ jz  [ addr ]  ]
[ mov rax, r13 ]
[ mov rdi, r13 ]
[ mov dword ptr [rsp  +  [ displacement ] ], r14d ]
[ shr rax,  [ argument ]  ]
[ shr rdi,  [ argument ]  ]
[ mov dword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ add eax,  [ argument ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdi ]
[ add edi,  [ argument ]  ]
[ mov dword ptr [rsp  +  [ displacement ] ], edi ]
[ mov dword ptr [rsp  +  [ displacement ] ], eax ]
[ mov dword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov dword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ lea rax, ptr [r13- [ displacement ] ] ]
[ mov r12, qword ptr [rip  +  [ displacement ] ] ]
[ shr rax,  [ argument ]  ]
[ mov r15, rax ]
[ xor eax, eax ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ cmp qword ptr fs:[r12],  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp qword ptr [rip  +  [ displacement ] ], r15 ]
[ cmovnbe rax, r13 ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ mov qword ptr [rsp],  [ argument ]  ]
[ lea r11, ptr [rbx  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rbp ]
[ mov dword ptr [rsp  +  [ displacement ] ], r14d ]
[ mov r14, r12 ]
[ mov rsi, qword ptr [rbx  +  [ displacement ] ] ]
[ cmp rsi, r11 ]
[ jz  [ addr ]  ]
[ mov rbp, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ test rbp, rbp ]
[ setnz byte ptr [rsp  +  [ displacement ] ] ]
[ mov r10, qword ptr fs:[r14] ]
[ xor edi, edi ]
[ xor r8d, r8d ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ lea rax, ptr [r13  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ lea rax, ptr [r10 + r15 * 2] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ lea rax, ptr [r10 + r15 * 8] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ mov rax, qword ptr [rsi  +  [ displacement ] ] ]
[ and rax,  [ addr ]  ]
[ lea r9, ptr [rsi + rax * 1] ]
[ cmp rax,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ mov qword ptr [rsp],  [ argument ]  ]
[ lea r11, ptr [rbx  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rbp ]
[ mov dword ptr [rsp  +  [ displacement ] ], r14d ]
[ mov r14, r12 ]
[ mov rsi, qword ptr [rbx  +  [ displacement ] ] ]
[ cmp rsi, r11 ]
[ jz  [ addr ]  ]
[ mov rbp, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ test rbp, rbp ]
[ setnz byte ptr [rsp  +  [ displacement ] ] ]
[ mov r10, qword ptr fs:[r14] ]
[ xor edi, edi ]
[ xor r8d, r8d ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ lea rax, ptr [r13  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ lea rax, ptr [r10 + r15 * 2] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ lea rax, ptr [r10 + r15 * 8] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ mov rax, qword ptr [rsi  +  [ displacement ] ] ]
[ and rax,  [ addr ]  ]
[ lea r9, ptr [rsi + rax * 1] ]
[ cmp rax,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ mov rcx, qword ptr [rbx  +  [ displacement ] ] ]
[ cmp rcx, rax ]
[ jb  [ addr ]  ]
[ cmp r13,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ mov eax, dword ptr [rsp  +  [ displacement ] ] ]
[ lea eax, ptr [rax + rax * 1- [ displacement ] ] ]
[ lea rax, ptr [rbx + rax * 8 + [ displacement ] ] ]
[ mov rdx, qword ptr [rax] ]
[ lea rcx, ptr [rax- [ displacement ] ] ]
[ cmp rdx, rcx ]
[ jz  [ addr ]  ]
[ cmp qword ptr [rdx  +  [ displacement ] ], r13 ]
[ jnb  [ addr ]  ]
[ mov eax, dword ptr [rsp  +  [ displacement ] ] ]
[ lea ecx, ptr [rax  +  [ displacement ] ] ]
[ add eax, eax ]
[ mov edi, ecx ]
[ lea rdx, ptr [rbx + rax * 8 + [ displacement ] ] ]
[ shr edi,  [ argument ]  ]
[ mov eax, edi ]
[ mov esi, dword ptr [rbx + rax * 4 + [ displacement ] ] ]
[ mov eax,  [ argument ]  ]
[ shl eax, cl ]
[ nop word ptr [rax + rax * 1], ax ]
[ cmp eax, esi ]
[ jnbe  [ addr ]  ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ lea eax, ptr [rdi  +  [ displacement ] ] ]
[ cmp edi,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov edx, eax ]
[ mov esi, dword ptr [rbx + rdx * 4 + [ displacement ] ] ]
[ test esi, esi ]
[ jnz  [ addr ]  ]
[ lea eax, ptr [rdi  +  [ displacement ] ] ]
[ cmp edi,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov edx, eax ]
[ mov esi, dword ptr [rbx + rdx * 4 + [ displacement ] ] ]
[ test esi, esi ]
[ jnz  [ addr ]  ]
[ cmp edi,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov esi, dword ptr [rbx  +  [ displacement ] ] ]
[ test esi, esi ]
[ jnz  [ addr ]  ]
[ mov r8, qword ptr [rbx  +  [ displacement ] ] ]
[ mov rax, qword ptr [r8  +  [ displacement ] ] ]
[ and rax,  [ addr ]  ]
[ cmp qword ptr [rbx  +  [ displacement ] ], rax ]
[ jb  [ addr ]  ]
[ lea rdx, ptr [r13  +  [ displacement ] ] ]
[ cmp rdx, rax ]
[ jbe  [ addr ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ], r11 ]
[ mov eax, dword ptr [rbx  +  [ displacement ] ] ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ mov rsi, rbx ]
[ mov rdi, r13 ]
[ mov rbp, qword ptr [rsp  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978b390e
#call parent addr: 7f5e978b3af6
#root size: 1135
===============================================================
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ push rbp ]
[ mov rbp, rdi ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov r13, qword ptr [rax  +  [ displacement ] ] ]
[ test rsi, rsi ]
[ jz  [ addr ]  ]
[ cmp qword ptr [rip  +  [ displacement ] ], rdi ]
[ mov rbx, rsi ]
[ jbe  [ addr ]  ]
[ mov byte ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ lea rax, ptr [rbx  +  [ displacement ] ] ]
[ mov r11, r13 ]
[ neg r11 ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ lea rax, ptr [r13 + rbp * 1 + [ displacement ] ] ]
[ and rax, r11 ]
[ mov qword ptr [rsp  +  [ displacement ] ], r11 ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ mov r14, qword ptr [rbx  +  [ displacement ] ] ]
[ mov rax, qword ptr [r14  +  [ displacement ] ] ]
[ mov r12, rax ]
[ and r12,  [ addr ]  ]
[ lea r10, ptr [r14 + r12 * 1] ]
[ cmp r14, qword ptr [rsp  +  [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ test r12, r12 ]
[ jz  [ addr ]  ]
[ cmp r12,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ test al,  [ argument ]  ]
[ jz  [ addr ]  ]
[ lea r15, ptr [rbp  +  [ displacement ] ] ]
[ cmp r15, r12 ]
[ jbe  [ addr ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ cmp rbx, rax ]
[ jz  [ addr ]  ]
[ mov rax, r15 ]
[ mov r8, r14 ]
[ sub rax, r12 ]
[ and r8,  [ addr ]  ]
[ test rax, rax ]
[ jle  [ addr ]  ]
[ lea rax, ptr [r13- [ displacement ] ] ]
[ mov r11, r13 ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ neg r11 ]
[ lea rsi, ptr [r13 + rax * 1 + [ displacement ] ] ]
[ add rsi, rbp ]
[ test byte ptr [rbx  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ sub rsi, r12 ]
[ and rsi, r11 ]
[ mov r13, rsi ]
[ jle  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], r11 ]
[ mov rdi, r13 ]
[ mov qword ptr [rsp  +  [ displacement ] ], r10 ]
[ call qword ptr [rax] ]
CALL===========================================================
#now call addr: 7f5e978b26f3
#call parent addr: 7f5e978b390e
#root size: 1136
===============================================================
[ nop edx, edi ]
[ sub rsp,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978b7d08
#call parent addr: 7f5e978b26f3
#root size: 1137
===============================================================
[ nop edx, edi ]
[ push r12 ]
[ push rbp ]
[ mov rbp, qword ptr [rip  +  [ displacement ] ] ]
[ push rbx ]
[ mov rbx, rdi ]
[ mov r12, qword ptr [rbp] ]
[ test r12, r12 ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ test rbx, rbx ]
[ jz  [ addr ]  ]
[ xor edi, edi ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9792f4a2
#call parent addr: 7f5e978b7d08
#root size: 1138
===============================================================
[ nop edx, edi ]
[ mov eax,  [ argument ]  ]
[ syscall  ]
[ cmp rax,  [ addr ]  ]
[ jnbe  [ addr ]  ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rdx], rax ]
[ cmp rdi, rax ]
[ jnbe  [ addr ]  ]
[ xor eax, eax ]
[ ret  ]
RET========================================================
#ret target: 7f5e9792f4a2
#function name: brk
#func_id: 1304
===========================================================
[ test eax, eax ]
[ js  [ addr ]  ]
[ mov r12, qword ptr [rbp] ]
[ jmp  [ addr ]  ]
[ test rbx, rbx ]
[ jz  [ addr ]  ]
[ jle  [ addr ]  ]
[ mov rax, r12 ]
[ add rax, rbx ]
[ setb al ]
[ test al, al ]
[ jz  [ addr ]  ]
[ lea rdi, ptr [r12 + rbx * 1] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9792f4cc
#call parent addr: 7f5e978b7d08
#root size: 1138
===============================================================
RET========================================================
#ret target: 7f5e9792f4cc
#function name: brk
#func_id: 1304
===========================================================
[ test eax, eax ]
[ js  [ addr ]  ]
[ mov rax, r12 ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ ret  ]
[ mov edx,  [ argument ]  ]
[ cmp rax,  [ addr ]  ]
[ cmovz rax, rdx ]
[ add rsp,  [ argument ]  ]
[ ret  ]
[ mov r8, rax ]
[ nop ]
[ test rax, rax ]
[ mov r10, qword ptr [rsp  +  [ displacement ] ] ]
[ mov r11, qword ptr [rsp  +  [ displacement ] ] ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax, qword ptr [rax] ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov edi,  [ argument ]  ]
[ add rcx, r13 ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], r8 ]
[ jmp  [ addr ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], rcx ]
[ cmp r10, r8 ]
[ jnz  [ addr ]  ]
[ test dil, dil ]
[ jz  [ addr ]  ]
[ add r12, r13 ]
[ mov r8, qword ptr [rip  +  [ displacement ] ] ]
[ or r12,  [ argument ]  ]
[ mov qword ptr [r14  +  [ displacement ] ], r12 ]
[ jmp  [ addr ]  ]
[ test byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ test r12, r12 ]
[ jz  [ addr ]  ]
[ cmp r10, r8 ]
[ jnbe  [ addr ]  ]
[ mov rcx, r8 ]
[ and ecx,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov eax,  [ argument ]  ]
[ sub rax, rcx ]
[ lea rdx, ptr [r8 + rax * 1] ]
[ add rax, r12 ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdx ]
[ lea rsi, ptr [rax + r13 * 1] ]
[ mov rdi, qword ptr [rsp  +  [ displacement ] ] ]
[ lea rdx, ptr [r8 + rsi * 1] ]
[ add rdi, rdx ]
[ sub rax, rdx ]
[ and r11, rdi ]
[ lea rdi, ptr [r11 + rax * 1] ]
[ mov r13, rdi ]
[ test rdi, rdi ]
[ js  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ call qword ptr [rax] ]
[ mov qword ptr [rsp  +  [ displacement ] ], r8 ]
[ mov rax, r12 ]
[ jmp  [ addr ]  ]
[ lea rsi, ptr [rax + r13 * 1] ]
[ mov rdi, qword ptr [rsp  +  [ displacement ] ] ]
[ lea rdx, ptr [r8 + rsi * 1] ]
[ add rdi, rdx ]
[ sub rax, rdx ]
[ and r11, rdi ]
[ lea rdi, ptr [r11 + rax * 1] ]
[ mov r13, rdi ]
[ test rdi, rdi ]
[ js  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ call qword ptr [rax] ]
CALL===========================================================
#now call addr: 7f5e978b29f9
#call parent addr: 7f5e978b7d08
#root size: 1138
===============================================================
[ nop edx, edi ]
[ sub rsp,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978b7d08
#call parent addr: 7f5e978b29f9
#root size: 1139
===============================================================
[ mov rax, r12 ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ ret  ]
RET========================================================
#ret target: 7f5e978b7d08
#function name: sbrk
#func_id: 1305
===========================================================
[ mov edx,  [ argument ]  ]
[ cmp rax,  [ addr ]  ]
[ cmovz rax, rdx ]
[ add rsp,  [ argument ]  ]
[ ret  ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rdx] ]
[ test rdx, rdx ]
[ jnz  [ addr ]  ]
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ mov r8, qword ptr [rsp  +  [ displacement ] ] ]
[ add rcx, r13 ]
[ jmp  [ addr ]  ]
[ sub rax, r8 ]
[ mov qword ptr [rip  +  [ displacement ] ], r8 ]
[ add rax, r13 ]
[ or rax,  [ argument ]  ]
[ mov qword ptr [r8  +  [ displacement ] ], rax ]
[ mov qword ptr [rip  +  [ displacement ] ], rcx ]
[ test r12, r12 ]
[ jz  [ addr ]  ]
[ sub r12,  [ argument ]  ]
[ and r12,  [ addr ]  ]
[ mov rax, r12 ]
[ or rax,  [ argument ]  ]
[ mov qword ptr [r14  +  [ displacement ] ], rax ]
[ mov qword ptr [r14 + r12 * 1 + [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [r14 + r12 * 1 + [ displacement ] ],  [ argument ]  ]
[ cmp r12,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ mov edx,  [ argument ]  ]
[ mov rsi, r14 ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
[ cmp qword ptr [rbx  +  [ displacement ] ], rcx ]
[ jnb  [ addr ]  ]
[ mov qword ptr [rbx  +  [ displacement ] ], rcx ]
[ mov rax, qword ptr [r8  +  [ displacement ] ] ]
[ and rax,  [ addr ]  ]
[ cmp r15, rax ]
[ jnbe  [ addr ]  ]
[ mov rsi, rbp ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ lea rcx, ptr [r8 + rbp * 1] ]
[ sub rax, rbp ]
[ or rsi,  [ argument ]  ]
[ cmp rbx, rdx ]
[ mov qword ptr [rbx  +  [ displacement ] ], rcx ]
[ cmovnz rbp, rsi ]
[ or rax,  [ argument ]  ]
[ add r8,  [ argument ]  ]
[ or rbp,  [ argument ]  ]
[ mov qword ptr [r8- [ displacement ] ], rbp ]
[ mov qword ptr [rcx  +  [ displacement ] ], rax ]
[ add rsp,  [ argument ]  ]
[ mov rax, r8 ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ mov r8, rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ mov rax, r8 ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ mov r8, rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ sub dword ptr [rbp],  [ argument ]  ]
[ test r8, r8 ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ lea rdi, ptr [r8  +  [ displacement ] ] ]
[ and rdi,  [ addr ]  ]
[ mov qword ptr fs:[rax], r8 ]
[ xor eax, eax ]
[ mov qword ptr [r8],  [ argument ]  ]
[ mov qword ptr [r8  +  [ displacement ] ],  [ argument ]  ]
[ sub r8, rdi ]
[ lea ecx, ptr [r8  +  [ displacement ] ] ]
[ shr ecx,  [ argument ]  ]
[ rep stosq qword ptr  [ str ] ]
[ pop rbp ]
[ ret  ]
[ cmp qword ptr [rip  +  [ displacement ] ], rbx ]
[ jbe  [ addr ]  ]
[ mov rax, qword ptr fs:[r12] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ nop dword ptr [rax], eax ]
[ lea rcx, ptr [rax + rbx * 2] ]
[ movzx edx, word ptr [rcx] ]
[ test dx, dx ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov rsi, rbp ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978b4d1d
#call parent addr: 7f5e978b29f9
#root size: 1139
===============================================================
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ sub rax, r13 ]
[ lea rcx, ptr [r8 + r13 * 1] ]
[ mov rbp, qword ptr [rsp  +  [ displacement ] ] ]
[ cmp rbx, rdx ]
[ mov qword ptr [rbx  +  [ displacement ] ], rcx ]
[ setnz dl ]
[ or rax,  [ argument ]  ]
[ add r8,  [ argument ]  ]
[ movzx edx, dl ]
[ shl rdx,  [ argument ]  ]
[ or rdx, r13 ]
[ or rdx,  [ argument ]  ]
[ mov qword ptr [r8- [ displacement ] ], rdx ]
[ mov qword ptr [rcx  +  [ displacement ] ], rax ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ jmp  [ addr ]  ]
RET========================================================
#ret target: 7f5e978b4d1d
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
[ mov r8, rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rax- [ displacement ] ] ]
[ test al,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ test al,  [ argument ]  ]
[ jz  [ addr ]  ]
[ pop rbx ]
[ mov rax, r8 ]
[ pop rbp ]
[ pop r12 ]
[ ret  ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rbx, rax ]
[ lea rax, ptr [rax  +  [ displacement ] ] ]
[ xor edx, edx ]
[ xor esi, esi ]
[ mov qword ptr [rbx  +  [ displacement ] ], rax ]
[ lea rcx, ptr [rbx  +  [ displacement ] ] ]
[ mov rdi, rbx ]
[ mov r12, rbx ]
[ lea r8, ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9789dae0
#call parent addr: 7f5e978b29f9
#root size: 1139
===============================================================
[ nop edx, edi ]
[ push r13 ]
[ mov r13, r8 ]
[ push r12 ]
[ mov r12d, edx ]
[ push rbp ]
[ mov rbp, rdi ]
[ push rbx ]
[ mov rbx, rcx ]
[ sub rsp,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978ad93a
#call parent addr: 7f5e9789dae0
#root size: 1140
===============================================================
[ nop edx, edi ]
[ mov edx, dword ptr [rip  +  [ displacement ] ] ]
[ or esi,  [ addr ]  ]
[ mov dword ptr [rdi  +  [ displacement ] ],  [ argument ]  ]
[ mov dword ptr [rdi], esi ]
[ test edx, edx ]
[ jz  [ addr ]  ]
[ mov dword ptr [rdi  +  [ displacement ] ],  [ argument ]  ]
[ xor eax, eax ]
[ pxor xmm0, xmm0 ]
[ mov qword ptr [rdi  +  [ displacement ] ],  [ argument ]  ]
[ mov word ptr [rdi  +  [ displacement ] ], ax ]
[ mov rax, qword ptr [rdi  +  [ displacement ] ] ]
[ movups xmmword ptr [rdi  +  [ displacement ] ], xmm0 ]
[ movups xmmword ptr [rdi  +  [ displacement ] ], xmm0 ]
[ movups xmmword ptr [rdi  +  [ displacement ] ], xmm0 ]
[ movups xmmword ptr [rdi  +  [ displacement ] ], xmm0 ]
[ movups xmmword ptr [rdi  +  [ displacement ] ], xmm0 ]
[ movups xmmword ptr [rdi  +  [ displacement ] ], xmm0 ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov qword ptr [rax],  [ argument ]  ]
[ mov qword ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ ret  ]
[ xor eax, eax ]
[ pxor xmm0, xmm0 ]
[ mov qword ptr [rdi  +  [ displacement ] ],  [ argument ]  ]
[ mov word ptr [rdi  +  [ displacement ] ], ax ]
[ mov rax, qword ptr [rdi  +  [ displacement ] ] ]
[ movups xmmword ptr [rdi  +  [ displacement ] ], xmm0 ]
[ movups xmmword ptr [rdi  +  [ displacement ] ], xmm0 ]
[ movups xmmword ptr [rdi  +  [ displacement ] ], xmm0 ]
[ movups xmmword ptr [rdi  +  [ displacement ] ], xmm0 ]
[ movups xmmword ptr [rdi  +  [ displacement ] ], xmm0 ]
[ movups xmmword ptr [rdi  +  [ displacement ] ], xmm0 ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov qword ptr [rax],  [ argument ]  ]
[ mov qword ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5e978ad93a
#function name: _IO_enable_locks
#func_id: 765
===========================================================
[ mov dword ptr [rbp  +  [ displacement ] ], r12d ]
[ test r12d, r12d ]
[ js  [ addr ]  ]
[ mov qword ptr [rbp  +  [ displacement ] ], rbx ]
[ pxor xmm0, xmm0 ]
[ mov qword ptr [rbx  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rbx  +  [ displacement ] ], r13 ]
[ movups xmmword ptr [rbx], xmm0 ]
[ movups xmmword ptr [rbx  +  [ displacement ] ], xmm0 ]
[ movups xmmword ptr [rbx  +  [ displacement ] ], xmm0 ]
[ movups xmmword ptr [rbx  +  [ displacement ] ], xmm0 ]
[ movups xmmword ptr [rbx  +  [ displacement ] ], xmm0 ]
[ mov qword ptr [rbp  +  [ displacement ] ],  [ argument ]  ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ ret  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov rdi, rbx ]
[ mov qword ptr [rbx  +  [ displacement ] ], rax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9789daf6
#call parent addr: 7f5e9789dae0
#root size: 1140
===============================================================
[ nop edx, edi ]
[ or dword ptr [rdi],  [ argument ]  ]
[ push rbx ]
[ mov rbx, rdi ]
[ mov qword ptr [rdi  +  [ displacement ] ],  [ addr ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978aaf09
#call parent addr: 7f5e9789daf6
#root size: 1141
===============================================================
[ nop edx, edi ]
[ push r12 ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov rax, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ xor eax, eax ]
[ mov eax, dword ptr [rdi] ]
[ test al,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov ebp, dword ptr [rip  +  [ displacement ] ] ]
[ or al,  [ argument ]  ]
[ mov rbx, rdi ]
[ mov dword ptr [rdi], eax ]
[ test ebp, ebp ]
[ jnz  [ addr ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ lea rax, ptr [rip- [ displacement ] ] ]
[ mov qword ptr [rsp], rax ]
[ mov r12, qword ptr fs:[ [ displacement ] ] ]
[ cmp qword ptr [rip  +  [ displacement ] ], r12 ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov rdi, rsp ]
[ xor edx, edx ]
[ lea rsi, ptr [rip- [ displacement ] ] ]
[ ror rax,  [ argument ]  ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ call rax ]
CALL===========================================================
#now call addr: 7f5e978ac750
#call parent addr: 7f5e978aaf09
#root size: 1142
===============================================================
[ nop edx, edi ]
[ mov qword ptr [rdi], rsi ]
[ mov qword ptr [rdi  +  [ displacement ] ], rdx ]
[ mov rcx, qword ptr fs:[ [ displacement ] ] ]
[ mov rax, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr [rdi  +  [ displacement ] ], rax ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ lea rsi, ptr [rcx  +  [ displacement ] ] ]
[ mov edx, eax ]
[ mov ecx, eax ]
[ test al,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ sar edx,  [ argument ]  ]
[ and edx,  [ argument ]  ]
[ mov dword ptr [rdi  +  [ displacement ] ], edx ]
[ mov qword ptr fs:[ [ displacement ] ], rdi ]
[ ret  ]
RET========================================================
#ret target: 7f5e978ac750
#function name: __pthread_cleanup_push_defer
#func_id: 2383
===========================================================
[ jmp  [ addr ]  ]
[ mov r12, qword ptr fs:[ [ displacement ] ] ]
[ cmp qword ptr [rip  +  [ displacement ] ], r12 ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov edx,  [ argument ]  ]
[ cmpxchg dword ptr [rip  +  [ displacement ] ], edx ]
[ mov qword ptr [rip  +  [ displacement ] ], r12 ]
[ mov edx, dword ptr [rip  +  [ displacement ] ] ]
[ mov ecx, dword ptr [rbx] ]
[ mov qword ptr [rip  +  [ displacement ] ], rbx ]
[ add edx,  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], edx ]
[ and ecx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rdi, qword ptr [rbx  +  [ displacement ] ] ]
[ mov r12, qword ptr fs:[ [ displacement ] ] ]
[ cmp qword ptr [rdi  +  [ displacement ] ], r12 ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ mov edx,  [ argument ]  ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ cmpxchg dword ptr [rdi], edx ]
[ mov rdi, qword ptr [rbx  +  [ displacement ] ] ]
[ mov eax, dword ptr [rbx] ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ add dword ptr [rdi  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rdi  +  [ displacement ] ], r12 ]
[ mov qword ptr [rip  +  [ displacement ] ], rbx ]
[ mov qword ptr [rbx  +  [ displacement ] ], rdx ]
[ test ah,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rdi  +  [ displacement ] ] ]
[ sub eax,  [ argument ]  ]
[ mov dword ptr [rdi  +  [ displacement ] ], eax ]
[ mov edx, dword ptr [rip  +  [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov qword ptr [rdi  +  [ displacement ] ],  [ argument ]  ]
[ mov edx, dword ptr fs:[ [ displacement ] ] ]
[ test edx, edx ]
[ jnz  [ addr ]  ]
[ sub dword ptr [rdi],  [ argument ]  ]
[ mov edx, dword ptr [rip  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ mov qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ sub edx,  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], edx ]
[ jnz  [ addr ]  ]
[ mov qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ sub dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ test ebp, ebp ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov rdi, rsp ]
[ xor esi, esi ]
[ ror rax,  [ argument ]  ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ call rax ]
CALL===========================================================
#now call addr: 7f5e978ac707
#call parent addr: 7f5e978aaf09
#root size: 1142
===============================================================
[ nop edx, edi ]
[ mov rax, qword ptr [rdi  +  [ displacement ] ] ]
[ mov rdx, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr fs:[ [ displacement ] ], rax ]
[ mov ecx, dword ptr [rdi  +  [ displacement ] ] ]
[ test ecx, ecx ]
[ jnz  [ addr ]  ]
[ test esi, esi ]
[ jz  [ addr ]  ]
[ mov r8, qword ptr [rdi  +  [ displacement ] ] ]
[ mov rax, qword ptr [rdi] ]
[ mov rdi, r8 ]
[ jmp rax ]
[ ret  ]
RET========================================================
#ret target: 7f5e978ac707
#function name: _pthread_cleanup_pop_restore
#func_id: 2384
===========================================================
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ ret  ]
[ mov dword ptr [rbx  +  [ displacement ] ],  [ addr ]  ]
[ pop rbx ]
[ ret  ]
[ mov ecx,  [ argument ]  ]
[ mov rdx, r13 ]
[ mov rsi, rbp ]
[ mov rdi, rbx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9789db09
#call parent addr: 7f5e978aaf09
#root size: 1142
===============================================================
[ nop edx, edi ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov rax, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ xor eax, eax ]
[ cmp dword ptr [rdi  +  [ displacement ] ],  [ addr ]  ]
[ jnz  [ addr ]  ]
[ movzx eax, byte ptr [rdx] ]
[ mov rbp, rdi ]
[ mov rbx, rdx ]
[ mov r9d, ecx ]
[ cmp al,  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp al,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov r8d,  [ argument ]  ]
[ xor ecx, ecx ]
[ xor edx, edx ]
[ jmp  [ addr ]  ]
[ movzx eax, byte ptr [rbx  +  [ displacement ] ] ]
[ lea rdi, ptr [rbx  +  [ displacement ] ] ]
[ cmp al,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ cmp al,  [ argument ]  ]
[ jle  [ addr ]  ]
[ sub eax,  [ argument ]  ]
[ cmp al,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ lea r10, ptr [rip  +  [ displacement ] ] ]
[ movzx eax, al ]
[ movsxd rax, dword ptr [r10 + rax * 4] ]
[ add rax, r10 ]
[ jmp rax ]
[ or dword ptr [rbp  +  [ displacement ] ],  [ argument ]  ]
[ or edx,  [ addr ]  ]
[ mov rdi, rbx ]
[ jmp  [ addr ]  ]
[ movzx eax, byte ptr [rbx  +  [ displacement ] ] ]
[ lea r10, ptr [rbx  +  [ displacement ] ] ]
[ cmp al,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ cmp al,  [ argument ]  ]
[ jle  [ addr ]  ]
[ sub eax,  [ argument ]  ]
[ cmp al,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ test al, al ]
[ jz  [ addr ]  ]
[ cmp al,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ and r8d,  [ argument ]  ]
[ mov ecx,  [ argument ]  ]
[ jmp  [ addr ]  ]
[ mov rbx, rdi ]
[ jmp  [ addr ]  ]
[ or edx, ecx ]
[ mov rdi, rbp ]
[ mov ecx,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978ab455
#call parent addr: 7f5e9789db09
#root size: 1143
===============================================================
[ nop edx, edi ]
[ push r12 ]
[ xor eax, eax ]
[ push rbp ]
[ mov ebp, r8d ]
[ push rbx ]
[ mov rbx, rdi ]
[ mov rdi, rsi ]
[ mov esi, edx ]
[ mov edx, ecx ]
[ test byte ptr [rbx  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978ab191
#call parent addr: 7f5e978ab455
#root size: 1144
===============================================================
[ nop edx, edi ]
[ push r12 ]
[ mov r10d, esi ]
[ mov r12d, esi ]
[ push rbp ]
[ mov rbp, rdi ]
[ sub rsp,  [ argument ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdx ]
[ mov rax, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ xor eax, eax ]
[ and r10d,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov eax, esi ]
[ and eax,  [ addr ]  ]
[ cmp eax,  [ addr ]  ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov edx, r12d ]
[ mov rsi, rbp ]
[ mov edi,  [ addr ]  ]
[ mov eax,  [ argument ]  ]
[ syscall  ]
[ cmp rax,  [ addr ]  ]
[ jnbe  [ addr ]  ]
[ mov rcx, qword ptr [rsp  +  [ displacement ] ] ]
[ xor rcx, qword ptr fs:[ [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ pop rbp ]
[ pop r12 ]
[ ret  ]
RET========================================================
#ret target: 7f5e978ab191
#function name: open64
#func_id: 1214
===========================================================
[ mov r12d, eax ]
[ test r12d, r12d ]
[ js  [ addr ]  ]
[ mov edx, dword ptr [rbx] ]
[ mov eax, ebp ]
[ and ebp,  [ argument ]  ]
[ mov dword ptr [rbx  +  [ displacement ] ], r12d ]
[ and eax,  [ argument ]  ]
[ and edx,  [ addr ]  ]
[ or edx, eax ]
[ mov dword ptr [rbx], edx ]
[ cmp ebp,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rbp, qword ptr [rbx  +  [ displacement ] ] ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ sub rax, rdx ]
[ mov rcx, rbp ]
[ sub rcx, rdx ]
[ cmp rax, rcx ]
[ jbe  [ addr ]  ]
[ mov rdi, rbx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978ab203
#call parent addr: 7f5e978ab455
#root size: 1144
===============================================================
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ ret  ]
RET========================================================
#ret target: 7f5e978ab203
#function name: _IO_link_in
#func_id: 752
===========================================================
[ mov rax, rbx ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ ret  ]
[ mov r12, rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ lea rdi, ptr [rbx  +  [ displacement ] ] ]
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978ab471
#call parent addr: 7f5e978ab455
#root size: 1144
===============================================================
[ nop edx, edi ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ movzx ebx, byte ptr [rsi] ]
[ mov rax, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ xor eax, eax ]
[ test bl, bl ]
[ jz  [ addr ]  ]
[ movzx ebp, bl ]
[ mov r13, rsi ]
[ mov esi, ebp ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978bb15b
#call parent addr: 7f5e978ab471
#root size: 1145
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ mov ecx, edi ]
[ vmovd xmm0, esi ]
[ vpxor xmm9, xmm9, xmm9 ]
[ vpbroadcastb ymm0, xmm0 ]
[ and ecx,  [ argument ]  ]
[ cmp ecx,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ vmovdqu ymm8, ymmword ptr [rdi] ]
[ vpcmpeqb ymm1, ymm0, ymm8 ]
[ vpcmpeqb ymm2, ymm9, ymm8 ]
[ vpor ymm1, ymm2, ymm1 ]
[ vpmovmskb eax, ymm1 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ add rdi,  [ argument ]  ]
[ and ecx,  [ argument ]  ]
[ and rdi,  [ addr ]  ]
[ jmp  [ addr ]  ]
[ tzcnt eax, eax ]
[ xor edx, edx ]
[ lea rax, ptr [rdi + rax * 1] ]
[ cmp sil, byte ptr [rax] ]
[ cmovnz rax, rdx ]
[ vzeroupper ]
[ ret  ]
RET========================================================
#ret target: 7f5e978bb15b
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ mov r12, rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ movzx eax, byte ptr [r13  +  [ displacement ] ] ]
[ test al, al ]
[ jz  [ addr ]  ]
[ movzx edx, byte ptr [r13  +  [ displacement ] ] ]
[ test dl, dl ]
[ jz  [ addr ]  ]
[ xor r12d, r12d ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ mov rax, r12 ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ mov rbx, rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ lea r15, ptr [rax  +  [ displacement ] ] ]
[ mov esi,  [ argument ]  ]
[ mov rdi, r15 ]
[ call  [ addr.func ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ mov rax, r12 ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ test byte ptr [rbx  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ test byte ptr [rbx],  [ argument ]  ]
[ jz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ mov rax, r12 ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ ret  ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov r12, rax ]
[ mov esi,  [ argument ]  ]
[ lea r13, ptr [rsp  +  [ displacement ] ] ]
[ mov rdi, rax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e97ad09bb
#call parent addr: 7f5e978ab471
#root size: 1145
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ push  [ argument ]  ]
[ bnd jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac67fc29
#call parent addr: 7f5e97ad09bb
#root size: 1146
===============================================================
CALL===========================================================
#now call addr: 7f5eac678182
#call parent addr: 7f5eac67fc29
#root size: 1147
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac678182
#root size: 1148
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 1149
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 1150
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 1150
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ nop edx, edi ]
[ mov edx, dword ptr [rdi] ]
[ xor eax, eax ]
[ test dh,  [ argument ]  ]
[ setnz al ]
[ add eax,  [ argument ]  ]
[ test esi, esi ]
[ jz  [ addr ]  ]
[ mov ecx, edx ]
[ or dh,  [ argument ]  ]
[ and ch,  [ argument ]  ]
[ cmp esi,  [ argument ]  ]
[ cmovnz edx, ecx ]
[ mov dword ptr [rdi], edx ]
[ ret  ]
[ lea rbx, ptr [rsp  +  [ displacement ] ] ]
[ mov rcx, r12 ]
[ mov rsi, r13 ]
[ mov edx,  [ argument ]  ]
[ mov rdi, rbx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e97ad09d3
#call parent addr: 7f5eac672885
#root size: 1150
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ push  [ argument ]  ]
[ bnd jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac67fc29
#call parent addr: 7f5e97ad09d3
#root size: 1151
===============================================================
CALL===========================================================
#now call addr: 7f5eac678182
#call parent addr: 7f5eac67fc29
#root size: 1152
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac678182
#root size: 1153
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 1154
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 1155
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 1155
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ nop edx, edi ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ], rsi ]
[ mov dword ptr [rsp  +  [ displacement ] ], edx ]
[ test rdi, rdi ]
[ jz  [ addr ]  ]
[ test rsi, rsi ]
[ jz  [ addr ]  ]
[ mov edx, dword ptr [rcx] ]
[ mov rbx, rcx ]
[ mov rbp, rdi ]
[ mov ecx, edx ]
[ and ecx,  [ argument ]  ]
[ jz  [ addr ]  ]
[ and edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [rbp],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ cmp qword ptr [rax],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ mov edi,  [ argument ]  ]
[ mov qword ptr [rax],  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9789e6bf
#call parent addr: 7f5eac672885
#root size: 1155
===============================================================
[ and rax,  [ addr ]  ]
[ lea rbx, ptr [rax- [ displacement ] ] ]
[ shr rbx,  [ argument ]  ]
[ jmp  [ addr ]  ]
[ mov r12, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax, qword ptr fs:[r12] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ cmp rbx, qword ptr [rip  +  [ displacement ] ] ]
[ jb  [ addr ]  ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ lea rcx, ptr [rax + rbx * 2] ]
[ movzx edx, word ptr [rcx] ]
[ test dx, dx ]
[ jz  [ addr ]  ]
[ lea rax, ptr [rax + rbx * 8] ]
[ sub edx,  [ argument ]  ]
[ mov r8, qword ptr [rax  +  [ displacement ] ] ]
[ mov rsi, qword ptr [r8] ]
[ mov qword ptr [rax  +  [ displacement ] ], rsi ]
[ mov word ptr [rcx], dx ]
[ mov qword ptr [r8  +  [ displacement ] ],  [ argument ]  ]
[ jmp  [ addr ]  ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov rsi, rbp ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978b52cf
#call parent addr: 7f5e9789e6bf
#root size: 1156
===============================================================
[ lea eax, ptr [r14- [ displacement ] ] ]
[ lea rcx, ptr [rax * 8  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ lea rsi, ptr [rbx + rax * 8] ]
[ mov r8, qword ptr [rsi  +  [ displacement ] ] ]
[ test r8, r8 ]
[ jz  [ addr ]  ]
[ add rcx, rbx ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ mov rdx, qword ptr [r8  +  [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov qword ptr [rsi  +  [ displacement ] ], rdx ]
[ mov eax, dword ptr [r8  +  [ displacement ] ] ]
[ shr eax,  [ argument ]  ]
[ cmp eax, r14d ]
[ jnz  [ addr ]  ]
RET========================================================
#ret target: 7f5e978b52cf
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
[ mov r8, rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rax- [ displacement ] ] ]
[ test al,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ test al,  [ argument ]  ]
[ jz  [ addr ]  ]
[ pop rbx ]
[ mov rax, r8 ]
[ pop rbp ]
[ pop r12 ]
[ ret  ]
[ mov qword ptr [rbp], rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov r8, qword ptr [rbx  +  [ displacement ] ] ]
[ mov r14, qword ptr [rbx  +  [ displacement ] ] ]
[ sub r14, r8 ]
[ test r14, r14 ]
[ jle  [ addr ]  ]
[ xor r15d, r15d ]
[ jmp  [ addr ]  ]
[ mov rdi, rbx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9789e893
#call parent addr: 7f5e9789e6bf
#root size: 1156
===============================================================
[ nop edx, edi ]
[ push rbp ]
[ mov rbp, rdi ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov eax, dword ptr [rdi  +  [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov dword ptr [rdi  +  [ displacement ] ],  [ addr ]  ]
[ mov edx, dword ptr [rbp] ]
[ test dh,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rbp  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rbp  +  [ displacement ] ] ]
[ cmp rax, rsi ]
[ jb  [ addr ]  ]
[ and dh,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [rbp  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rdi, rbp ]
[ call  [ addr.func ]  ]
[ mov rdi, qword ptr [rbp  +  [ displacement ] ] ]
[ test rdi, rdi ]
[ jz  [ addr ]  ]
[ test dword ptr [rbp],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ call  [ addr.func ]  ]
[ mov rbx, qword ptr [rbp  +  [ displacement ] ] ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ sub rax, rdx ]
[ mov rcx, rbx ]
[ sub rcx, rdx ]
[ cmp rax, rcx ]
[ jbe  [ addr ]  ]
[ mov rax, qword ptr [rbx  +  [ displacement ] ] ]
[ add rsp,  [ argument ]  ]
[ mov rdi, rbp ]
[ pop rbx ]
[ pop rbp ]
[ jmp rax ]
[ nop edx, edi ]
[ mov eax, dword ptr [rdi] ]
[ test al,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ push rbp ]
[ push rbx ]
[ mov rbx, rdi ]
[ sub rsp,  [ argument ]  ]
[ test al,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rdx, qword ptr [rdi  +  [ displacement ] ] ]
[ cmp rdx, qword ptr [rdi  +  [ displacement ] ] ]
[ jb  [ addr ]  ]
[ cmp qword ptr [rdi  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ test eax,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov r12, qword ptr [rax] ]
[ mov edx, dword ptr [r12] ]
[ mov ecx, edx ]
[ and ecx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rdi, qword ptr [rdi  +  [ displacement ] ] ]
[ test rdi, rdi ]
[ jz  [ addr ]  ]
[ call  [ addr.func ]  ]
[ mov rdi, rbx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978abe1f
#call parent addr: 7f5e9789e893
#root size: 1157
===============================================================
[ nop edx, edi ]
[ cmp qword ptr [rdi  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ ret  ]
[ push r12 ]
[ push rbp ]
[ push rbx ]
[ mov eax, dword ptr [rdi] ]
[ mov rbx, rdi ]
[ test al,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov edx, dword ptr [rdi  +  [ displacement ] ] ]
[ test edx, edx ]
[ jle  [ addr ]  ]
[ mov rbp, qword ptr [rbx  +  [ displacement ] ] ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ sub rax, rdx ]
[ mov rcx, rbp ]
[ sub rcx, rdx ]
[ cmp rax, rcx ]
[ jbe  [ addr ]  ]
[ mov rbp, qword ptr [rbx  +  [ displacement ] ] ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ sub rax, rdx ]
[ mov rcx, rbp ]
[ sub rcx, rdx ]
[ cmp rax, rcx ]
[ jbe  [ addr ]  ]
[ mov rdi, rbx ]
[ call qword ptr [rbp  +  [ displacement ] ] ]
CALL===========================================================
#now call addr: 7f5e978ad04d
#call parent addr: 7f5e978abe1f
#root size: 1158
===============================================================
[ nop edx, edi ]
[ push r12 ]
[ push rbp ]
[ mov rbp, rdi ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov rax, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ xor eax, eax ]
[ mov eax, dword ptr [rdi  +  [ displacement ] ] ]
[ test eax, eax ]
[ js  [ addr ]  ]
[ mov rbx, qword ptr [rdi  +  [ displacement ] ] ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ sub rax, rdx ]
[ mov rcx, rbx ]
[ sub rcx, rdx ]
[ cmp rax, rcx ]
[ jbe  [ addr ]  ]
[ mov rsi, rsp ]
[ mov rdi, rbp ]
[ call qword ptr [rbx  +  [ displacement ] ] ]
CALL===========================================================
#now call addr: 7f5e9789ce4d
#call parent addr: 7f5e978ad04d
#root size: 1159
===============================================================
[ nop edx, edi ]
[ mov rdx, rsi ]
[ mov esi, dword ptr [rdi  +  [ displacement ] ] ]
[ mov edi,  [ argument ]  ]
[ jmp  [ addr ]  ]
[ nop edx, edi ]
[ mov r8d, edi ]
[ mov edi, esi ]
[ mov rsi, rdx ]
[ cmp r8d,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ mov eax,  [ argument ]  ]
[ syscall  ]
[ cmp rax,  [ addr ]  ]
[ jnbe  [ addr ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5e9789ce4d
#function name: __fxstat64
#func_id: 1196
===========================================================
[ test eax, eax ]
[ js  [ addr ]  ]
[ mov eax, dword ptr [rsp  +  [ displacement ] ] ]
[ and eax,  [ argument ]  ]
[ cmp eax,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rbx, qword ptr [rsp  +  [ displacement ] ] ]
[ lea rax, ptr [rbx- [ displacement ] ] ]
[ cmp rax,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ mov rdi, rbx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9789ce7f
#call parent addr: 7f5e978ad04d
#root size: 1159
===============================================================
CALL===========================================================
#now call addr: 7f5e978b52cf
#call parent addr: 7f5e9789ce7f
#root size: 1160
===============================================================
[ mov rdi, rax ]
[ mov rcx, rax ]
[ mov rsi, rax ]
[ mov r15, rax ]
[ shr rsi,  [ argument ]  ]
[ shr r15,  [ argument ]  ]
[ mov edx,  [ argument ]  ]
[ shr rdi,  [ argument ]  ]
[ shr rcx,  [ argument ]  ]
[ lea r8d, ptr [r15  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rsi ]
[ shr rax,  [ argument ]  ]
[ cmp r13,  [ addr ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ], r15 ]
[ lea r11d, ptr [rdi  +  [ displacement ] ] ]
[ cmovnbe rax, rdx ]
[ mov rdx, r15 ]
[ lea r15d, ptr [rsi  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdi ]
[ mov qword ptr [rsp  +  [ displacement ] ], rcx ]
[ lea r9d, ptr [rax  +  [ displacement ] ] ]
[ mov rax, rsi ]
[ mov esi, ecx ]
[ mov dword ptr [rsp  +  [ displacement ] ], r11d ]
[ add esi,  [ argument ]  ]
[ mov dword ptr [rsp  +  [ displacement ] ], r9d ]
[ mov dword ptr [rsp  +  [ displacement ] ], r8d ]
[ mov dword ptr [rsp  +  [ displacement ] ], r15d ]
[ mov dword ptr [rsp  +  [ displacement ] ], esi ]
[ mov dword ptr [rsp  +  [ displacement ] ], r11d ]
[ cmp rdi,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ mov dword ptr [rsp  +  [ displacement ] ], esi ]
[ cmp rcx,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ mov dword ptr [rsp  +  [ displacement ] ], r15d ]
[ cmp rax,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ mov eax, dword ptr [rbx  +  [ displacement ] ] ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ mov rdi, rbx ]
[ call  [ addr.func ]  ]
[ lea rax, ptr [r13- [ displacement ] ] ]
[ mov r12, qword ptr [rip  +  [ displacement ] ] ]
[ shr rax,  [ argument ]  ]
[ mov r15, rax ]
[ xor eax, eax ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ cmp qword ptr fs:[r12],  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp qword ptr [rip  +  [ displacement ] ], r15 ]
[ cmovnbe rax, r13 ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ mov qword ptr [rsp],  [ argument ]  ]
[ lea r11, ptr [rbx  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rbp ]
[ mov dword ptr [rsp  +  [ displacement ] ], r14d ]
[ mov r14, r12 ]
[ mov rsi, qword ptr [rbx  +  [ displacement ] ] ]
[ cmp rsi, r11 ]
[ jz  [ addr ]  ]
[ mov rbp, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ test rbp, rbp ]
[ setnz byte ptr [rsp  +  [ displacement ] ] ]
[ mov r10, qword ptr fs:[r14] ]
[ xor edi, edi ]
[ xor r8d, r8d ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ lea rax, ptr [r13  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ lea rax, ptr [r10 + r15 * 2] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ lea rax, ptr [r10 + r15 * 8] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ mov rax, qword ptr [rsi  +  [ displacement ] ] ]
[ and rax,  [ addr ]  ]
[ lea r9, ptr [rsi + rax * 1] ]
[ cmp rax,  [ argument ]  ]
[ jbe  [ addr ]  ]
RET========================================================
#ret target: 7f5e978b52cf
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
[ mov rsi, rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ lea rdx, ptr [rax + rbx * 1] ]
[ mov ecx,  [ argument ]  ]
[ mov rdi, rbp ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9789ce98
#call parent addr: 7f5e9789ce7f
#root size: 1160
===============================================================
[ nop edx, edi ]
[ push rbp ]
[ mov ebp, ecx ]
[ push rbx ]
[ mov rbx, rdi ]
[ sub rsp,  [ argument ]  ]
[ mov rdi, qword ptr [rdi  +  [ displacement ] ] ]
[ mov eax, dword ptr [rbx] ]
[ mov qword ptr [rsp], rsi ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdx ]
[ test rdi, rdi ]
[ jz  [ addr ]  ]
[ test al,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov edx, eax ]
[ movq xmm0, qword ptr [rsp] ]
[ or eax,  [ argument ]  ]
[ and edx,  [ addr ]  ]
[ test ebp, ebp ]
[ cmovnz eax, edx ]
[ movhps xmm0, qword ptr [rsp  +  [ displacement ] ] ]
[ movups xmmword ptr [rbx  +  [ displacement ] ], xmm0 ]
[ mov dword ptr [rbx], eax ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ ret  ]
[ mov edx, eax ]
[ movq xmm0, qword ptr [rsp] ]
[ or eax,  [ argument ]  ]
[ and edx,  [ addr ]  ]
[ test ebp, ebp ]
[ cmovnz eax, edx ]
[ movhps xmm0, qword ptr [rsp  +  [ displacement ] ] ]
[ movups xmmword ptr [rbx  +  [ displacement ] ], xmm0 ]
[ mov dword ptr [rbx], eax ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ ret  ]
RET========================================================
#ret target: 7f5e9789ce98
#function name: _IO_setb
#func_id: 758
===========================================================
[ mov eax,  [ argument ]  ]
[ mov rcx, qword ptr [rsp  +  [ displacement ] ] ]
[ xor rcx, qword ptr fs:[ [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ ret  ]
[ cmp eax,  [ addr ]  ]
[ jnz  [ addr ]  ]
[ mov rdi, qword ptr [rbx  +  [ displacement ] ] ]
[ mov eax, dword ptr [rbx] ]
[ lea rbp, ptr [rbx  +  [ displacement ] ] ]
[ lea r12, ptr [rbx  +  [ displacement ] ] ]
[ test rdi, rdi ]
[ jz  [ addr ]  ]
[ test al,  [ argument ]  ]
[ jz  [ addr ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ ret  ]
[ mov eax, dword ptr [rbx] ]
[ test eax,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ lea r15, ptr [rip  +  [ displacement ] ] ]
[ lea rbp, ptr [rip  +  [ displacement ] ] ]
[ sub r15, rbp ]
[ lea r13, ptr [rip  +  [ displacement ] ] ]
[ mov r14, r15 ]
[ mov rdi, rbx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978abcde
#call parent addr: 7f5e9789ce7f
#root size: 1160
===============================================================
[ nop edx, edi ]
[ push rbp ]
[ push rbx ]
[ mov rbx, rdi ]
[ sub rsp,  [ argument ]  ]
[ mov rax, qword ptr [rdi  +  [ displacement ] ] ]
[ cmp rax, qword ptr [rdi  +  [ displacement ] ] ]
[ jbe  [ addr ]  ]
[ mov rbp, qword ptr [rdi  +  [ displacement ] ] ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ sub rax, rdx ]
[ mov rsi, rbp ]
[ sub rsi, rdx ]
[ cmp rax, rsi ]
[ jbe  [ addr ]  ]
[ mov esi,  [ addr ]  ]
[ mov rdi, rbx ]
[ call qword ptr [rbp  +  [ displacement ] ] ]
[ mov edx, dword ptr [rbx] ]
[ test dh,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rcx, qword ptr [rbx  +  [ displacement ] ] ]
[ mov qword ptr [rbx  +  [ displacement ] ], rcx ]
[ cmp qword ptr [rbx  +  [ displacement ] ], rax ]
[ jnb  [ addr ]  ]
[ mov qword ptr [rbx  +  [ displacement ] ], rax ]
[ and dh,  [ argument ]  ]
[ mov qword ptr [rbx  +  [ displacement ] ], rax ]
[ mov dword ptr [rbx], edx ]
[ mov qword ptr [rbx  +  [ displacement ] ], rax ]
[ mov qword ptr [rbx  +  [ displacement ] ], rax ]
[ xor eax, eax ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ ret  ]
[ and dh,  [ argument ]  ]
[ mov qword ptr [rbx  +  [ displacement ] ], rax ]
[ mov dword ptr [rbx], edx ]
[ mov qword ptr [rbx  +  [ displacement ] ], rax ]
[ mov qword ptr [rbx  +  [ displacement ] ], rax ]
[ xor eax, eax ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ ret  ]
RET========================================================
#ret target: 7f5e978abcde
#function name: _IO_switch_to_get_mode
#func_id: 753
===========================================================
[ mov rbp, qword ptr [rbx  +  [ displacement ] ] ]
[ movdqu xmm0, xmmword ptr [rbx  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rbx  +  [ displacement ] ] ]
[ mov rax, rbp ]
[ punpcklqdq xmm0, xmm0 ]
[ sub rax, r13 ]
[ movups xmmword ptr [rbx  +  [ displacement ] ], xmm0 ]
[ movups xmmword ptr [rbx  +  [ displacement ] ], xmm0 ]
[ movups xmmword ptr [rbx  +  [ displacement ] ], xmm0 ]
[ cmp rax, r14 ]
[ jnb  [ addr ]  ]
[ mov rdx, qword ptr [rbx  +  [ displacement ] ] ]
[ mov rdi, rbx ]
[ sub rdx, rsi ]
[ call qword ptr [rbp  +  [ displacement ] ] ]
CALL===========================================================
#now call addr: 7f5e978abd1c
#call parent addr: 7f5e9789ce7f
#root size: 1160
===============================================================
[ nop edx, edi ]
[ mov r8d, dword ptr [rdi  +  [ displacement ] ] ]
[ test byte ptr [rdi  +  [ displacement ] ],  [ argument ]  ]
[ mov edi, r8d ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ nop edx, edi ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ syscall  ]
[ cmp rax,  [ addr ]  ]
[ jnbe  [ addr ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5e978abd1c
#function name: read
#func_id: 1219
===========================================================
[ test rax, rax ]
[ jle  [ addr ]  ]
[ mov rdx, qword ptr [rbx  +  [ displacement ] ] ]
[ add qword ptr [rbx  +  [ displacement ] ], rax ]
[ cmp rdx,  [ addr ]  ]
[ jz  [ addr ]  ]
[ add rax, rdx ]
[ mov qword ptr [rbx  +  [ displacement ] ], rax ]
[ mov rax, qword ptr [rbx  +  [ displacement ] ] ]
[ movzx eax, byte ptr [rax] ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ mov rax, qword ptr [rbx  +  [ displacement ] ] ]
[ movzx eax, byte ptr [rax] ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ cmp eax,  [ addr ]  ]
[ jz  [ addr ]  ]
[ mov r8, qword ptr [rbx  +  [ displacement ] ] ]
[ mov r14, qword ptr [rbx  +  [ displacement ] ] ]
[ sub r14, r8 ]
[ jmp  [ addr ]  ]
[ xor r15d, r15d ]
[ jmp  [ addr ]  ]
[ mov esi, dword ptr [rsp  +  [ displacement ] ] ]
[ mov rdx, r14 ]
[ mov rdi, r8 ]
[ mov qword ptr [rsp  +  [ displacement ] ], r8 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e9789ce7f
#root size: 1160
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ mov ecx, edi ]
[ vmovd xmm0, esi ]
[ vpbroadcastb ymm0, xmm0 ]
[ and ecx,  [ argument ]  ]
[ cmp ecx,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ vpcmpeqb ymm1, ymm0, ymmword ptr [rdi] ]
[ vpmovmskb eax, ymm1 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ tzcnt eax, eax ]
[ cmp rdx, rax ]
[ jbe  [ addr ]  ]
[ add rax, rdi ]
[ vzeroupper ]
[ ret  ]
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ mov r8, qword ptr [rsp  +  [ displacement ] ] ]
[ mov r13, rax ]
[ sub rax, r8 ]
[ add rax,  [ argument ]  ]
[ test r13, r13 ]
[ cmovnz r14, rax ]
[ mov rax,  [ addr ]  ]
[ sub rax, r15 ]
[ cmp rax, r14 ]
[ jnle  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov dword ptr fs:[rax],  [ argument ]  ]
[ mov eax, dword ptr [rbx] ]
[ mov r12,  [ addr ]  ]
[ test ah,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rdi, qword ptr [rbx  +  [ displacement ] ] ]
[ mov eax, dword ptr [rdi  +  [ displacement ] ] ]
[ sub eax,  [ argument ]  ]
[ mov dword ptr [rdi  +  [ displacement ] ], eax ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ lea r12, ptr [r15 + r14 * 1] ]
[ mov rdi, qword ptr [rbp] ]
[ lea rsi, ptr [r12  +  [ displacement ] ] ]
[ mov rax, qword ptr [rax] ]
[ cmp rax, rsi ]
[ jnb  [ addr ]  ]
[ add rax, rax ]
[ cmp rax, rsi ]
[ cmovnb rsi, rax ]
[ mov qword ptr [rsp  +  [ displacement ] ], rsi ]
[ call  [ addr.func ]  ]
[ add rdi, r15 ]
[ mov rdx, r14 ]
[ mov rsi, r8 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e9789ce7f
#root size: 1160
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ mov rax, rdi ]
[ cmp rdx,  [ argument ]  ]
[ jb  [ addr ]  ]
[ cmp rdx,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ vmovdqu ymm0, ymmword ptr [rsi] ]
[ vmovdqu ymm1, ymmword ptr [rsi + rdx * 1- [ displacement ] ] ]
[ vmovdqu ymmword ptr [rdi], ymm0 ]
[ vmovdqu ymmword ptr [rdi + rdx * 1- [ displacement ] ], ymm1 ]
[ vzeroupper ]
[ ret  ]
[ cmp dl,  [ argument ]  ]
[ jnb  [ addr ]  ]
[ cmp dl,  [ argument ]  ]
[ jnb  [ addr ]  ]
[ cmp dl,  [ argument ]  ]
[ jnb  [ addr ]  ]
[ mov rcx, qword ptr [rsi + rdx * 1- [ displacement ] ] ]
[ mov rsi, qword ptr [rsi] ]
[ mov qword ptr [rdi + rdx * 1- [ displacement ] ], rcx ]
[ mov qword ptr [rdi], rsi ]
[ ret  ]
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ add qword ptr [rbx  +  [ displacement ] ], r14 ]
[ test r13, r13 ]
[ jnz  [ addr ]  ]
[ mov rdi, rbx ]
[ call  [ addr.func ]  ]
[ mov rax, qword ptr [rbp] ]
[ mov byte ptr [rax + r12 * 1],  [ argument ]  ]
[ mov eax, dword ptr [rbx] ]
[ jmp  [ addr ]  ]
[ test ah,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rdi, qword ptr [rbx  +  [ displacement ] ] ]
[ mov eax, dword ptr [rdi  +  [ displacement ] ] ]
[ sub eax,  [ argument ]  ]
[ mov dword ptr [rdi  +  [ displacement ] ], eax ]
[ jnz  [ addr ]  ]
[ mov qword ptr [rdi  +  [ displacement ] ],  [ argument ]  ]
[ mov edx, dword ptr fs:[ [ displacement ] ] ]
[ test edx, edx ]
[ jnz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ mov rax, r12 ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ cmp rax,  [ addr ]  ]
[ jz  [ addr ]  ]
[ lea r14, ptr [rip  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ mov rbp, qword ptr [rsp  +  [ displacement ] ] ]
[ mov rsi, r14 ]
[ mov rdi, rbp ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e9789ce7f
#root size: 1160
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ push  [ argument ]  ]
[ bnd jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac67fc29
#call parent addr: 7f5e97ad0a14
#root size: 1161
===============================================================
CALL===========================================================
#now call addr: 7f5eac678182
#call parent addr: 7f5eac67fc29
#root size: 1162
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac678182
#root size: 1163
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 1164
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 1165
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 1165
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ call rax ]
CALL===========================================================
#now call addr: 7f5eac6781e8
#call parent addr: 7f5eac672885
#root size: 1165
===============================================================
[ nop edx, edi ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ lea rdx, ptr [rip- [ displacement ] ] ]
[ test byte ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ cmovz rax, rdx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac6781e8
#function name: strsignal
#func_id: 880
===========================================================
[ jmp  [ addr ]  ]
[ mov edx, dword ptr [rip  +  [ displacement ] ] ]
[ test edx, edx ]
[ jnz  [ addr ]  ]
[ mov qword ptr [rbx], rax ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ ret  ]
[ nop edx, edi ]
[ movzx eax, byte ptr [rsi] ]
[ test al, al ]
[ jz  [ addr ]  ]
[ movzx edx, byte ptr [rsi  +  [ displacement ] ] ]
[ test dl, dl ]
[ jz  [ addr ]  ]
[ movd xmm1, eax ]
[ movd xmm2, edx ]
[ mov rax, rdi ]
[ and eax,  [ argument ]  ]
[ punpcklbw xmm1, xmm1 ]
[ cmp rax,  [ argument ]  ]
[ punpcklbw xmm2, xmm2 ]
[ punpcklwd xmm1, xmm1 ]
[ punpcklwd xmm2, xmm2 ]
[ pshufd xmm1, xmm1,  [ argument ]  ]
[ pshufd xmm2, xmm2,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ movdqu xmm3, xmmword ptr [rdi] ]
[ pxor xmm5, xmm5 ]
[ movdqu xmm4, xmmword ptr [rdi  +  [ displacement ] ] ]
[ movdqa xmm6, xmm3 ]
[ pcmpeqb xmm3, xmm1 ]
[ pcmpeqb xmm4, xmm2 ]
[ movdqu xmm0, xmmword ptr [rdi  +  [ displacement ] ] ]
[ pcmpeqb xmm6, xmm5 ]
[ pminub xmm3, xmm4 ]
[ movdqa xmm4, xmm3 ]
[ movdqu xmm3, xmmword ptr [rdi  +  [ displacement ] ] ]
[ pcmpeqb xmm5, xmm0 ]
[ pcmpeqb xmm3, xmm2 ]
[ por xmm4, xmm6 ]
[ pcmpeqb xmm0, xmm1 ]
[ pminub xmm0, xmm3 ]
[ por xmm0, xmm5 ]
[ pmovmskb r8d, xmm4 ]
[ pmovmskb eax, xmm0 ]
[ shl rax,  [ argument ]  ]
[ or r8, rax ]
[ jz  [ addr ]  ]
[ bsf rax, r8 ]
[ add rax, rdi ]
[ cmp byte ptr [rax],  [ argument ]  ]
[ jz  [ addr ]  ]
[ movzx edx, byte ptr [rsi  +  [ displacement ] ] ]
[ test dl, dl ]
[ jz  [ addr ]  ]
[ xor eax, eax ]
[ ret  ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov r13d,  [ argument ]  ]
[ mov rdi, rbp ]
[ call  [ addr.func ]  ]
[ mov rcx, r12 ]
[ mov edx,  [ argument ]  ]
[ mov rsi, r13 ]
[ mov rdi, rbx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5eac672885
#root size: 1165
===============================================================
[ nop edx, edi ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ], rsi ]
[ mov dword ptr [rsp  +  [ displacement ] ], edx ]
[ test rdi, rdi ]
[ jz  [ addr ]  ]
[ test rsi, rsi ]
[ jz  [ addr ]  ]
[ mov edx, dword ptr [rcx] ]
[ mov rbx, rcx ]
[ mov rbp, rdi ]
[ mov ecx, edx ]
[ and ecx,  [ argument ]  ]
[ jz  [ addr ]  ]
[ and edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [rbp],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ cmp qword ptr [rax],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov r8, qword ptr [rbx  +  [ displacement ] ] ]
[ mov r14, qword ptr [rbx  +  [ displacement ] ] ]
[ sub r14, r8 ]
[ test r14, r14 ]
[ jle  [ addr ]  ]
[ xor r15d, r15d ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e97ad09fe
#root size: 1166
===============================================================
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e97ad09fe
#root size: 1166
===============================================================
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ cmp rax,  [ addr ]  ]
[ jz  [ addr ]  ]
[ mov rbp, qword ptr [rsp  +  [ displacement ] ] ]
[ mov rsi, r14 ]
[ mov rdi, rbp ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e97ad09fe
#root size: 1166
===============================================================
[ nop edx, edi ]
[ movzx eax, byte ptr [rsi] ]
[ test al, al ]
[ jz  [ addr ]  ]
[ movzx edx, byte ptr [rsi  +  [ displacement ] ] ]
[ test dl, dl ]
[ jz  [ addr ]  ]
[ movd xmm1, eax ]
[ movd xmm2, edx ]
[ mov rax, rdi ]
[ and eax,  [ argument ]  ]
[ punpcklbw xmm1, xmm1 ]
[ cmp rax,  [ argument ]  ]
[ punpcklbw xmm2, xmm2 ]
[ punpcklwd xmm1, xmm1 ]
[ punpcklwd xmm2, xmm2 ]
[ pshufd xmm1, xmm1,  [ argument ]  ]
[ pshufd xmm2, xmm2,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ movdqu xmm3, xmmword ptr [rdi] ]
[ pxor xmm5, xmm5 ]
[ movdqu xmm4, xmmword ptr [rdi  +  [ displacement ] ] ]
[ movdqa xmm6, xmm3 ]
[ pcmpeqb xmm3, xmm1 ]
[ pcmpeqb xmm4, xmm2 ]
[ movdqu xmm0, xmmword ptr [rdi  +  [ displacement ] ] ]
[ pcmpeqb xmm6, xmm5 ]
[ pminub xmm3, xmm4 ]
[ movdqa xmm4, xmm3 ]
[ movdqu xmm3, xmmword ptr [rdi  +  [ displacement ] ] ]
[ pcmpeqb xmm5, xmm0 ]
[ pcmpeqb xmm3, xmm2 ]
[ por xmm4, xmm6 ]
[ pcmpeqb xmm0, xmm1 ]
[ pminub xmm0, xmm3 ]
[ por xmm0, xmm5 ]
[ pmovmskb r8d, xmm4 ]
[ pmovmskb eax, xmm0 ]
[ shl rax,  [ argument ]  ]
[ or r8, rax ]
[ jz  [ addr ]  ]
[ bsf rax, r8 ]
[ add rax, rdi ]
[ cmp byte ptr [rax],  [ argument ]  ]
[ jz  [ addr ]  ]
[ movzx edx, byte ptr [rsi  +  [ displacement ] ] ]
[ test dl, dl ]
[ jz  [ addr ]  ]
[ xor eax, eax ]
[ ret  ]
RET========================================================
#ret target: 7f5e97ad0a14
#function name: explicit_bzero
#func_id: 932
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5e97ad09fe
#root size: 1166
===============================================================
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e97ad09fe
#root size: 1167
===============================================================
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e97ad09fe
#root size: 1167
===============================================================
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e97ad09fe
#root size: 1167
===============================================================
RET========================================================
#ret target: 7f5e97ad0a14
#function name: explicit_bzero
#func_id: 932
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5e97ad09fe
#root size: 1167
===============================================================
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e97ad09fe
#root size: 1168
===============================================================
[ and ecx,  [ argument ]  ]
[ and rdi,  [ addr ]  ]
[ vpcmpeqb ymm1, ymm0, ymmword ptr [rdi] ]
[ vpmovmskb eax, ymm1 ]
[ sar eax, cl ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ tzcnt eax, eax ]
[ cmp rdx, rax ]
[ jbe  [ addr ]  ]
[ add rax, rdi ]
[ add rax, rcx ]
[ vzeroupper ]
[ ret  ]
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ mov r8, qword ptr [rsp  +  [ displacement ] ] ]
[ mov r13, rax ]
[ sub rax, r8 ]
[ add rax,  [ argument ]  ]
[ test r13, r13 ]
[ cmovnz r14, rax ]
[ mov rax,  [ addr ]  ]
[ sub rax, r15 ]
[ cmp rax, r14 ]
[ jnle  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov dword ptr fs:[rax],  [ argument ]  ]
[ mov eax, dword ptr [rbx] ]
[ mov r12,  [ addr ]  ]
[ test ah,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rdi, qword ptr [rbx  +  [ displacement ] ] ]
[ mov eax, dword ptr [rdi  +  [ displacement ] ] ]
[ sub eax,  [ argument ]  ]
[ mov dword ptr [rdi  +  [ displacement ] ], eax ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e97ad09fe
#root size: 1168
===============================================================
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e97ad09fe
#root size: 1168
===============================================================
RET========================================================
#ret target: 7f5e97ad0a14
#function name: explicit_bzero
#func_id: 932
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5e97ad09fe
#root size: 1168
===============================================================
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e97ad09fe
#root size: 1169
===============================================================
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e97ad09fe
#root size: 1169
===============================================================
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e97ad09fe
#root size: 1169
===============================================================
RET========================================================
#ret target: 7f5e97ad0a14
#function name: explicit_bzero
#func_id: 932
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5e97ad09fe
#root size: 1169
===============================================================
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e97ad09fe
#root size: 1170
===============================================================
[ neg rcx ]
[ add rcx,  [ argument ]  ]
[ sub rdx, rcx ]
[ jbe  [ addr ]  ]
[ add rdi,  [ argument ]  ]
[ sub rdx,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ vpcmpeqb ymm1, ymm0, ymmword ptr [rdi] ]
[ vpmovmskb eax, ymm1 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ tzcnt eax, eax ]
[ add rax, rdi ]
[ vzeroupper ]
[ ret  ]
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ mov r8, qword ptr [rsp  +  [ displacement ] ] ]
[ mov r13, rax ]
[ sub rax, r8 ]
[ add rax,  [ argument ]  ]
[ test r13, r13 ]
[ cmovnz r14, rax ]
[ mov rax,  [ addr ]  ]
[ sub rax, r15 ]
[ cmp rax, r14 ]
[ jnle  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov dword ptr fs:[rax],  [ argument ]  ]
[ mov eax, dword ptr [rbx] ]
[ mov r12,  [ addr ]  ]
[ test ah,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rdi, qword ptr [rbx  +  [ displacement ] ] ]
[ mov eax, dword ptr [rdi  +  [ displacement ] ] ]
[ sub eax,  [ argument ]  ]
[ mov dword ptr [rdi  +  [ displacement ] ], eax ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e97ad09fe
#root size: 1170
===============================================================
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e97ad09fe
#root size: 1170
===============================================================
RET========================================================
#ret target: 7f5e97ad0a14
#function name: explicit_bzero
#func_id: 932
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5e97ad09fe
#root size: 1170
===============================================================
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e97ad09fe
#root size: 1171
===============================================================
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e97ad09fe
#root size: 1171
===============================================================
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e97ad09fe
#root size: 1171
===============================================================
[ cmp dl, byte ptr [rax  +  [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ xor edx, edx ]
[ jmp  [ addr ]  ]
[ lea rax, ptr [r8- [ displacement ] ] ]
[ and r8, rax ]
[ jnz  [ addr ]  ]
[ nop dword ptr [rax], eax ]
[ movdqu xmm3, xmmword ptr [rdi  +  [ displacement ] ] ]
[ pxor xmm5, xmm5 ]
[ movdqu xmm4, xmmword ptr [rdi  +  [ displacement ] ] ]
[ movdqa xmm6, xmm3 ]
[ pcmpeqb xmm3, xmm1 ]
[ pcmpeqb xmm4, xmm2 ]
[ movdqu xmm0, xmmword ptr [rdi  +  [ displacement ] ] ]
[ pcmpeqb xmm6, xmm5 ]
[ pminub xmm3, xmm4 ]
[ movdqa xmm4, xmm3 ]
[ movdqu xmm3, xmmword ptr [rdi  +  [ displacement ] ] ]
[ pcmpeqb xmm5, xmm0 ]
[ pcmpeqb xmm3, xmm2 ]
[ por xmm4, xmm6 ]
[ pcmpeqb xmm0, xmm1 ]
[ pminub xmm0, xmm3 ]
[ por xmm0, xmm5 ]
[ pmovmskb eax, xmm4 ]
[ shl rax,  [ argument ]  ]
[ pmovmskb r8d, xmm0 ]
[ shl r8,  [ argument ]  ]
[ or r8, rax ]
[ jz  [ addr ]  ]
[ bsf rax, r8 ]
[ add rax, rdi ]
[ cmp byte ptr [rax],  [ argument ]  ]
[ jz  [ addr ]  ]
[ bsf rax, r8 ]
[ add rax, rdi ]
[ cmp byte ptr [rax],  [ argument ]  ]
[ jz  [ addr ]  ]
[ movzx edx, byte ptr [rsi  +  [ displacement ] ] ]
[ test dl, dl ]
[ jz  [ addr ]  ]
[ cmp dl, byte ptr [rax  +  [ displacement ] ] ]
[ jnz  [ addr ]  ]
RET========================================================
#ret target: 7f5e97ad0a14
#function name: explicit_bzero
#func_id: 932
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5e97ad09fe
#root size: 1171
===============================================================
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e97ad09fe
#root size: 1172
===============================================================
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e97ad09fe
#root size: 1172
===============================================================
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e97ad09fe
#root size: 1172
===============================================================
RET========================================================
#ret target: 7f5e97ad0a14
#function name: explicit_bzero
#func_id: 932
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5e97ad09fe
#root size: 1172
===============================================================
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e97ad09fe
#root size: 1173
===============================================================
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e97ad09fe
#root size: 1173
===============================================================
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e97ad09fe
#root size: 1173
===============================================================
RET========================================================
#ret target: 7f5e97ad0a14
#function name: explicit_bzero
#func_id: 932
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5e97ad09fe
#root size: 1173
===============================================================
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e97ad09fe
#root size: 1174
===============================================================
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e97ad09fe
#root size: 1174
===============================================================
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e97ad09fe
#root size: 1174
===============================================================
RET========================================================
#ret target: 7f5e97ad0a14
#function name: explicit_bzero
#func_id: 932
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5e97ad09fe
#root size: 1174
===============================================================
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e97ad09fe
#root size: 1175
===============================================================
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e97ad09fe
#root size: 1175
===============================================================
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e97ad09fe
#root size: 1175
===============================================================
RET========================================================
#ret target: 7f5e97ad0a14
#function name: explicit_bzero
#func_id: 932
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5e97ad09fe
#root size: 1175
===============================================================
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e97ad09fe
#root size: 1176
===============================================================
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e97ad09fe
#root size: 1176
===============================================================
[ vmovdqu xmm0, xmmword ptr [rsi] ]
[ vmovdqu xmm1, xmmword ptr [rsi + rdx * 1- [ displacement ] ] ]
[ vmovdqu xmmword ptr [rdi], xmm0 ]
[ vmovdqu xmmword ptr [rdi + rdx * 1- [ displacement ] ], xmm1 ]
[ ret  ]
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ add qword ptr [rbx  +  [ displacement ] ], r14 ]
[ test r13, r13 ]
[ jnz  [ addr ]  ]
[ mov rdi, rbx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e97ad09fe
#root size: 1176
===============================================================
RET========================================================
#ret target: 7f5e97ad0a14
#function name: explicit_bzero
#func_id: 932
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5e97ad09fe
#root size: 1176
===============================================================
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e97ad09fe
#root size: 1177
===============================================================
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e97ad09fe
#root size: 1177
===============================================================
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e97ad09fe
#root size: 1177
===============================================================
RET========================================================
#ret target: 7f5e97ad0a14
#function name: explicit_bzero
#func_id: 932
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5e97ad09fe
#root size: 1177
===============================================================
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e97ad09fe
#root size: 1178
===============================================================
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e97ad09fe
#root size: 1178
===============================================================
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e97ad09fe
#root size: 1178
===============================================================
RET========================================================
#ret target: 7f5e97ad0a14
#function name: explicit_bzero
#func_id: 932
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5e97ad09fe
#root size: 1178
===============================================================
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e97ad09fe
#root size: 1179
===============================================================
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e97ad09fe
#root size: 1179
===============================================================
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e97ad09fe
#root size: 1179
===============================================================
RET========================================================
#ret target: 7f5e97ad0a14
#function name: explicit_bzero
#func_id: 932
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5e97ad09fe
#root size: 1179
===============================================================
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e97ad09fe
#root size: 1180
===============================================================
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e97ad09fe
#root size: 1180
===============================================================
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e97ad09fe
#root size: 1180
===============================================================
RET========================================================
#ret target: 7f5e97ad0a14
#function name: explicit_bzero
#func_id: 932
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5e97ad09fe
#root size: 1180
===============================================================
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e97ad09fe
#root size: 1181
===============================================================
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e97ad09fe
#root size: 1181
===============================================================
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e97ad09fe
#root size: 1181
===============================================================
RET========================================================
#ret target: 7f5e97ad0a14
#function name: explicit_bzero
#func_id: 932
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5e97ad09fe
#root size: 1181
===============================================================
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e97ad09fe
#root size: 1182
===============================================================
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e97ad09fe
#root size: 1182
===============================================================
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e97ad09fe
#root size: 1182
===============================================================
RET========================================================
#ret target: 7f5e97ad0a14
#function name: explicit_bzero
#func_id: 932
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5e97ad09fe
#root size: 1182
===============================================================
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e97ad09fe
#root size: 1183
===============================================================
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e97ad09fe
#root size: 1183
===============================================================
[ mov ecx, dword ptr [rsi + rdx * 1- [ displacement ] ] ]
[ mov esi, dword ptr [rsi] ]
[ mov dword ptr [rdi + rdx * 1- [ displacement ] ], ecx ]
[ mov dword ptr [rdi], esi ]
[ ret  ]
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ add qword ptr [rbx  +  [ displacement ] ], r14 ]
[ test r13, r13 ]
[ jnz  [ addr ]  ]
[ mov rdi, rbx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e97ad09fe
#root size: 1183
===============================================================
RET========================================================
#ret target: 7f5e97ad0a14
#function name: explicit_bzero
#func_id: 932
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5e97ad09fe
#root size: 1183
===============================================================
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e97ad09fe
#root size: 1184
===============================================================
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e97ad09fe
#root size: 1184
===============================================================
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e97ad09fe
#root size: 1184
===============================================================
RET========================================================
#ret target: 7f5e97ad0a14
#function name: explicit_bzero
#func_id: 932
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5e97ad09fe
#root size: 1184
===============================================================
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e97ad09fe
#root size: 1185
===============================================================
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e97ad09fe
#root size: 1185
===============================================================
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e97ad09fe
#root size: 1185
===============================================================
RET========================================================
#ret target: 7f5e97ad0a14
#function name: explicit_bzero
#func_id: 932
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5e97ad09fe
#root size: 1185
===============================================================
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e97ad09fe
#root size: 1186
===============================================================
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e97ad09fe
#root size: 1186
===============================================================
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e97ad09fe
#root size: 1186
===============================================================
RET========================================================
#ret target: 7f5e97ad0a14
#function name: explicit_bzero
#func_id: 932
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5e97ad09fe
#root size: 1186
===============================================================
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e97ad09fe
#root size: 1187
===============================================================
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e97ad09fe
#root size: 1187
===============================================================
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e97ad09fe
#root size: 1187
===============================================================
RET========================================================
#ret target: 7f5e97ad0a14
#function name: explicit_bzero
#func_id: 932
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5e97ad09fe
#root size: 1187
===============================================================
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e97ad09fe
#root size: 1188
===============================================================
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e97ad09fe
#root size: 1188
===============================================================
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e97ad09fe
#root size: 1188
===============================================================
RET========================================================
#ret target: 7f5e97ad0a14
#function name: explicit_bzero
#func_id: 932
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5e97ad09fe
#root size: 1188
===============================================================
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e97ad09fe
#root size: 1189
===============================================================
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e97ad09fe
#root size: 1189
===============================================================
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e97ad09fe
#root size: 1189
===============================================================
RET========================================================
#ret target: 7f5e97ad0a14
#function name: explicit_bzero
#func_id: 932
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5e97ad09fe
#root size: 1189
===============================================================
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e97ad09fe
#root size: 1190
===============================================================
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e97ad09fe
#root size: 1190
===============================================================
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e97ad09fe
#root size: 1190
===============================================================
RET========================================================
#ret target: 7f5e97ad0a14
#function name: explicit_bzero
#func_id: 932
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5e97ad09fe
#root size: 1190
===============================================================
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e97ad09fe
#root size: 1191
===============================================================
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e97ad09fe
#root size: 1191
===============================================================
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e97ad09fe
#root size: 1191
===============================================================
RET========================================================
#ret target: 7f5e97ad0a14
#function name: explicit_bzero
#func_id: 932
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5e97ad09fe
#root size: 1191
===============================================================
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e97ad09fe
#root size: 1192
===============================================================
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e97ad09fe
#root size: 1192
===============================================================
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e97ad09fe
#root size: 1192
===============================================================
RET========================================================
#ret target: 7f5e97ad0a14
#function name: explicit_bzero
#func_id: 932
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5e97ad09fe
#root size: 1192
===============================================================
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e97ad09fe
#root size: 1193
===============================================================
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e97ad09fe
#root size: 1193
===============================================================
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e97ad09fe
#root size: 1193
===============================================================
RET========================================================
#ret target: 7f5e97ad0a14
#function name: explicit_bzero
#func_id: 932
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5e97ad09fe
#root size: 1193
===============================================================
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e97ad09fe
#root size: 1194
===============================================================
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e97ad09fe
#root size: 1194
===============================================================
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e97ad09fe
#root size: 1194
===============================================================
RET========================================================
#ret target: 7f5e97ad0a14
#function name: explicit_bzero
#func_id: 932
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5e97ad09fe
#root size: 1194
===============================================================
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e97ad09fe
#root size: 1195
===============================================================
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e97ad09fe
#root size: 1195
===============================================================
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e97ad09fe
#root size: 1195
===============================================================
RET========================================================
#ret target: 7f5e97ad0a14
#function name: explicit_bzero
#func_id: 932
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5e97ad09fe
#root size: 1195
===============================================================
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e97ad09fe
#root size: 1196
===============================================================
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e97ad09fe
#root size: 1196
===============================================================
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e97ad09fe
#root size: 1196
===============================================================
RET========================================================
#ret target: 7f5e97ad0a14
#function name: explicit_bzero
#func_id: 932
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5e97ad09fe
#root size: 1196
===============================================================
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e97ad09fe
#root size: 1197
===============================================================
[ add edx,  [ argument ]  ]
[ jle  [ addr ]  ]
[ vpcmpeqb ymm1, ymm0, ymmword ptr [rdi] ]
[ vpmovmskb eax, ymm1 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ vpcmpeqb ymm1, ymm0, ymmword ptr [rdi  +  [ displacement ] ] ]
[ vpmovmskb eax, ymm1 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e97ad09fe
#root size: 1197
===============================================================
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e97ad09fe
#root size: 1197
===============================================================
RET========================================================
#ret target: 7f5e97ad0a14
#function name: explicit_bzero
#func_id: 932
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5e97ad09fe
#root size: 1197
===============================================================
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e97ad09fe
#root size: 1198
===============================================================
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e97ad09fe
#root size: 1198
===============================================================
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e97ad09fe
#root size: 1198
===============================================================
RET========================================================
#ret target: 7f5e97ad0a14
#function name: explicit_bzero
#func_id: 932
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5e97ad09fe
#root size: 1198
===============================================================
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e97ad09fe
#root size: 1199
===============================================================
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e97ad09fe
#root size: 1199
===============================================================
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e97ad09fe
#root size: 1199
===============================================================
RET========================================================
#ret target: 7f5e97ad0a14
#function name: explicit_bzero
#func_id: 932
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5e97ad09fe
#root size: 1199
===============================================================
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e97ad09fe
#root size: 1200
===============================================================
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e97ad09fe
#root size: 1200
===============================================================
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e97ad09fe
#root size: 1200
===============================================================
RET========================================================
#ret target: 7f5e97ad0a14
#function name: explicit_bzero
#func_id: 932
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5e97ad09fe
#root size: 1200
===============================================================
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e97ad09fe
#root size: 1201
===============================================================
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e97ad09fe
#root size: 1201
===============================================================
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e97ad09fe
#root size: 1201
===============================================================
RET========================================================
#ret target: 7f5e97ad0a14
#function name: explicit_bzero
#func_id: 932
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5e97ad09fe
#root size: 1201
===============================================================
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e97ad09fe
#root size: 1202
===============================================================
[ add edx,  [ argument ]  ]
[ vpcmpeqb ymm1, ymm0, ymmword ptr [rdi] ]
[ vpmovmskb eax, ymm1 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ sub edx,  [ argument ]  ]
[ jle  [ addr ]  ]
[ vpcmpeqb ymm1, ymm0, ymmword ptr [rdi  +  [ displacement ] ] ]
[ vpmovmskb eax, ymm1 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e97ad09fe
#root size: 1202
===============================================================
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e97ad09fe
#root size: 1202
===============================================================
RET========================================================
#ret target: 7f5e97ad0a14
#function name: explicit_bzero
#func_id: 932
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5e97ad09fe
#root size: 1202
===============================================================
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e97ad09fe
#root size: 1203
===============================================================
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e97ad09fe
#root size: 1203
===============================================================
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e97ad09fe
#root size: 1203
===============================================================
RET========================================================
#ret target: 7f5e97ad0a14
#function name: explicit_bzero
#func_id: 932
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5e97ad09fe
#root size: 1203
===============================================================
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e97ad09fe
#root size: 1204
===============================================================
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e97ad09fe
#root size: 1204
===============================================================
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e97ad09fe
#root size: 1204
===============================================================
RET========================================================
#ret target: 7f5e97ad0a14
#function name: explicit_bzero
#func_id: 932
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5e97ad09fe
#root size: 1204
===============================================================
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e97ad09fe
#root size: 1205
===============================================================
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e97ad09fe
#root size: 1205
===============================================================
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e97ad09fe
#root size: 1205
===============================================================
RET========================================================
#ret target: 7f5e97ad0a14
#function name: explicit_bzero
#func_id: 932
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5e97ad09fe
#root size: 1205
===============================================================
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e97ad09fe
#root size: 1206
===============================================================
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e97ad09fe
#root size: 1206
===============================================================
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e97ad09fe
#root size: 1206
===============================================================
RET========================================================
#ret target: 7f5e97ad0a14
#function name: explicit_bzero
#func_id: 932
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5e97ad09fe
#root size: 1206
===============================================================
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e97ad09fe
#root size: 1207
===============================================================
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e97ad09fe
#root size: 1207
===============================================================
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e97ad09fe
#root size: 1207
===============================================================
RET========================================================
#ret target: 7f5e97ad0a14
#function name: explicit_bzero
#func_id: 932
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5e97ad09fe
#root size: 1207
===============================================================
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e97ad09fe
#root size: 1208
===============================================================
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e97ad09fe
#root size: 1208
===============================================================
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e97ad09fe
#root size: 1208
===============================================================
RET========================================================
#ret target: 7f5e97ad0a14
#function name: explicit_bzero
#func_id: 932
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5e97ad09fe
#root size: 1208
===============================================================
CALL===========================================================
#now call addr: 7f5e9789e788
#call parent addr: 7f5e97ad09fe
#root size: 1209
===============================================================
RET========================================================
#ret target: 7f5e9789e788
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9789e748
#call parent addr: 7f5e97ad09fe
#root size: 1209
===============================================================
RET========================================================
#ret target: 7f5e9789e748
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad0a14
#call parent addr: 7f5e97ad09fe
#root size: 1209
===============================================================
RET========================================================
#ret target: 7f5e97ad0a14
#function name: explicit_bzero
#func_id: 932
===========================================================
CALL===========================================================
#now call addr: 7f5e97ad09fe
#call parent addr: 7f5e97ad09fe
#root size: 1209
===============================================================
CALL===========================================================
#now call addr: 7f5e9789e893
#call parent addr: 7f5e97ad09fe
#root size: 1210
===============================================================
[ cmp eax,  [ addr ]  ]
[ jz  [ addr ]  ]
[ mov eax,  [ addr ]  ]
[ jmp  [ addr ]  ]
[ mov edx, dword ptr [rbp] ]
[ test dh,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rbp  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rbp  +  [ displacement ] ] ]
[ cmp rax, rsi ]
[ jb  [ addr ]  ]
[ and dh,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [rbp  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rdi, rbp ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978abcde
#call parent addr: 7f5e9789e893
#root size: 1211
===============================================================
RET========================================================
#ret target: 7f5e978abcde
#function name: _IO_switch_to_get_mode
#func_id: 753
===========================================================
CALL===========================================================
#now call addr: 7f5e978abd1c
#call parent addr: 7f5e9789e893
#root size: 1211
===============================================================
RET========================================================
#ret target: 7f5e978abd1c
#function name: read
#func_id: 1219
===========================================================
[ mov qword ptr [rbx  +  [ displacement ] ],  [ addr ]  ]
[ mov edx, dword ptr [rbx] ]
[ mov ecx, edx ]
[ or edx,  [ argument ]  ]
[ or ecx,  [ argument ]  ]
[ test rax, rax ]
[ mov eax,  [ addr ]  ]
[ cmovz edx, ecx ]
[ mov dword ptr [rbx], edx ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ cmp eax,  [ addr ]  ]
[ jz  [ addr ]  ]
[ mov r8, qword ptr [rbx  +  [ displacement ] ] ]
[ mov r14, qword ptr [rbx  +  [ displacement ] ] ]
[ sub r14, r8 ]
[ jmp  [ addr ]  ]
[ mov eax, dword ptr [rbx] ]
[ mov r12,  [ addr ]  ]
[ test ah,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rdi, qword ptr [rbx  +  [ displacement ] ] ]
[ mov eax, dword ptr [rdi  +  [ displacement ] ] ]
[ sub eax,  [ argument ]  ]
[ mov dword ptr [rdi  +  [ displacement ] ], eax ]
[ jnz  [ addr ]  ]
[ mov qword ptr [rdi  +  [ displacement ] ],  [ argument ]  ]
[ mov edx, dword ptr fs:[ [ displacement ] ] ]
[ test edx, edx ]
[ jnz  [ addr ]  ]
[ mov rbp, qword ptr [rsp  +  [ displacement ] ] ]
[ xor r13d, r13d ]
[ jmp  [ addr ]  ]
[ mov rdi, rbp ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e97ad0a27
#call parent addr: 7f5e9789e893
#root size: 1211
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ push  [ argument ]  ]
[ bnd jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac67fc29
#call parent addr: 7f5e97ad0a27
#root size: 1212
===============================================================
CALL===========================================================
#now call addr: 7f5eac678182
#call parent addr: 7f5eac67fc29
#root size: 1213
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac678182
#root size: 1214
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 1215
===============================================================
[ cmp cl,  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp dx,  [ argument ]  ]
[ jz  [ addr ]  ]
[ xor eax, eax ]
[ jmp  [ addr ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ ret  ]
RET========================================================
#ret target: 7f5eac672885
#function name: _dl_rtld_di_serinfo
#func_id: 17
===========================================================
[ add rsp,  [ argument ]  ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ mov edx, dword ptr [r14] ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 1215
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 1216
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 1216
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ nop edx, edi ]
[ sub rsp,  [ argument ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax, qword ptr [rax] ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ test rdi, rdi ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rdi- [ displacement ] ] ]
[ lea rsi, ptr [rdi- [ displacement ] ] ]
[ test al,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ cmp qword ptr fs:[rdx],  [ argument ]  ]
[ jz  [ addr ]  ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ test al,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rax, rsi ]
[ and rax,  [ addr ]  ]
[ mov rdi, qword ptr [rax] ]
[ xor edx, edx ]
[ add rsp,  [ argument ]  ]
[ jmp  [ addr ]  ]
[ xor edx, edx ]
[ add rsp,  [ argument ]  ]
[ jmp  [ addr ]  ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ mov r13d, edx ]
[ push r12 ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov rax, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ xor eax, eax ]
[ mov rax, qword ptr [rsi  +  [ displacement ] ] ]
[ mov rbx, rax ]
[ and rbx,  [ addr ]  ]
[ mov rdx, rbx ]
[ neg rdx ]
[ cmp rsi, rdx ]
[ jnbe  [ addr ]  ]
[ mov r12, rsi ]
[ test sil,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp rbx,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ test al,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ mov rbp, rdi ]
[ mov rdx, qword ptr fs:[rcx] ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ lea rax, ptr [rbx- [ displacement ] ] ]
[ shr rax,  [ argument ]  ]
[ cmp qword ptr [rip  +  [ displacement ] ], rax ]
[ jbe  [ addr ]  ]
[ lea rsi, ptr [rsi  +  [ displacement ] ] ]
[ cmp rdx, qword ptr [r12  +  [ displacement ] ] ]
[ jz  [ addr ]  ]
[ lea rdi, ptr [rdx + rax * 2] ]
[ movzx r8d, word ptr [rdi] ]
[ cmp r8, qword ptr [rip  +  [ displacement ] ] ]
[ mov rcx, r8 ]
[ jb  [ addr ]  ]
[ cmp rbx, qword ptr [rip  +  [ displacement ] ] ]
[ jnbe  [ addr ]  ]
[ lea rax, ptr [rdx + rax * 8] ]
[ mov qword ptr [r12  +  [ displacement ] ], rdx ]
[ add ecx,  [ argument ]  ]
[ mov rdx, qword ptr [rax  +  [ displacement ] ] ]
[ mov qword ptr [r12  +  [ displacement ] ], rdx ]
[ mov qword ptr [rax  +  [ displacement ] ], rsi ]
[ mov word ptr [rdi], cx ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ mov rdi, r12 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e97ad0a2f
#call parent addr: 7f5eac672885
#root size: 1216
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ push  [ argument ]  ]
[ bnd jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac67fc29
#call parent addr: 7f5e97ad0a2f
#root size: 1217
===============================================================
CALL===========================================================
#now call addr: 7f5eac678182
#call parent addr: 7f5eac67fc29
#root size: 1218
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac678182
#root size: 1219
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 1220
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 1221
===============================================================
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 1221
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ nop edx, edi ]
[ push r12 ]
[ push rbp ]
[ mov rbp, rdi ]
[ push rbx ]
[ mov eax, dword ptr [rdi] ]
[ test ah,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov edx, eax ]
[ and edx,  [ argument ]  ]
[ jz  [ addr ]  ]
[ shl eax,  [ argument ]  ]
[ sar eax,  [ argument ]  ]
[ mov r12d, eax ]
[ test edx, edx ]
[ jnz  [ addr ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9789d050
#call parent addr: 7f5eac672885
#root size: 1221
===============================================================
[ nop edx, edi ]
[ test byte ptr [rdi],  [ argument ]  ]
[ jz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ push r12 ]
[ push rbp ]
[ push rbx ]
[ mov rbx, rdi ]
[ sub rsp,  [ argument ]  ]
[ mov ebp, dword ptr [rip  +  [ displacement ] ] ]
[ mov rax, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ xor eax, eax ]
[ test ebp, ebp ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov rdi, rsp ]
[ xor edx, edx ]
[ lea rsi, ptr [rip- [ displacement ] ] ]
[ ror rax,  [ argument ]  ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ call rax ]
CALL===========================================================
#now call addr: 7f5e978ac259
#call parent addr: 7f5e9789d050
#root size: 1222
===============================================================
[ nop edx, edi ]
[ mov qword ptr [rdi], rsi ]
[ mov qword ptr [rdi  +  [ displacement ] ], rdx ]
[ mov rcx, qword ptr fs:[ [ displacement ] ] ]
[ mov rax, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr [rdi  +  [ displacement ] ], rax ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ lea rsi, ptr [rcx  +  [ displacement ] ] ]
[ mov edx, eax ]
[ mov ecx, eax ]
[ test al,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ sar edx,  [ argument ]  ]
[ and edx,  [ argument ]  ]
[ mov dword ptr [rdi  +  [ displacement ] ], edx ]
[ mov qword ptr fs:[ [ displacement ] ], rdi ]
[ ret  ]
RET========================================================
#ret target: 7f5e978ac259
#function name: __pthread_cleanup_push_defer
#func_id: 2383
===========================================================
[ mov r12, qword ptr fs:[ [ displacement ] ] ]
[ cmp r12, qword ptr [rip  +  [ displacement ] ] ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov edx,  [ argument ]  ]
[ cmpxchg dword ptr [rip  +  [ displacement ] ], edx ]
[ mov qword ptr [rip  +  [ displacement ] ], r12 ]
[ mov edx, dword ptr [rip  +  [ displacement ] ] ]
[ mov esi, dword ptr [rbx] ]
[ mov qword ptr [rip  +  [ displacement ] ], rbx ]
[ add edx,  [ argument ]  ]
[ mov r8d, esi ]
[ mov dword ptr [rip  +  [ displacement ] ], edx ]
[ and r8d,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ test rcx, rcx ]
[ jnz  [ addr ]  ]
[ and sil,  [ argument ]  ]
[ mov dword ptr [rbx], esi ]
[ jmp  [ addr ]  ]
[ mov rdx, qword ptr [rcx  +  [ displacement ] ] ]
[ cmp rbx, rcx ]
[ jnz  [ addr ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], rdx ]
[ and sil,  [ argument ]  ]
[ mov dword ptr [rbx], esi ]
[ test r8d, r8d ]
[ jnz  [ addr ]  ]
[ mov rdi, qword ptr [rbx  +  [ displacement ] ] ]
[ mov eax, dword ptr [rdi  +  [ displacement ] ] ]
[ sub eax,  [ argument ]  ]
[ mov dword ptr [rdi  +  [ displacement ] ], eax ]
[ mov edx, dword ptr [rip  +  [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov edx, dword ptr [rip  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ mov qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ sub edx,  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], edx ]
[ jnz  [ addr ]  ]
[ mov qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ sub dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ test ebp, ebp ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov rdi, rsp ]
[ xor esi, esi ]
[ ror rax,  [ argument ]  ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ call rax ]
CALL===========================================================
#now call addr: 7f5e978ac3c2
#call parent addr: 7f5e9789d050
#root size: 1222
===============================================================
[ nop edx, edi ]
[ mov rax, qword ptr [rdi  +  [ displacement ] ] ]
[ mov rdx, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr fs:[ [ displacement ] ], rax ]
[ mov ecx, dword ptr [rdi  +  [ displacement ] ] ]
[ test ecx, ecx ]
[ jnz  [ addr ]  ]
[ test esi, esi ]
[ jz  [ addr ]  ]
[ mov r8, qword ptr [rdi  +  [ displacement ] ] ]
[ mov rax, qword ptr [rdi] ]
[ mov rdi, r8 ]
[ jmp rax ]
RET========================================================
#ret target: 7f5e978ac3c2
#function name: _pthread_cleanup_pop_restore
#func_id: 2384
===========================================================
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ ret  ]
[ mov eax, dword ptr [rbp] ]
[ test ah,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rdi, qword ptr [rbp  +  [ displacement ] ] ]
[ mov rbx, qword ptr fs:[ [ displacement ] ] ]
[ cmp qword ptr [rdi  +  [ displacement ] ], rbx ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov edx, eax ]
[ and edx,  [ argument ]  ]
[ test ah,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rdi, rbp ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9789d0b1
#call parent addr: 7f5e9789d050
#root size: 1222
===============================================================
[ nop edx, edi ]
[ push r12 ]
[ push rbp ]
[ push rbx ]
[ mov r12d, dword ptr [rdi  +  [ displacement ] ] ]
[ cmp r12d,  [ addr ]  ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [rdi] ]
[ mov rbx, rdi ]
[ xor ebp, ebp ]
[ and eax,  [ argument ]  ]
[ cmp eax,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rdi, rbx ]
[ xor r12d, r12d ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978aafa3
#call parent addr: 7f5e9789d0b1
#root size: 1223
===============================================================
[ nop edx, edi ]
[ push rbx ]
[ cmp qword ptr [rdi  +  [ displacement ] ],  [ argument ]  ]
[ mov rbx, rdi ]
[ jz  [ addr ]  ]
[ mov qword ptr [rdi  +  [ displacement ] ],  [ argument ]  ]
[ mov rdi, qword ptr [rbx  +  [ displacement ] ] ]
[ test rdi, rdi ]
[ jz  [ addr ]  ]
[ test dword ptr [rbx],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rdi, qword ptr [rbx  +  [ displacement ] ] ]
[ test rdi, rdi ]
[ jz  [ addr ]  ]
[ test dword ptr [rbx],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ call  [ addr.func ]  ]
[ pop rbx ]
[ ret  ]
RET========================================================
#ret target: 7f5e978aafa3
#function name: _IO_unsave_markers
#func_id: 778
===========================================================
[ test byte ptr [rbx  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov r12, qword ptr [rbx  +  [ displacement ] ] ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ sub rax, rdx ]
[ mov rcx, r12 ]
[ sub rcx, rdx ]
[ cmp rax, rcx ]
[ jbe  [ addr ]  ]
[ mov rdi, rbx ]
[ call qword ptr [r12  +  [ displacement ] ] ]
CALL===========================================================
#now call addr: 7f5e978aafd8
#call parent addr: 7f5e9789d0b1
#root size: 1223
===============================================================
[ nop edx, edi ]
[ mov edi, dword ptr [rdi  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ nop edx, edi ]
[ mov eax,  [ argument ]  ]
[ syscall  ]
[ cmp rax,  [ addr ]  ]
[ jnbe  [ addr ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5e978aafd8
#function name: __close_nocancel
#func_id: 1275
===========================================================
[ mov r12d, eax ]
[ mov eax, dword ptr [rbx  +  [ displacement ] ] ]
[ test eax, eax ]
[ jle  [ addr ]  ]
[ mov rax, qword ptr [rbx  +  [ displacement ] ] ]
[ cmp qword ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rdi, rbx ]
[ call  [ addr.func ]  ]
[ xor ecx, ecx ]
[ xor edx, edx ]
[ xor esi, esi ]
[ mov rdi, rbx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978ab030
#call parent addr: 7f5e9789d0b1
#root size: 1223
===============================================================
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978acff0
#call parent addr: 7f5e978ab030
#root size: 1224
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ sub rsp,  [ argument ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax, qword ptr [rax] ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ test rdi, rdi ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rdi- [ displacement ] ] ]
[ lea rsi, ptr [rdi- [ displacement ] ] ]
[ test al,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ cmp qword ptr fs:[rdx],  [ argument ]  ]
[ jz  [ addr ]  ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ test al,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rax, rsi ]
[ and rax,  [ addr ]  ]
[ mov rdi, qword ptr [rax] ]
[ xor edx, edx ]
[ add rsp,  [ argument ]  ]
[ jmp  [ addr ]  ]
[ xor edx, edx ]
[ add rsp,  [ argument ]  ]
[ jmp  [ addr ]  ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ mov r13d, edx ]
[ push r12 ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov rax, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ xor eax, eax ]
[ mov rax, qword ptr [rsi  +  [ displacement ] ] ]
[ mov rbx, rax ]
[ and rbx,  [ addr ]  ]
[ mov rdx, rbx ]
[ neg rdx ]
[ cmp rsi, rdx ]
[ jnbe  [ addr ]  ]
[ mov r12, rsi ]
[ test sil,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp rbx,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ test al,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ mov rbp, rdi ]
[ mov rdx, qword ptr fs:[rcx] ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ lea rax, ptr [rbx- [ displacement ] ] ]
[ shr rax,  [ argument ]  ]
[ cmp qword ptr [rip  +  [ displacement ] ], rax ]
[ jbe  [ addr ]  ]
[ lea rsi, ptr [rsi  +  [ displacement ] ] ]
[ cmp rdx, qword ptr [r12  +  [ displacement ] ] ]
[ jz  [ addr ]  ]
[ lea rdi, ptr [rdx + rax * 2] ]
[ movzx r8d, word ptr [rdi] ]
[ cmp r8, qword ptr [rip  +  [ displacement ] ] ]
[ mov rcx, r8 ]
[ jb  [ addr ]  ]
[ cmp rbx, qword ptr [rip  +  [ displacement ] ] ]
[ jnbe  [ addr ]  ]
[ lea rax, ptr [rdx + rax * 8] ]
[ mov qword ptr [r12  +  [ displacement ] ], rdx ]
[ add ecx,  [ argument ]  ]
[ mov rdx, qword ptr [rax  +  [ displacement ] ] ]
[ mov qword ptr [r12  +  [ displacement ] ], rdx ]
[ mov qword ptr [rax  +  [ displacement ] ], rsi ]
[ mov word ptr [rdi], cx ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
RET========================================================
#ret target: 7f5e978acff0
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
[ mov eax, dword ptr [rbx] ]
[ jmp  [ addr ]  ]
[ pxor xmm0, xmm0 ]
[ mov rdi, rbx ]
[ movups xmmword ptr [rbx  +  [ displacement ] ], xmm0 ]
[ movups xmmword ptr [rbx  +  [ displacement ] ], xmm0 ]
[ movups xmmword ptr [rbx  +  [ displacement ] ], xmm0 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978ab048
#call parent addr: 7f5e978ab030
#root size: 1224
===============================================================
[ ret  ]
RET========================================================
#ret target: 7f5e978ab048
#function name: _IO_un_link
#func_id: 751
===========================================================
[ test r12d, r12d ]
[ mov dword ptr [rbx],  [ addr ]  ]
[ mov dword ptr [rbx  +  [ displacement ] ],  [ addr ]  ]
[ cmovz r12d, ebp ]
[ mov qword ptr [rbx  +  [ displacement ] ],  [ addr ]  ]
[ mov eax, r12d ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ ret  ]
[ mov edx, dword ptr [rbp] ]
[ mov r12d, eax ]
[ and edx,  [ argument ]  ]
[ jmp  [ addr ]  ]
[ test edx, edx ]
[ jnz  [ addr ]  ]
[ mov rdi, qword ptr [rbp  +  [ displacement ] ] ]
[ sub dword ptr [rdi  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rbx, qword ptr [rbp  +  [ displacement ] ] ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ sub rax, rdx ]
[ mov rcx, rbx ]
[ sub rcx, rdx ]
[ cmp rax, rcx ]
[ jbe  [ addr ]  ]
[ xor esi, esi ]
[ mov rdi, rbp ]
[ call qword ptr [rbx  +  [ displacement ] ] ]
CALL===========================================================
#now call addr: 7f5e9789cfbe
#call parent addr: 7f5e978ab030
#root size: 1224
===============================================================
[ nop edx, edi ]
[ push rbp ]
[ mov rbp, rdi ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ cmp dword ptr [rdi  +  [ displacement ] ],  [ addr ]  ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [rdi  +  [ displacement ] ] ]
[ test eax, eax ]
[ jle  [ addr ]  ]
[ mov rax, qword ptr [rdi  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rax  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rax  +  [ displacement ] ] ]
[ sub rdx, rsi ]
[ sar rdx,  [ argument ]  ]
[ call  [ addr.func ]  ]
[ add rsp,  [ argument ]  ]
[ mov rdi, rbp ]
[ xor esi, esi ]
[ pop rbx ]
[ pop rbp ]
[ jmp  [ addr ]  ]
[ nop edx, edi ]
[ push rbp ]
[ mov rbp, rdi ]
[ mov rdi, qword ptr [rdi  +  [ displacement ] ] ]
[ test rdi, rdi ]
[ jz  [ addr ]  ]
[ test byte ptr [rbp],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rbp  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rbp  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov qword ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rax] ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ mov rdi, qword ptr [rbp  +  [ displacement ] ] ]
[ test rdi, rdi ]
[ jz  [ addr ]  ]
[ mov rdi, qword ptr [rbp  +  [ displacement ] ] ]
[ test rdi, rdi ]
[ jz  [ addr ]  ]
[ call  [ addr.func ]  ]
[ test byte ptr [rbp],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rdi, rbp ]
[ pop rbp ]
[ jmp  [ addr ]  ]
[ pop rbp ]
[ ret  ]
RET========================================================
#ret target: 7f5e9789cfbe
#function name: _IO_default_finish
#func_id: 767
===========================================================
[ mov eax, dword ptr [rbp  +  [ displacement ] ] ]
[ test eax, eax ]
[ jle  [ addr ]  ]
[ mov rbx, qword ptr [rbp  +  [ displacement ] ] ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov edx,  [ argument ]  ]
[ cmpxchg dword ptr [rip  +  [ displacement ] ], edx ]
[ mov rdi, qword ptr [rbx] ]
[ call  [ addr.func ]  ]
[ cmp qword ptr [rbp  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rdi, rbp ]
[ call  [ addr.func ]  ]
[ cmp rbp, qword ptr [rip  +  [ displacement ] ] ]
[ setz dl ]
[ cmp rbp, qword ptr [rip  +  [ displacement ] ] ]
[ setz al ]
[ or dl, al ]
[ jnz  [ addr ]  ]
[ cmp rbp, qword ptr [rip  +  [ displacement ] ] ]
[ jz  [ addr ]  ]
[ mov rdi, rbp ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9789d03e
#call parent addr: 7f5e978ab030
#root size: 1224
===============================================================
RET========================================================
#ret target: 7f5e9789d03e
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
[ mov eax, r12d ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ ret  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ mov eax, r13d ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ ret  ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov rdi, qword ptr [rsp  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e97ac92e5
#call parent addr: 7f5e978ab030
#root size: 1224
===============================================================
[ nop edx, edi ]
[ sub rsp,  [ argument ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax, qword ptr [rax] ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ test rdi, rdi ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rdi- [ displacement ] ] ]
[ lea rsi, ptr [rdi- [ displacement ] ] ]
[ test al,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5e97ac92e5
#function name: cfree
#func_id: 832
===========================================================
[ jmp  [ addr ]  ]
[ xor esi, esi ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e97ac9281
#call parent addr: 7f5e978ab030
#root size: 1224
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ push  [ argument ]  ]
[ bnd jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac67fc29
#call parent addr: 7f5e97ac9281
#root size: 1225
===============================================================
CALL===========================================================
#now call addr: 7f5eac678182
#call parent addr: 7f5eac67fc29
#root size: 1226
===============================================================
CALL===========================================================
#now call addr: 7f5eac6731e4
#call parent addr: 7f5eac678182
#root size: 1227
===============================================================
CALL===========================================================
#now call addr: 7f5eac672885
#call parent addr: 7f5eac6731e4
#root size: 1228
===============================================================
CALL===========================================================
#now call addr: 7f5eac672390
#call parent addr: 7f5eac672885
#root size: 1229
===============================================================
[ pxor xmm0, xmm0 ]
[ movdqa xmm2, xmmword ptr [rdi] ]
[ movdqa xmm1, xmmword ptr [rsi] ]
[ pcmpeqb xmm0, xmm1 ]
[ pslldq xmm2,  [ argument ]  ]
[ pcmpeqb xmm2, xmm1 ]
[ psubb xmm2, xmm0 ]
[ pmovmskb r9d, xmm2 ]
[ shr edx, cl ]
[ shr r9d, cl ]
[ sub edx, r9d ]
[ jnz  [ addr ]  ]
[ movdqa xmm3, xmmword ptr [rdi] ]
[ pxor xmm0, xmm0 ]
[ mov rcx,  [ argument ]  ]
[ mov r9d,  [ argument ]  ]
[ lea r10, ptr [rdi  +  [ displacement ] ] ]
[ and r10,  [ argument ]  ]
[ sub r10,  [ argument ]  ]
[ nop word ptr [rax + rax * 1], ax ]
[ add r10,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ movdqa xmm1, xmmword ptr [rsi + rcx * 1] ]
[ movdqa xmm2, xmmword ptr [rdi + rcx * 1] ]
[ movdqa xmm4, xmm2 ]
[ psrldq xmm3,  [ argument ]  ]
[ pslldq xmm2,  [ argument ]  ]
[ por xmm2, xmm3 ]
[ pcmpeqb xmm0, xmm1 ]
[ pcmpeqb xmm1, xmm2 ]
[ psubb xmm1, xmm0 ]
[ pmovmskb edx, xmm1 ]
[ sub edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
RET========================================================
#ret target: 7f5eac672390
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac672457
#call parent addr: 7f5eac672885
#root size: 1229
===============================================================
RET========================================================
#ret target: 7f5eac672457
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ nop edx, edi ]
[ mov eax,  [ argument ]  ]
[ syscall  ]
[ cmp rax,  [ addr ]  ]
[ jnbe  [ addr ]  ]
[ ret  ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ neg eax ]
[ mov dword ptr fs:[rdx], eax ]
[ mov eax,  [ addr ]  ]
[ ret  ]
[ test eax, eax ]
[ setz al ]
[ movzx eax, al ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ add rbx,  [ argument ]  ]
[ cmp r14, rbx ]
[ jnz  [ addr ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ ret  ]
CALL===========================================================
#now call addr: 7f5eac678c8c
#call parent addr: 7f5eac672885
#root size: 1229
===============================================================
[ test al,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
RET========================================================
#ret target: 7f5eac678c8c
#function name: _dl_rtld_di_serinfo
#func_id: 17
===========================================================
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ mov rsp, r13 ]
[ jmp r12 ]
[ nop edx, edi ]
[ xor ebp, ebp ]
[ mov r9, rdx ]
[ pop rsi ]
[ mov rdx, rsp ]
[ and rsp,  [ addr ]  ]
[ push rax ]
[ push rsp ]
[ lea r8, ptr [rip  +  [ displacement ] ] ]
[ lea rcx, ptr [rip  +  [ displacement ] ] ]
[ lea rdi, ptr [rip- [ displacement ] ] ]
[ call qword ptr [rip  +  [ displacement ] ] ]
CALL===========================================================
#now call addr: 55e8629da7f8
#call parent addr: 7f5eac672885
#root size: 1229
===============================================================
[ nop edx, edi ]
[ push r15 ]
[ xor eax, eax ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ push rbp ]
[ push rbx ]
[ mov rbx, rcx ]
[ sub rsp,  [ argument ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdx ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdi ]
[ mov rdi, r9 ]
[ mov dword ptr [rsp  +  [ displacement ] ], esi ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ mov edx, dword ptr [rdx] ]
[ xor eax, eax ]
[ test edx, edx ]
[ setz al ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ test rdi, rdi ]
[ jz  [ addr ]  ]
[ xor edx, edx ]
[ xor esi, esi ]
[ call  [ addr.func ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ test rdi, rdi ]
[ jz  [ addr ]  ]
[ xor edx, edx ]
[ xor esi, esi ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9783f00f
#call parent addr: 55e8629da7f8
#root size: 1230
===============================================================
[ nop edx, edi ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov qword ptr [rsp], rsi ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdx ]
[ test rdi, rdi ]
[ jz  [ addr ]  ]
[ mov rbx, rdi ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ lea rbp, ptr [rip  +  [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov edx,  [ argument ]  ]
[ cmpxchg dword ptr [rbp], edx ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e97861fa2
#call parent addr: 7f5e9783f00f
#root size: 1231
===============================================================
[ nop edx, edi ]
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ push rbp ]
[ push rbx ]
[ mov rbx, rdi ]
[ sub rsp,  [ argument ]  ]
[ mov rbp, qword ptr [rdi] ]
[ test rbp, rbp ]
[ jz  [ addr ]  ]
[ mov rsi, rbp ]
[ xor edi, edi ]
[ nop dword ptr [rax + rax * 1], eax ]
[ mov rax, qword ptr [rsi  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rsi] ]
[ mov qword ptr [rsi  +  [ displacement ] ],  [ argument ]  ]
[ mov rdi, rsi ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rsi, rax ]
[ jmp  [ addr ]  ]
[ mov qword ptr [rsi  +  [ displacement ] ],  [ argument ]  ]
[ lea r8, ptr [rsi  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ mov qword ptr [r8],  [ argument ]  ]
[ mov rax, r8 ]
[ add qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ ret  ]
RET========================================================
#ret target: 7f5e97861fa2
#function name: on_exit
#func_id: 454
===========================================================
[ test rax, rax ]
[ jz  [ addr ]  ]
[ movq xmm0, qword ptr [rsp] ]
[ mov rdi, rbx ]
[ mov qword ptr [rax],  [ argument ]  ]
[ xor rdi, qword ptr fs:[ [ displacement ] ] ]
[ rol rdi,  [ argument ]  ]
[ movhps xmm0, qword ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [rax  +  [ displacement ] ], rdi ]
[ movups xmmword ptr [rax  +  [ displacement ] ], xmm0 ]
[ mov r8d, dword ptr fs:[ [ displacement ] ] ]
[ test r8d, r8d ]
[ jnz  [ addr ]  ]
[ sub dword ptr [rbp],  [ argument ]  ]
[ add rsp,  [ argument ]  ]
[ mov eax, r8d ]
[ pop rbx ]
[ pop rbp ]
[ ret  ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ mov ebp, dword ptr [rdx] ]
[ and ebp,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ test rbx, rbx ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rsp  +  [ displacement ] ] ]
[ mov edi, dword ptr [rsp  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rax] ]
[ call rbx ]
CALL===========================================================
#now call addr: 7f5e9783f03e
#call parent addr: 7f5e9783f00f
#root size: 1231
===============================================================
[ nop edx, edi ]
[ push r15 ]
[ lea r15, ptr [rip  +  [ displacement ] ] ]
[ push r14 ]
[ mov r14, rdx ]
[ push r13 ]
[ mov r13, rsi ]
[ push r12 ]
[ mov r12d, edi ]
[ push rbp ]
[ lea rbp, ptr [rip  +  [ displacement ] ] ]
[ push rbx ]
[ sub rbp, r15 ]
[ sub rsp,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629eb50c
#call parent addr: 7f5e9783f03e
#root size: 1232
===============================================================
[ nop edx, edi ]
[ sub rsp,  [ argument ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ call rax ]
[ add rsp,  [ argument ]  ]
[ ret  ]
RET========================================================
#ret target: 55e8629eb50c
#function name: _init
#func_id: 1
===========================================================
[ sar rbp,  [ argument ]  ]
[ jz  [ addr ]  ]
[ xor ebx, ebx ]
[ nop dword ptr [rax], eax ]
[ mov rdx, r14 ]
[ mov rsi, r13 ]
[ mov edi, r12d ]
[ call qword ptr [r15 + rbx * 8] ]
CALL===========================================================
#now call addr: 55e8629eb529
#call parent addr: 7f5e9783f03e
#root size: 1232
===============================================================
[ nop edx, edi ]
[ jmp  [ addr ]  ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ sub rsi, rdi ]
[ mov rax, rsi ]
[ shr rsi,  [ argument ]  ]
[ sar rax,  [ argument ]  ]
[ add rsi, rax ]
[ sar rsi,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ jmp rax ]
[ ret  ]
RET========================================================
#ret target: 55e8629eb529
#function name: NULL
#func_id: 5
===========================================================
[ add rbx,  [ argument ]  ]
[ cmp rbp, rbx ]
[ jnz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ mov eax, dword ptr [rdx  +  [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ test ebp, ebp ]
[ jnz  [ addr ]  ]
[ lea rdi, ptr [rsp  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9783f062
#call parent addr: 7f5e9783f03e
#root size: 1232
===============================================================
[ nop edx, edi ]
[ xor esi, esi ]
[ jmp  [ addr ]  ]
[ nop edx, edi ]
[ mov qword ptr [rdi], rbx ]
[ mov rax, rbp ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ rol rax,  [ argument ]  ]
[ mov qword ptr [rdi  +  [ displacement ] ], rax ]
[ mov qword ptr [rdi  +  [ displacement ] ], r12 ]
[ mov qword ptr [rdi  +  [ displacement ] ], r13 ]
[ mov qword ptr [rdi  +  [ displacement ] ], r14 ]
[ mov qword ptr [rdi  +  [ displacement ] ], r15 ]
[ lea rdx, ptr [rsp  +  [ displacement ] ] ]
[ xor rdx, qword ptr fs:[ [ displacement ] ] ]
[ rol rdx,  [ argument ]  ]
[ mov qword ptr [rdi  +  [ displacement ] ], rdx ]
[ mov rax, qword ptr [rsp] ]
[ nop ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ rol rax,  [ argument ]  ]
[ mov qword ptr [rdi  +  [ displacement ] ], rax ]
[ test dword ptr fs:[ [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ nop rax, rcx ]
[ mov qword ptr [rdi  +  [ displacement ] ], rax ]
[ jmp  [ addr ]  ]
[ jmp  [ addr ]  ]
[ nop edx, edi ]
[ push rbx ]
[ mov rbx, rdi ]
[ test esi, esi ]
[ jnz  [ addr ]  ]
[ mov dword ptr [rbx  +  [ displacement ] ], esi ]
[ xor eax, eax ]
[ pop rbx ]
[ ret  ]
RET========================================================
#ret target: 7f5e9783f062
#function name: __sigsetjmp
#func_id: 396
===========================================================
[ nop edx, edi ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ mov rax, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ lea rax, ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr fs:[ [ displacement ] ], rax ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rsp  +  [ displacement ] ] ]
[ mov edi, dword ptr [rsp  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rax] ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ call rax ]
CALL===========================================================
#now call addr: 7f5e9783f0b1
#call parent addr: 7f5e9783f03e
#root size: 1232
===============================================================
[ nop edx, edi ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ mov r12d, edi ]
[ push rbp ]
[ mov rbp, rsi ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov rdi, qword ptr [rsi] ]
[ mov rax, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ xor eax, eax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629d8e1b
#call parent addr: 7f5e9783f0b1
#root size: 1233
===============================================================
[ nop edx, edi ]
[ push rbx ]
[ test rdi, rdi ]
[ jz  [ addr ]  ]
[ mov esi,  [ argument ]  ]
[ mov rbx, rdi ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629e72e6
#call parent addr: 55e8629d8e1b
#root size: 1234
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ movd xmm4, esi ]
[ mov ecx, edi ]
[ vpbroadcastb ymm4, xmm4 ]
[ vpxor ymm0, ymm0, ymm0 ]
[ and ecx,  [ argument ]  ]
[ cmp ecx,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ vmovdqu ymm1, ymmword ptr [rdi] ]
[ vpcmpeqb ymm2, ymm0, ymm1 ]
[ vpcmpeqb ymm3, ymm4, ymm1 ]
[ vpmovmskb ecx, ymm2 ]
[ vpmovmskb eax, ymm3 ]
[ add rdi,  [ argument ]  ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ test ecx, ecx ]
[ jnz  [ addr ]  ]
RET========================================================
#ret target: 55e8629e72e6
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ test rax, rax ]
[ jz  [ addr ]  ]
[ lea r8, ptr [rax  +  [ displacement ] ] ]
[ mov rdx, r8 ]
[ sub rdx, rbx ]
[ cmp rdx,  [ argument ]  ]
[ jle  [ addr ]  ]
[ lea rsi, ptr [rax- [ displacement ] ] ]
[ mov ecx,  [ argument ]  ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rip  +  [ displacement ] ], rbx ]
[ mov qword ptr [rip  +  [ displacement ] ], rbx ]
[ pop rbx ]
[ ret  ]
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ mov edi,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629d8e2c
#call parent addr: 55e8629d8e1b
#root size: 1234
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ movsxd r12, edi ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov rax, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ xor eax, eax ]
[ cmp r12,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ mov r15, rsi ]
[ test rsi, rsi ]
[ jz  [ addr ]  ]
[ mov r9d, dword ptr [rip  +  [ displacement ] ] ]
[ mov rbp, r12 ]
[ test r9d, r9d ]
[ jz  [ addr ]  ]
[ lea rbx, ptr [rip  +  [ displacement ] ] ]
[ lea r13, ptr [r12  +  [ displacement ] ] ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ ror rax,  [ argument ]  ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ call rax ]
CALL===========================================================
#now call addr: 7f5e9784b75b
#call parent addr: 55e8629d8e2c
#root size: 1235
===============================================================
[ nop edx, edi ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ push rbp ]
[ push rbx ]
[ mov rbx, rdi ]
[ sub rsp,  [ argument ]  ]
[ nop ]
[ mov edx, dword ptr [rdi  +  [ displacement ] ] ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ cmp edx, eax ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [rdi] ]
[ mov ecx, eax ]
[ mov edx, eax ]
[ or ecx,  [ argument ]  ]
[ lock cmpxchg dword ptr [rbx], ecx ]
[ jnz  [ addr ]  ]
[ lea r12, ptr [rbx  +  [ displacement ] ] ]
[ mov eax,  [ argument ]  ]
[ test dl,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov dword ptr [rbx  +  [ displacement ] ], eax ]
[ mov eax, edx ]
[ test dl,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov esi, eax ]
[ shr esi,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov edx, eax ]
[ or edx,  [ argument ]  ]
[ lock cmpxchg dword ptr [rbx], edx ]
[ jnz  [ addr ]  ]
[ test al,  [ argument ]  ]
[ jz  [ addr ]  ]
[ lea rdi, ptr [rbx  +  [ displacement ] ] ]
[ xor ebp, ebp ]
[ mov r15d,  [ argument ]  ]
[ mov r13d,  [ argument ]  ]
[ mov eax, dword ptr [rdi] ]
[ test eax,  [ addr ]  ]
[ jz  [ addr ]  ]
[ test bpl, bpl ]
[ jnz  [ addr ]  ]
[ mov esi, eax ]
[ shr esi,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov edx, eax ]
[ or edx,  [ argument ]  ]
[ lock cmpxchg dword ptr [rbx], edx ]
[ jnz  [ addr ]  ]
[ mov dword ptr [rbx  +  [ displacement ] ],  [ argument ]  ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ mov dword ptr [rbx  +  [ displacement ] ], eax ]
[ xor eax, eax ]
[ nop ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
RET========================================================
#ret target: 7f5e9784b75b
#function name: pthread_rwlock_wrlock
#func_id: 2291
===========================================================
[ mov r9, qword ptr [rbx + r13 * 8] ]
[ mov rdi, r15 ]
[ mov rsi, r9 ]
[ mov qword ptr [rsp], r9 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9784b76b
#call parent addr: 55e8629d8e2c
#root size: 1235
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ mov eax, edi ]
[ xor edx, edx ]
[ vpxor ymm7, ymm7, ymm7 ]
[ or eax, esi ]
[ and eax,  [ argument ]  ]
[ cmp eax,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ vmovdqu ymm1, ymmword ptr [rdi] ]
[ vpcmpeqb ymm0, ymm1, ymmword ptr [rsi] ]
[ vpminub ymm0, ymm0, ymm1 ]
[ vpcmpeqb ymm0, ymm0, ymm7 ]
[ vpmovmskb ecx, ymm0 ]
[ test ecx, ecx ]
[ jz  [ addr ]  ]
[ tzcnt edx, ecx ]
[ movzx eax, byte ptr [rdi + rdx * 1] ]
[ movzx edx, byte ptr [rsi + rdx * 1] ]
[ sub eax, edx ]
[ vzeroupper ]
[ ret  ]
[ cmp eax,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ vmovdqu ymm1, ymmword ptr [rdi + rdx * 1] ]
[ vpcmpeqb ymm0, ymm1, ymmword ptr [rsi + rdx * 1] ]
[ vpminub ymm0, ymm0, ymm1 ]
[ vpcmpeqb ymm0, ymm0, ymm7 ]
[ vpmovmskb ecx, ymm0 ]
[ test ecx, ecx ]
[ jnz  [ addr ]  ]
[ add edx,  [ argument ]  ]
[ add eax,  [ argument ]  ]
[ cmp eax,  [ argument ]  ]
[ jle  [ addr ]  ]
[ cmp eax,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ vmovdqu xmm1, xmmword ptr [rdi + rdx * 1] ]
[ vpcmpeqb xmm0, xmm1, xmmword ptr [rsi + rdx * 1] ]
[ vpminub xmm0, xmm0, xmm1 ]
[ vpcmpeqb xmm0, xmm0, xmm7 ]
[ vpmovmskb ecx, xmm0 ]
[ test ecx, ecx ]
[ jnz  [ addr ]  ]
[ add edx,  [ argument ]  ]
[ add eax,  [ argument ]  ]
[ cmp eax,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ cmp eax,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ vmovq xmm1, qword ptr [rdi + rdx * 1] ]
[ vmovq xmm0, qword ptr [rsi + rdx * 1] ]
[ vpcmpeqb xmm0, xmm1, xmm0 ]
[ vpminub xmm0, xmm0, xmm1 ]
[ vpcmpeqb xmm0, xmm0, xmm7 ]
[ vpmovmskb ecx, xmm0 ]
[ and ecx,  [ argument ]  ]
[ test ecx, ecx ]
[ jnz  [ addr ]  ]
[ add edx,  [ argument ]  ]
[ add eax,  [ argument ]  ]
[ cmp eax,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ cmp eax,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ vmovd xmm1, dword ptr [rdi + rdx * 1] ]
[ vmovd xmm0, dword ptr [rsi + rdx * 1] ]
[ vpcmpeqb xmm0, xmm1, xmm0 ]
[ vpminub xmm0, xmm0, xmm1 ]
[ vpcmpeqb xmm0, xmm0, xmm7 ]
[ vpmovmskb ecx, xmm0 ]
[ and ecx,  [ argument ]  ]
[ test ecx, ecx ]
[ jnz  [ addr ]  ]
[ add edx,  [ argument ]  ]
[ movzx eax, byte ptr [rdi + rdx * 1] ]
[ movzx ecx, byte ptr [rsi + rdx * 1] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ movzx eax, byte ptr [rdi + rdx * 1] ]
[ movzx ecx, byte ptr [rsi + rdx * 1] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ sub eax, ecx ]
[ vzeroupper ]
[ ret  ]
RET========================================================
#ret target: 7f5e9784b76b
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov r8d, dword ptr [rip  +  [ displacement ] ] ]
[ mov r9, qword ptr [rsp] ]
[ test r8d, r8d ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ ror rax,  [ argument ]  ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ call rax ]
[ mov qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9784b81f
#call parent addr: 55e8629d8e2c
#root size: 1235
===============================================================
[ nop edx, edi ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov rbx, qword ptr [rax] ]
[ test rbx, rbx ]
[ jz  [ addr ]  ]
[ movzx eax, byte ptr [rdi] ]
[ mov r13, rdi ]
[ test al, al ]
[ jz  [ addr ]  ]
[ cmp byte ptr [rdi  +  [ displacement ] ],  [ argument ]  ]
[ mov r12, qword ptr [rbx] ]
[ jnz  [ addr ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 7f5e9784b81f
#root size: 1236
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ mov ecx, edi ]
[ mov rdx, rdi ]
[ vpxor xmm0, xmm0, xmm0 ]
[ and ecx,  [ argument ]  ]
[ cmp ecx,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ vpcmpeqb ymm1, ymm0, ymmword ptr [rdi] ]
[ vpmovmskb eax, ymm1 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ add rdi,  [ argument ]  ]
[ and ecx,  [ argument ]  ]
[ and rdi,  [ addr ]  ]
[ jmp  [ addr ]  ]
[ and ecx,  [ argument ]  ]
[ and rdi,  [ addr ]  ]
[ vpcmpeqb ymm1, ymm0, ymmword ptr [rdi] ]
[ vpmovmskb eax, ymm1 ]
[ sar eax, cl ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ tzcnt eax, eax ]
[ add rax, rdi ]
[ add rax, rcx ]
[ sub rax, rdx ]
[ vzeroupper ]
[ ret  ]
[ add rdi,  [ argument ]  ]
[ vpcmpeqb ymm1, ymm0, ymmword ptr [rdi] ]
[ vpmovmskb eax, ymm1 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ vpcmpeqb ymm1, ymm0, ymmword ptr [rdi  +  [ displacement ] ] ]
[ vpmovmskb eax, ymm1 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ vpcmpeqb ymm1, ymm0, ymmword ptr [rdi  +  [ displacement ] ] ]
[ vpmovmskb eax, ymm1 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ tzcnt eax, eax ]
[ add rax, rdi ]
[ sub rax, rdx ]
[ vzeroupper ]
[ ret  ]
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ add r13,  [ argument ]  ]
[ movzx ebp, word ptr [r13- [ displacement ] ] ]
[ mov r14, rax ]
[ lea r15, ptr [rax- [ displacement ] ] ]
[ test r12, r12 ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ cmp bp, word ptr [r12] ]
[ jnz  [ addr ]  ]
[ lea rdi, ptr [r12  +  [ displacement ] ] ]
[ mov rdx, r15 ]
[ mov rsi, r13 ]
[ call  [ addr.func ]  ]
[ mov r12, qword ptr [rbx  +  [ displacement ] ] ]
[ add rbx,  [ argument ]  ]
[ test r12, r12 ]
[ jz  [ addr ]  ]
[ cmp bp, word ptr [r12] ]
[ jnz  [ addr ]  ]
[ lea rdi, ptr [r12  +  [ displacement ] ] ]
[ mov rdx, r15 ]
[ mov rsi, r13 ]
[ call  [ addr.func ]  ]
[ add rsp,  [ argument ]  ]
[ mov rax, r12 ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ cmp byte ptr [rax],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp ebp,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp ebp,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov esi,  [ argument ]  ]
[ mov rdi, r15 ]
[ mov qword ptr [rsp  +  [ displacement ] ], r15 ]
[ mov qword ptr [rsp  +  [ displacement ] ], r15 ]
[ mov qword ptr [rsp  +  [ displacement ] ], r15 ]
[ mov qword ptr [rsp  +  [ displacement ] ], r15 ]
[ mov qword ptr [rsp  +  [ displacement ] ], r15 ]
[ mov qword ptr [rsp  +  [ displacement ] ], r15 ]
[ mov qword ptr [rsp  +  [ displacement ] ], r15 ]
[ mov qword ptr [rsp  +  [ displacement ] ], r15 ]
[ mov qword ptr [rsp  +  [ displacement ] ], r15 ]
[ mov qword ptr [rsp  +  [ displacement ] ], r15 ]
[ mov qword ptr [rsp  +  [ displacement ] ], r15 ]
[ mov qword ptr [rsp  +  [ displacement ] ], r15 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9784b888
#call parent addr: 7f5e9784b81f
#root size: 1236
===============================================================
[ and ecx,  [ argument ]  ]
[ and rdi,  [ addr ]  ]
[ vmovdqu ymm8, ymmword ptr [rdi] ]
[ vpcmpeqb ymm1, ymm0, ymm8 ]
[ vpcmpeqb ymm2, ymm9, ymm8 ]
[ vpor ymm1, ymm2, ymm1 ]
[ vpmovmskb eax, ymm1 ]
[ sar eax, cl ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ tzcnt eax, eax ]
[ add rax, rcx ]
[ xor edx, edx ]
[ lea rax, ptr [rdi + rax * 1] ]
[ cmp sil, byte ptr [rax] ]
[ cmovnz rax, rdx ]
[ vzeroupper ]
[ ret  ]
RET========================================================
#ret target: 7f5e9784b888
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ mov r12d,  [ argument ]  ]
[ mov ebp,  [ argument ]  ]
[ lea r14, ptr [rsp  +  [ displacement ] ] ]
[ lea r13, ptr [rip  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ movsxd r15, ebp ]
[ mov rsi, qword ptr [rsp  +  [ displacement ] ] ]
[ mov rdi, qword ptr [rsp  +  [ displacement ] ] ]
[ mov edx, ebp ]
[ lea rcx, ptr [r14 + r15 * 8] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9784b8f0
#call parent addr: 7f5e9784b81f
#root size: 1236
===============================================================
[ nop edx, edi ]
[ push rbp ]
[ mov rbp, rsp ]
[ push r15 ]
[ push r14 ]
[ mov r14, rdi ]
[ push r13 ]
[ movsxd r13, edx ]
[ push r12 ]
[ push rbx ]
[ mov rbx, rcx ]
[ sub rsp,  [ argument ]  ]
[ mov qword ptr [rbp- [ displacement ] ], rsi ]
[ mov r12, qword ptr [rcx] ]
[ mov rax, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ xor eax, eax ]
[ mov qword ptr [rbp- [ displacement ] ], r12 ]
[ cmp byte ptr [r12],  [ argument ]  ]
[ jz  [ addr ]  ]
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ mov rdi, r12 ]
[ call  [ addr.func ]  ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9784c33f
#call parent addr: 7f5e9784b8f0
#root size: 1237
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 7f5e9784c33f
#root size: 1238
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov r12, rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ cmp byte ptr [rax],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ movsxd rax, r13d ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ movzx edi, byte ptr [rdx + rax * 1] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ add rdi, rax ]
[ call  [ addr.func ]  ]
[ movsxd rax, r13d ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ movzx edi, byte ptr [rdx + rax * 1] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ add rdi, rax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9784c371
#call parent addr: 7f5e9784c33f
#root size: 1238
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 7f5e9784c371
#root size: 1239
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov r12, rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ cmp byte ptr [rax],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9784c392
#call parent addr: 7f5e9784c371
#root size: 1239
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 7f5e9784c392
#root size: 1240
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov r12, rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ cmp byte ptr [rax],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ lea r12, ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], r12 ]
[ jmp  [ addr ]  ]
[ lea r12, ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], r12 ]
[ jmp  [ addr ]  ]
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ mov rdi, r12 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9784c20d
#call parent addr: 7f5e9784c392
#root size: 1240
===============================================================
[ add rdi, rdx ]
[ add rsi, rdx ]
[ tzcnt edx, ecx ]
[ movzx eax, byte ptr [rdi + rdx * 1] ]
[ movzx edx, byte ptr [rsi + rdx * 1] ]
[ sub eax, edx ]
[ vzeroupper ]
[ ret  ]
RET========================================================
#ret target: 7f5e9784c20d
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ test eax, eax ]
[ jz  [ addr ]  ]
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ mov rdi, r12 ]
[ call  [ addr.func ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rbx], rax ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov r14, qword ptr [rax + r13 * 8] ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ lea rsp, ptr [rbp- [ displacement ] ] ]
[ mov rax, r14 ]
[ pop rbx ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ pop rbp ]
[ ret  ]
[ mov qword ptr [rsp + r15 * 8 + [ displacement ] ], rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ cmp dword ptr [rax  +  [ displacement ] ],  [ addr ]  ]
[ jz  [ addr ]  ]
[ mov dword ptr [rax  +  [ displacement ] ],  [ addr ]  ]
[ mov rdi, qword ptr [rsp + r15 * 8 + [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], r13 ]
[ cmp rdi, r13 ]
[ jz  [ addr ]  ]
[ mov rdi, qword ptr [rsp + r15 * 8 + [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], r13 ]
[ cmp rdi, r13 ]
[ jz  [ addr ]  ]
[ mov rcx, qword ptr [rbx + r15 * 8 + [ displacement ] ] ]
[ mov qword ptr [rsp], rdi ]
[ mov rsi, rcx ]
[ mov qword ptr [rsp  +  [ displacement ] ], rcx ]
[ call  [ addr.func ]  ]
[ lea r12d, ptr [rbp- [ displacement ] ] ]
[ test ebp, ebp ]
[ jz  [ addr ]  ]
[ cmp r12d,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov ebp,  [ argument ]  ]
[ movsxd r15, ebp ]
[ mov rsi, qword ptr [rsp  +  [ displacement ] ] ]
[ mov rdi, qword ptr [rsp  +  [ displacement ] ] ]
[ mov edx, ebp ]
[ lea rcx, ptr [r14 + r15 * 8] ]
[ call  [ addr.func ]  ]
[ mov eax, ebp ]
[ mov ebp, r12d ]
[ mov r12d, eax ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5e9784b8f0
#call parent addr: 7f5e9784c392
#root size: 1240
===============================================================
CALL===========================================================
#now call addr: 7f5e9784c33f
#call parent addr: 7f5e9784b8f0
#root size: 1241
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 7f5e9784c33f
#root size: 1242
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784c371
#call parent addr: 7f5e9784c33f
#root size: 1242
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 7f5e9784c371
#root size: 1243
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784c392
#call parent addr: 7f5e9784c371
#root size: 1243
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 7f5e9784c392
#root size: 1244
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784c20d
#call parent addr: 7f5e9784c392
#root size: 1244
===============================================================
RET========================================================
#ret target: 7f5e9784c20d
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784b8f0
#call parent addr: 7f5e9784c392
#root size: 1244
===============================================================
CALL===========================================================
#now call addr: 7f5e9784c33f
#call parent addr: 7f5e9784b8f0
#root size: 1245
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 7f5e9784c33f
#root size: 1246
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784c371
#call parent addr: 7f5e9784c33f
#root size: 1246
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 7f5e9784c371
#root size: 1247
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784c392
#call parent addr: 7f5e9784c371
#root size: 1247
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 7f5e9784c392
#root size: 1248
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784c20d
#call parent addr: 7f5e9784c392
#root size: 1248
===============================================================
RET========================================================
#ret target: 7f5e9784c20d
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784b8f0
#call parent addr: 7f5e9784c392
#root size: 1248
===============================================================
CALL===========================================================
#now call addr: 7f5e9784c33f
#call parent addr: 7f5e9784b8f0
#root size: 1249
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 7f5e9784c33f
#root size: 1250
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784c371
#call parent addr: 7f5e9784c33f
#root size: 1250
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 7f5e9784c371
#root size: 1251
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ add r13,  [ argument ]  ]
[ movzx ebp, word ptr [r13- [ displacement ] ] ]
[ mov r14, rax ]
[ lea r15, ptr [rax- [ displacement ] ] ]
[ test r12, r12 ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5e9784c392
#call parent addr: 7f5e9784c371
#root size: 1251
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 7f5e9784c392
#root size: 1252
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784c20d
#call parent addr: 7f5e9784c392
#root size: 1252
===============================================================
RET========================================================
#ret target: 7f5e9784c20d
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784b8f0
#call parent addr: 7f5e9784c392
#root size: 1252
===============================================================
CALL===========================================================
#now call addr: 7f5e9784c33f
#call parent addr: 7f5e9784b8f0
#root size: 1253
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 7f5e9784c33f
#root size: 1254
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784c371
#call parent addr: 7f5e9784c33f
#root size: 1254
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 7f5e9784c371
#root size: 1255
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784c392
#call parent addr: 7f5e9784c371
#root size: 1255
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 7f5e9784c392
#root size: 1256
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784c20d
#call parent addr: 7f5e9784c392
#root size: 1256
===============================================================
RET========================================================
#ret target: 7f5e9784c20d
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784b8f0
#call parent addr: 7f5e9784c392
#root size: 1256
===============================================================
CALL===========================================================
#now call addr: 7f5e9784c33f
#call parent addr: 7f5e9784b8f0
#root size: 1257
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 7f5e9784c33f
#root size: 1258
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784c371
#call parent addr: 7f5e9784c33f
#root size: 1258
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 7f5e9784c371
#root size: 1259
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784c392
#call parent addr: 7f5e9784c371
#root size: 1259
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 7f5e9784c392
#root size: 1260
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784c20d
#call parent addr: 7f5e9784c392
#root size: 1260
===============================================================
RET========================================================
#ret target: 7f5e9784c20d
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784b8f0
#call parent addr: 7f5e9784c392
#root size: 1260
===============================================================
CALL===========================================================
#now call addr: 7f5e9784c33f
#call parent addr: 7f5e9784b8f0
#root size: 1261
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 7f5e9784c33f
#root size: 1262
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784c371
#call parent addr: 7f5e9784c33f
#root size: 1262
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 7f5e9784c371
#root size: 1263
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784c392
#call parent addr: 7f5e9784c371
#root size: 1263
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 7f5e9784c392
#root size: 1264
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784c20d
#call parent addr: 7f5e9784c392
#root size: 1264
===============================================================
RET========================================================
#ret target: 7f5e9784c20d
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784b8f0
#call parent addr: 7f5e9784c392
#root size: 1264
===============================================================
CALL===========================================================
#now call addr: 7f5e9784c33f
#call parent addr: 7f5e9784b8f0
#root size: 1265
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 7f5e9784c33f
#root size: 1266
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784c371
#call parent addr: 7f5e9784c33f
#root size: 1266
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 7f5e9784c371
#root size: 1267
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784c392
#call parent addr: 7f5e9784c371
#root size: 1267
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 7f5e9784c392
#root size: 1268
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784c20d
#call parent addr: 7f5e9784c392
#root size: 1268
===============================================================
RET========================================================
#ret target: 7f5e9784c20d
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784b8f0
#call parent addr: 7f5e9784c392
#root size: 1268
===============================================================
CALL===========================================================
#now call addr: 7f5e9784c33f
#call parent addr: 7f5e9784b8f0
#root size: 1269
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 7f5e9784c33f
#root size: 1270
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784c371
#call parent addr: 7f5e9784c33f
#root size: 1270
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 7f5e9784c371
#root size: 1271
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784c392
#call parent addr: 7f5e9784c371
#root size: 1271
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 7f5e9784c392
#root size: 1272
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784c20d
#call parent addr: 7f5e9784c392
#root size: 1272
===============================================================
RET========================================================
#ret target: 7f5e9784c20d
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784b8f0
#call parent addr: 7f5e9784c392
#root size: 1272
===============================================================
CALL===========================================================
#now call addr: 7f5e9784c33f
#call parent addr: 7f5e9784b8f0
#root size: 1273
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 7f5e9784c33f
#root size: 1274
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784c371
#call parent addr: 7f5e9784c33f
#root size: 1274
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 7f5e9784c371
#root size: 1275
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784c392
#call parent addr: 7f5e9784c371
#root size: 1275
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 7f5e9784c392
#root size: 1276
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784c20d
#call parent addr: 7f5e9784c392
#root size: 1276
===============================================================
RET========================================================
#ret target: 7f5e9784c20d
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784b8f0
#call parent addr: 7f5e9784c392
#root size: 1276
===============================================================
CALL===========================================================
#now call addr: 7f5e9784c33f
#call parent addr: 7f5e9784b8f0
#root size: 1277
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 7f5e9784c33f
#root size: 1278
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784c371
#call parent addr: 7f5e9784c33f
#root size: 1278
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 7f5e9784c371
#root size: 1279
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784c392
#call parent addr: 7f5e9784c371
#root size: 1279
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 7f5e9784c392
#root size: 1280
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784c20d
#call parent addr: 7f5e9784c392
#root size: 1280
===============================================================
RET========================================================
#ret target: 7f5e9784c20d
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784b8f0
#call parent addr: 7f5e9784c392
#root size: 1280
===============================================================
CALL===========================================================
#now call addr: 7f5e9784c33f
#call parent addr: 7f5e9784b8f0
#root size: 1281
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 7f5e9784c33f
#root size: 1282
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784c371
#call parent addr: 7f5e9784c33f
#root size: 1282
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 7f5e9784c371
#root size: 1283
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784c392
#call parent addr: 7f5e9784c371
#root size: 1283
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 7f5e9784c392
#root size: 1284
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784c20d
#call parent addr: 7f5e9784c392
#root size: 1284
===============================================================
RET========================================================
#ret target: 7f5e9784c20d
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ mov rsi, r14 ]
[ mov edi,  [ argument ]  ]
[ xor r12d, r12d ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9784be53
#call parent addr: 7f5e9784c392
#root size: 1284
===============================================================
[ push r15 ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ xor r15d, r15d ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ mov r12, rsi ]
[ push rbp ]
[ xor ebp, ebp ]
[ push rbx ]
[ mov ebx,  [ argument ]  ]
[ sub rsp,  [ argument ]  ]
[ mov dword ptr [rsp  +  [ displacement ] ], edi ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ cmp edi,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ cmp r15,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rdi, qword ptr [r12 + r15 * 8] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdi ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9784b523
#call parent addr: 7f5e9784be53
#root size: 1285
===============================================================
RET========================================================
#ret target: 7f5e9784b523
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ mov r14, rax ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ movzx eax, byte ptr [rax + r15 * 1] ]
[ lea rbp, ptr [rbp + rax * 1 + [ displacement ] ] ]
[ add rbp, r14 ]
[ test ebx, ebx ]
[ jz  [ addr ]  ]
[ mov rsi, qword ptr [r12] ]
[ mov rdi, qword ptr [rsp  +  [ displacement ] ] ]
[ cmp rsi, rdi ]
[ jz  [ addr ]  ]
[ call  [ addr.func ]  ]
[ cmp r15d,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ test ebx, ebx ]
[ jz  [ addr ]  ]
[ mov rbp, qword ptr [r12] ]
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ mov rdi, rbp ]
[ call  [ addr.func ]  ]
[ add r15,  [ argument ]  ]
[ cmp r15,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rdi, qword ptr [r12 + r15 * 8] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdi ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9784b523
#call parent addr: 7f5e9784be53
#root size: 1285
===============================================================
RET========================================================
#ret target: 7f5e9784b523
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784b523
#call parent addr: 7f5e9784be53
#root size: 1285
===============================================================
RET========================================================
#ret target: 7f5e9784b523
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784b523
#call parent addr: 7f5e9784be53
#root size: 1285
===============================================================
RET========================================================
#ret target: 7f5e9784b523
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784b523
#call parent addr: 7f5e9784be53
#root size: 1285
===============================================================
RET========================================================
#ret target: 7f5e9784b523
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784b523
#call parent addr: 7f5e9784be53
#root size: 1285
===============================================================
RET========================================================
#ret target: 7f5e9784b523
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784b523
#call parent addr: 7f5e9784be53
#root size: 1285
===============================================================
RET========================================================
#ret target: 7f5e9784b523
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784b523
#call parent addr: 7f5e9784be53
#root size: 1285
===============================================================
RET========================================================
#ret target: 7f5e9784b523
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784b523
#call parent addr: 7f5e9784be53
#root size: 1285
===============================================================
RET========================================================
#ret target: 7f5e9784b523
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784b523
#call parent addr: 7f5e9784be53
#root size: 1285
===============================================================
RET========================================================
#ret target: 7f5e9784b523
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784b523
#call parent addr: 7f5e9784be53
#root size: 1285
===============================================================
RET========================================================
#ret target: 7f5e9784b523
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784b523
#call parent addr: 7f5e9784be53
#root size: 1285
===============================================================
RET========================================================
#ret target: 7f5e9784b523
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e9784b573
#call parent addr: 7f5e9784be53
#root size: 1285
===============================================================
RET========================================================
#ret target: 7f5e9784b573
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ test eax, eax ]
[ jz  [ addr ]  ]
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ mov rdi, rbp ]
[ lea r13, ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
[ lea r13, ptr [rip  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ mov rax, r13 ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ mov r9, rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ lea r8, ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], r9 ]
[ xor r15d, r15d ]
[ lea r12, ptr [rip  +  [ displacement ] ] ]
[ mov rbp, r8 ]
[ jmp  [ addr ]  ]
[ cmp r15,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [rbp + r15 * 8] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rbx + r15 * 8], rdx ]
[ mov rdx, qword ptr [rax + r15 * 8] ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ call rdx ]
CALL===========================================================
#now call addr: 7f5e9784bea3
#call parent addr: 7f5e9784be53
#root size: 1285
===============================================================
[ nop edx, edi ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rip  +  [ displacement ] ] ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ mov rax, qword ptr [rdx  +  [ displacement ] ] ]
[ lea rcx, ptr [rax  +  [ displacement ] ] ]
[ mov rax, qword ptr [rdx  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rdx  +  [ displacement ] ] ]
[ mov qword ptr [rip  +  [ displacement ] ], rcx ]
[ add rax,  [ argument ]  ]
[ add rdx,  [ argument ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ mov qword ptr [rip  +  [ displacement ] ], rdx ]
[ cmp qword ptr fs:[rsi], rdi ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr fs:[rsi] ]
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax, qword ptr [rax] ]
[ mov rdi, qword ptr [rax  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rax  +  [ displacement ] ] ]
[ lea rdx, ptr [rdi  +  [ displacement ] ] ]
[ mov rdi, qword ptr [rax  +  [ displacement ] ] ]
[ mov qword ptr [rcx], rdx ]
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ lea rdx, ptr [rsi  +  [ displacement ] ] ]
[ mov qword ptr [rcx], rdx ]
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ lea rdx, ptr [rdi  +  [ displacement ] ] ]
[ mov qword ptr [rcx], rdx ]
[ mov rcx, qword ptr [rax  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rdx], rcx ]
[ mov rcx, qword ptr [rax  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rdx], rcx ]
[ mov rdx, qword ptr [rax  +  [ displacement ] ] ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rax], rdx ]
[ ret  ]
[ mov rdi, qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr fs:[rdi], rcx ]
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr fs:[rcx], rdx ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr fs:[rdx], rax ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr fs:[rsi] ]
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax, qword ptr [rax] ]
[ mov rdi, qword ptr [rax  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rax  +  [ displacement ] ] ]
[ lea rdx, ptr [rdi  +  [ displacement ] ] ]
[ mov rdi, qword ptr [rax  +  [ displacement ] ] ]
[ mov qword ptr [rcx], rdx ]
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ lea rdx, ptr [rsi  +  [ displacement ] ] ]
[ mov qword ptr [rcx], rdx ]
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ lea rdx, ptr [rdi  +  [ displacement ] ] ]
[ mov qword ptr [rcx], rdx ]
[ mov rcx, qword ptr [rax  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rdx], rcx ]
[ mov rcx, qword ptr [rax  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rdx], rcx ]
[ mov rdx, qword ptr [rax  +  [ displacement ] ] ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rax], rdx ]
[ ret  ]
RET========================================================
#ret target: 7f5e9784bea3
#function name: __uselocale
#func_id: 318
===========================================================
[ mov rdx, qword ptr [r14 + r15 * 8] ]
[ mov rdi, qword ptr [r12 + r15 * 8] ]
[ cmp rdx, rdi ]
[ jz  [ addr ]  ]
[ cmp rdi, r13 ]
[ jz  [ addr ]  ]
[ mov qword ptr [rsp], rdx ]
[ call  [ addr.func ]  ]
[ cmp r15d,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov r9, qword ptr [rsp  +  [ displacement ] ] ]
[ mov rdi, qword ptr [rip  +  [ displacement ] ] ]
[ cmp r9, rdi ]
[ jz  [ addr ]  ]
[ cmp rdi, r13 ]
[ jz  [ addr ]  ]
[ add r15,  [ argument ]  ]
[ cmp r15,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [rbp + r15 * 8] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rbx + r15 * 8], rdx ]
[ mov rdx, qword ptr [rax + r15 * 8] ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ call rdx ]
[ mov rdx, qword ptr [r14 + r15 * 8] ]
[ mov rdi, qword ptr [r12 + r15 * 8] ]
[ cmp rdx, rdi ]
[ jz  [ addr ]  ]
[ cmp rdi, r13 ]
[ jz  [ addr ]  ]
[ mov qword ptr [rsp], rdx ]
[ call  [ addr.func ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ add dword ptr [rax],  [ argument ]  ]
[ jmp  [ addr ]  ]
[ mov edx, dword ptr [rip  +  [ displacement ] ] ]
[ test edx, edx ]
[ jz  [ addr ]  ]
[ mov qword ptr [rsp], r9 ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ ror rax,  [ argument ]  ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ call rax ]
CALL===========================================================
#now call addr: 7f5e9784b9d8
#call parent addr: 7f5e9784be53
#root size: 1285
===============================================================
[ nop edx, edi ]
[ push rbp ]
[ mov r8, rdi ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ nop ]
[ mov edx, dword ptr [rdi  +  [ displacement ] ] ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ cmp dword ptr [rdi  +  [ displacement ] ],  [ argument ]  ]
[ sbb esi, esi ]
[ and esi,  [ argument ]  ]
[ add esi,  [ argument ]  ]
[ cmp edx, eax ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [rdi] ]
[ lea r9d, ptr [rax- [ displacement ] ] ]
[ mov ecx, r9d ]
[ shr ecx,  [ argument ]  ]
[ jz  [ addr ]  ]
[ lock cmpxchg dword ptr [r8], r9d ]
[ mov ebx, eax ]
[ jnz  [ addr ]  ]
[ mov dword ptr [rdi  +  [ displacement ] ],  [ argument ]  ]
[ lea rbp, ptr [rdi  +  [ displacement ] ] ]
[ xor r9d, r9d ]
[ xchg dword ptr [rbp], r9d ]
[ mov eax, dword ptr [rdi  +  [ displacement ] ] ]
[ and r9d,  [ argument ]  ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [r8] ]
[ mov ebx, eax ]
[ xor edx, edx ]
[ shr ebx,  [ argument ]  ]
[ setnz dl ]
[ xor edx, eax ]
[ xor edx,  [ argument ]  ]
[ lock cmpxchg dword ptr [r8], edx ]
[ jnz  [ addr ]  ]
[ shr eax,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ test r9d, r9d ]
[ jz  [ addr ]  ]
[ xor r10d, r10d ]
[ mov edx,  [ argument ]  ]
[ mov rdi, rbp ]
[ mov eax,  [ argument ]  ]
[ syscall  ]
[ add rsp,  [ argument ]  ]
[ xor eax, eax ]
[ pop rbx ]
[ pop rbp ]
[ ret  ]
RET========================================================
#ret target: 7f5e9784b9d8
#function name: pthread_rwlock_unlock
#func_id: 2296
===========================================================
[ mov r9, qword ptr [rsp] ]
[ mov rdi, qword ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [rsp], r9 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9784b9e7
#call parent addr: 7f5e9784be53
#root size: 1285
===============================================================
RET========================================================
#ret target: 7f5e9784b9e7
#function name: cfree
#func_id: 832
===========================================================
[ mov rdi, qword ptr [rsp  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9784b9f1
#call parent addr: 7f5e9784be53
#root size: 1285
===============================================================
RET========================================================
#ret target: 7f5e9784b9f1
#function name: cfree
#func_id: 832
===========================================================
[ mov r9, qword ptr [rsp] ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ mov rax, r9 ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629d8e3f
#call parent addr: 7f5e9784be53
#root size: 1285
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ sub rsp,  [ argument ]  ]
[ xor eax, eax ]
[ mov qword ptr [rsp  +  [ displacement ] ], rsi ]
[ test rdi, rdi ]
[ jz  [ addr ]  ]
[ cmp byte ptr [rdi],  [ argument ]  ]
[ jz  [ addr ]  ]
[ lea rsi, ptr [rsp  +  [ displacement ] ] ]
[ xor edx, edx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9784f940
#call parent addr: 55e8629d8e3f
#root size: 1286
===============================================================
[ push r15 ]
[ push r14 ]
[ mov r14, rsi ]
[ push r13 ]
[ mov r13, rdx ]
[ push r12 ]
[ mov r12, rdi ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov edx, dword ptr [rip  +  [ displacement ] ] ]
[ test edx, edx ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ ror rax,  [ argument ]  ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ call rax ]
CALL===========================================================
#now call addr: 7f5e9784f4fc
#call parent addr: 7f5e9784f940
#root size: 1287
===============================================================
[ nop edx, edi ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ push rbp ]
[ push rbx ]
[ mov rbx, rdi ]
[ sub rsp,  [ argument ]  ]
[ nop ]
[ mov edx, dword ptr [rdi  +  [ displacement ] ] ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ cmp edx, eax ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [rdi] ]
[ mov ecx, eax ]
[ mov edx, eax ]
[ or ecx,  [ argument ]  ]
[ lock cmpxchg dword ptr [rbx], ecx ]
[ jnz  [ addr ]  ]
[ lea r12, ptr [rbx  +  [ displacement ] ] ]
[ mov eax,  [ argument ]  ]
[ test dl,  [ argument ]  ]
[ jnz  [ addr ]  ]
RET========================================================
#ret target: 7f5e9784f4fc
#function name: pthread_rwlock_wrlock
#func_id: 2291
===========================================================
[ mov r15, qword ptr [rip  +  [ displacement ] ] ]
[ mov rbx, qword ptr [r15] ]
[ test rbx, rbx ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ test r14, r14 ]
[ jz  [ addr ]  ]
[ mov rbx, qword ptr [r14] ]
[ test rbx, rbx ]
[ jz  [ addr ]  ]
[ mov rdi, r12 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9784f688
#call parent addr: 7f5e9784f940
#root size: 1287
===============================================================
RET========================================================
#ret target: 7f5e9784f688
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ lea rdx, ptr [rax  +  [ displacement ] ] ]
[ lea rdi, ptr [rax  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9784f69a
#call parent addr: 7f5e9784f940
#root size: 1287
===============================================================
CALL===========================================================
#now call addr: 7f5e978b52cf
#call parent addr: 7f5e9784f69a
#root size: 1288
===============================================================
RET========================================================
#ret target: 7f5e978b52cf
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
[ mov rdx, qword ptr [rsp  +  [ displacement ] ] ]
[ test rax, rax ]
[ mov rbp, rax ]
[ jz  [ addr ]  ]
[ lea rdi, ptr [rax  +  [ displacement ] ] ]
[ mov rsi, r12 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9784f6b7
#call parent addr: 7f5e9784f69a
#root size: 1288
===============================================================
RET========================================================
#ret target: 7f5e9784f6b7
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ mov rdi, rbx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9784f6c6
#call parent addr: 7f5e9784f69a
#root size: 1288
===============================================================
RET========================================================
#ret target: 7f5e9784f6c6
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ mov r8d, eax ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ test r8d, r8d ]
[ jnz  [ addr ]  ]
[ mov qword ptr [r14], rax ]
[ mov qword ptr [rbp  +  [ displacement ] ], rax ]
[ test r13, r13 ]
[ jz  [ addr ]  ]
[ mov rdi, qword ptr [r13] ]
[ test rdi, rdi ]
[ jz  [ addr ]  ]
[ mov qword ptr [rbp  +  [ displacement ] ],  [ argument ]  ]
[ jmp  [ addr ]  ]
[ mov rbx, qword ptr [r15] ]
[ test rbx, rbx ]
[ jz  [ addr ]  ]
[ lea rsi, ptr [rbx  +  [ displacement ] ] ]
[ mov rdi, r12 ]
[ call  [ addr.func ]  ]
[ mov qword ptr [rbp], rbx ]
[ mov qword ptr [r15], rbp ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ add dword ptr [rax],  [ argument ]  ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ add rsp,  [ argument ]  ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ pop rbx ]
[ pop rbp ]
[ ror rax,  [ argument ]  ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ jmp rax ]
[ nop edx, edi ]
[ push rbp ]
[ mov r8, rdi ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ nop ]
[ mov edx, dword ptr [rdi  +  [ displacement ] ] ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ cmp dword ptr [rdi  +  [ displacement ] ],  [ argument ]  ]
[ sbb esi, esi ]
[ and esi,  [ argument ]  ]
[ add esi,  [ argument ]  ]
[ cmp edx, eax ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [rdi] ]
[ lea r9d, ptr [rax- [ displacement ] ] ]
[ mov ecx, r9d ]
[ shr ecx,  [ argument ]  ]
[ jz  [ addr ]  ]
[ lock cmpxchg dword ptr [r8], r9d ]
[ mov ebx, eax ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ add rsp,  [ argument ]  ]
[ ret  ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629d8e4b
#call parent addr: 7f5e9784f69a
#root size: 1288
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ push r13 ]
[ push r12 ]
[ mov r12, qword ptr [rip  +  [ displacement ] ] ]
[ push rbp ]
[ test rdi, rdi ]
[ jz  [ addr ]  ]
[ mov edx, dword ptr [rip  +  [ displacement ] ] ]
[ mov rbp, rdi ]
[ test edx, edx ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ ror rax,  [ argument ]  ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ call rax ]
CALL===========================================================
#now call addr: 7f5e978536a1
#call parent addr: 55e8629d8e4b
#root size: 1289
===============================================================
[ nop edx, edi ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ push rbp ]
[ push rbx ]
[ mov rbx, rdi ]
[ sub rsp,  [ argument ]  ]
[ nop ]
[ mov edx, dword ptr [rdi  +  [ displacement ] ] ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ cmp edx, eax ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [rdi] ]
[ mov ecx, eax ]
[ mov edx, eax ]
[ or ecx,  [ argument ]  ]
[ lock cmpxchg dword ptr [rbx], ecx ]
[ jnz  [ addr ]  ]
[ lea r12, ptr [rbx  +  [ displacement ] ] ]
[ mov eax,  [ argument ]  ]
[ test dl,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ mov dword ptr [rbx  +  [ displacement ] ], eax ]
[ xor eax, eax ]
[ nop ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
RET========================================================
#ret target: 7f5e978536a1
#function name: pthread_rwlock_wrlock
#func_id: 2291
===========================================================
[ cmp byte ptr [rbp],  [ argument ]  ]
[ mov r13, qword ptr [rip  +  [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ mov r12, rax ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ add dword ptr [rdx],  [ argument ]  ]
[ cmp r13, rax ]
[ jz  [ addr ]  ]
[ cmp r13, r12 ]
[ jz  [ addr ]  ]
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ mov rdi, rbp ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9785371a
#call parent addr: 55e8629d8e4b
#root size: 1289
===============================================================
RET========================================================
#ret target: 7f5e9785371a
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ test eax, eax ]
[ jz  [ addr ]  ]
[ mov rsi, r13 ]
[ mov rdi, rbp ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e97853729
#call parent addr: 55e8629d8e4b
#root size: 1289
===============================================================
RET========================================================
#ret target: 7f5e97853729
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov r12, r13 ]
[ add dword ptr [rax],  [ argument ]  ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ mov rdi, rbp ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e97853753
#call parent addr: 55e8629d8e4b
#root size: 1289
===============================================================
[ nop edx, edi ]
[ push r12 ]
[ push rbp ]
[ mov rbp, rdi ]
[ sub rsp,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978ba4fe
#call parent addr: 7f5e97853753
#root size: 1290
===============================================================
RET========================================================
#ret target: 7f5e978ba4fe
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ lea r12, ptr [rax  +  [ displacement ] ] ]
[ mov rdi, r12 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978ba50a
#call parent addr: 7f5e97853753
#root size: 1290
===============================================================
CALL===========================================================
#now call addr: 7f5e978b52cf
#call parent addr: 7f5e978ba50a
#root size: 1291
===============================================================
RET========================================================
#ret target: 7f5e978b52cf
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
[ test rax, rax ]
[ jz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ mov rdx, r12 ]
[ mov rsi, rbp ]
[ mov rdi, rax ]
[ pop rbp ]
[ pop r12 ]
[ jmp  [ addr ]  ]
[ mov r12, rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ add dword ptr [rdx],  [ argument ]  ]
[ cmp r13, rax ]
[ jz  [ addr ]  ]
[ cmp r13, r12 ]
[ jz  [ addr ]  ]
[ mov rdi, r13 ]
[ call  [ addr.func ]  ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ ror rax,  [ argument ]  ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ call rax ]
CALL===========================================================
#now call addr: 7f5e97853702
#call parent addr: 7f5e978ba50a
#root size: 1291
===============================================================
[ nop edx, edi ]
[ push rbp ]
[ mov r8, rdi ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ nop ]
[ mov edx, dword ptr [rdi  +  [ displacement ] ] ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ cmp dword ptr [rdi  +  [ displacement ] ],  [ argument ]  ]
[ sbb esi, esi ]
[ and esi,  [ argument ]  ]
[ add esi,  [ argument ]  ]
[ cmp edx, eax ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [rdi] ]
[ lea r9d, ptr [rax- [ displacement ] ] ]
[ mov ecx, r9d ]
[ shr ecx,  [ argument ]  ]
[ jz  [ addr ]  ]
[ lock cmpxchg dword ptr [r8], r9d ]
[ mov ebx, eax ]
[ jnz  [ addr ]  ]
RET========================================================
#ret target: 7f5e97853702
#function name: pthread_rwlock_unlock
#func_id: 2296
===========================================================
[ mov rax, r12 ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ ret  ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ mov dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629d8e61
#call parent addr: 7f5e978ba50a
#root size: 1291
===============================================================
[ nop edx, edi ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ xor esi, esi ]
[ jmp  [ addr ]  ]
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov qword ptr [rsp], rsi ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdx ]
[ test rdi, rdi ]
[ jz  [ addr ]  ]
[ mov rbx, rdi ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ lea rbp, ptr [rip  +  [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov edx,  [ argument ]  ]
[ cmpxchg dword ptr [rbp], edx ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e97861fa2
#call parent addr: 55e8629d8e61
#root size: 1292
===============================================================
[ lea rdx, ptr [rax- [ displacement ] ] ]
[ mov rcx, rdx ]
[ shl rcx,  [ argument ]  ]
[ cmp qword ptr [rsi + rcx * 1 + [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, rdx ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rsi] ]
[ mov qword ptr [rsi  +  [ displacement ] ],  [ argument ]  ]
[ mov rdi, rsi ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ cmp rax,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rdx, rax ]
[ add rax,  [ argument ]  ]
[ mov qword ptr [rsi  +  [ displacement ] ], rax ]
[ shl rdx,  [ argument ]  ]
[ lea r8, ptr [rsi + rdx * 1 + [ displacement ] ] ]
[ mov qword ptr [r8],  [ argument ]  ]
[ mov rax, r8 ]
[ add qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ ret  ]
RET========================================================
#ret target: 7f5e97861fa2
#function name: on_exit
#func_id: 454
===========================================================
[ mov byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov rax,  [ addr ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ mov dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rip  +  [ displacement ] ],  [ addr ]  ]
[ mov byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ cmp eax,  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp eax,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov esi,  [ argument ]  ]
[ xor edi, edi ]
[ mov dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ call  [ addr.func ]  ]
[ cmp eax,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov edi,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629d9096
#call parent addr: 55e8629d8e61
#root size: 1292
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ sub rsp,  [ argument ]  ]
[ mov rax, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ xor eax, eax ]
[ mov rsi, rsp ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9792acdb
#call parent addr: 55e8629d9096
#root size: 1293
===============================================================
[ nop edx, edi ]
[ sub rsp,  [ argument ]  ]
[ mov r8, rsi ]
[ mov esi,  [ argument ]  ]
[ mov rax, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ xor eax, eax ]
[ mov rdx, rsp ]
[ mov eax,  [ argument ]  ]
[ syscall  ]
[ cmp rax,  [ addr ]  ]
[ jnbe  [ addr ]  ]
[ mov r9d, eax ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ movzx eax, byte ptr [rsp  +  [ displacement ] ] ]
[ movzx edx, word ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [r8  +  [ displacement ] ],  [ argument ]  ]
[ movdqa xmm0, xmmword ptr [rsp] ]
[ movdqu xmm1, xmmword ptr [rsp  +  [ displacement ] ] ]
[ mov byte ptr [r8  +  [ displacement ] ],  [ argument ]  ]
[ mov byte ptr [r8  +  [ displacement ] ], al ]
[ mov eax, dword ptr [rsp  +  [ displacement ] ] ]
[ mov word ptr [r8  +  [ displacement ] ], dx ]
[ movzx edx, byte ptr [rsp  +  [ displacement ] ] ]
[ and eax,  [ argument ]  ]
[ mov dword ptr [r8  +  [ displacement ] ],  [ argument ]  ]
[ mov dword ptr [r8  +  [ displacement ] ], eax ]
[ mov dword ptr [r8  +  [ displacement ] ], eax ]
[ mov byte ptr [r8  +  [ displacement ] ], dl ]
[ movups xmmword ptr [r8], xmm0 ]
[ movups xmmword ptr [r8  +  [ displacement ] ], xmm1 ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ neg eax ]
[ mov r9d,  [ addr ]  ]
[ mov dword ptr fs:[rdx], eax ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov eax, r9d ]
[ add rsp,  [ argument ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5e9792acdb
#function name: tcgetattr
#func_id: 1286
===========================================================
[ test eax, eax ]
[ setz al ]
[ mov rdx, qword ptr [rsp  +  [ displacement ] ] ]
[ xor rdx, qword ptr fs:[ [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ movzx eax, al ]
[ add rsp,  [ argument ]  ]
[ ret  ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jmp  [ addr ]  ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ mov byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629d8f53
#call parent addr: 55e8629d9096
#root size: 1293
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov rbx, qword ptr [rax] ]
[ test rbx, rbx ]
[ jz  [ addr ]  ]
[ movzx eax, byte ptr [rdi] ]
[ mov r13, rdi ]
[ test al, al ]
[ jz  [ addr ]  ]
[ cmp byte ptr [rdi  +  [ displacement ] ],  [ argument ]  ]
[ mov r12, qword ptr [rbx] ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 55e8629d8f53
#root size: 1294
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ mov r13, rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov ecx,  [ argument ]  ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ mov rdi, rax ]
[ call  [ addr.func ]  ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629d8fa8
#call parent addr: 55e8629d8f53
#root size: 1294
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 55e8629d8fa8
#root size: 1295
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e978610df
#call parent addr: 55e8629d8fa8
#root size: 1295
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ cmp rdx,  [ argument ]  ]
[ jz  [ addr ]  ]
[ jb  [ addr ]  ]
[ mov r11, rdx ]
[ mov eax, edi ]
[ xor edx, edx ]
[ vpxor ymm7, ymm7, ymm7 ]
[ or eax, esi ]
[ and eax,  [ argument ]  ]
[ cmp eax,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ vmovdqu ymm1, ymmword ptr [rdi] ]
[ vpcmpeqb ymm0, ymm1, ymmword ptr [rsi] ]
[ vpminub ymm0, ymm0, ymm1 ]
[ vpcmpeqb ymm0, ymm0, ymm7 ]
[ vpmovmskb ecx, ymm0 ]
[ test ecx, ecx ]
[ jz  [ addr ]  ]
[ tzcnt edx, ecx ]
[ cmp rdx, r11 ]
[ jnb  [ addr ]  ]
[ movzx eax, byte ptr [rdi + rdx * 1] ]
[ movzx edx, byte ptr [rsi + rdx * 1] ]
[ sub eax, edx ]
[ vzeroupper ]
[ ret  ]
RET========================================================
#ret target: 7f5e978610df
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ cmp byte ptr [r12 + r14 * 1],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ lea r12, ptr [r12 + r14 * 1 + [ displacement ] ] ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5e978610df
#call parent addr: 55e8629d8fa8
#root size: 1295
===============================================================
RET========================================================
#ret target: 7f5e978610df
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e978610df
#call parent addr: 55e8629d8fa8
#root size: 1295
===============================================================
RET========================================================
#ret target: 7f5e978610df
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e978610df
#call parent addr: 55e8629d8fa8
#root size: 1295
===============================================================
RET========================================================
#ret target: 7f5e978610df
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e978610df
#call parent addr: 55e8629d8fa8
#root size: 1295
===============================================================
RET========================================================
#ret target: 7f5e978610df
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e978610df
#call parent addr: 55e8629d8fa8
#root size: 1295
===============================================================
RET========================================================
#ret target: 7f5e978610df
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ mov r13, rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ cmp byte ptr [rax],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ lea r13, ptr [rsp  +  [ displacement ] ] ]
[ xor eax, eax ]
[ mov esi,  [ argument ]  ]
[ mov edi,  [ argument ]  ]
[ mov rdx, r13 ]
[ call  [ addr.func ]  ]
[ lea r13, ptr [rsp  +  [ displacement ] ] ]
[ xor eax, eax ]
[ mov esi,  [ argument ]  ]
[ mov edi,  [ argument ]  ]
[ mov rdx, r13 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629d8fd2
#call parent addr: 55e8629d8fa8
#root size: 1295
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ mov eax,  [ argument ]  ]
[ syscall  ]
[ cmp rax,  [ addr ]  ]
[ jnb  [ addr ]  ]
[ ret  ]
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ neg eax ]
[ mov dword ptr fs:[rcx], eax ]
[ or rax,  [ addr ]  ]
[ ret  ]
RET========================================================
#ret target: 55e8629d8fd2
#function name: ioctl
#func_id: 1307
===========================================================
[ cmp eax,  [ addr ]  ]
[ jz  [ addr ]  ]
[ movzx eax, word ptr [rsp  +  [ displacement ] ] ]
[ test ax, ax ]
[ jnz  [ addr ]  ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629d8ff1
#call parent addr: 55e8629d8fa8
#root size: 1295
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 55e8629d8ff1
#root size: 1296
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ mov qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov r14, rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ xor r8d, r8d ]
[ xor edx, edx ]
[ xor esi, esi ]
[ mov rcx, r13 ]
[ mov rdi, rax ]
[ call  [ addr.func ]  ]
[ mov byte ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ xor r14d, r14d ]
[ xor r15d, r15d ]
[ lea rbx, ptr [rip  +  [ displacement ] ] ]
[ mov r8, r13 ]
[ lea rcx, ptr [rip  +  [ displacement ] ] ]
[ mov rsi, rbp ]
[ mov edi, r12d ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ mov dword ptr [rsp  +  [ displacement ] ],  [ addr ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629d9060
#call parent addr: 55e8629d8ff1
#root size: 1296
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ sub rsp,  [ argument ]  ]
[ xor r9d, r9d ]
[ push  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9791d75d
#call parent addr: 55e8629d9060
#root size: 1297
===============================================================
[ nop edx, edi ]
[ push rbx ]
[ mov rbx, qword ptr [rip  +  [ displacement ] ] ]
[ mov eax, dword ptr [rbx] ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov eax, dword ptr [rax] ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ mov eax, dword ptr [rsp  +  [ displacement ] ] ]
[ push rax ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ push rax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9791d6d0
#call parent addr: 7f5e9791d75d
#root size: 1298
===============================================================
[ nop edx, edi ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov rbx, qword ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rcx ]
[ mov qword ptr [rsp  +  [ displacement ] ], r8 ]
[ mov r15d, dword ptr [rbx  +  [ displacement ] ] ]
[ test edi, edi ]
[ jle  [ addr ]  ]
[ mov eax, dword ptr [rbx] ]
[ mov qword ptr [rbx  +  [ displacement ] ],  [ argument ]  ]
[ mov ebp, edi ]
[ mov r12, rsi ]
[ mov r13, rdx ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ mov esi, dword ptr [rbx  +  [ displacement ] ] ]
[ test esi, esi ]
[ jnz  [ addr ]  ]
[ mov dword ptr [rbx  +  [ displacement ] ], eax ]
[ mov dword ptr [rbx  +  [ displacement ] ], eax ]
[ mov qword ptr [rbx  +  [ displacement ] ],  [ argument ]  ]
[ movzx eax, byte ptr [r13] ]
[ cmp al,  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp al,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov ecx, dword ptr [rsp  +  [ displacement ] ] ]
[ xor edx, edx ]
[ test ecx, ecx ]
[ jz  [ addr ]  ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ mov dword ptr [rsp  +  [ displacement ] ], r9d ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9791d48c
#call parent addr: 7f5e9791d6d0
#root size: 1299
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 7f5e9791d48c
#root size: 1300
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ mov r9d, dword ptr [rsp  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [rbx  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ mov dword ptr [rbx  +  [ displacement ] ],  [ argument ]  ]
[ mov rdx, qword ptr [rbx  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ mov dword ptr [rbx  +  [ displacement ] ],  [ argument ]  ]
[ movzx eax, byte ptr [r13] ]
[ cmp al,  [ argument ]  ]
[ mov eax,  [ argument ]  ]
[ cmovz r15d, eax ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ cmp byte ptr [rdx],  [ argument ]  ]
[ jz  [ addr ]  ]
[ lea r9, ptr [rdx  +  [ displacement ] ] ]
[ mov rdi, r13 ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdx ]
[ mov qword ptr [rbx  +  [ displacement ] ], r9 ]
[ movsx r14d, byte ptr [rdx] ]
[ mov qword ptr [rsp  +  [ displacement ] ], r9 ]
[ mov esi, r14d ]
[ mov byte ptr [rsp  +  [ displacement ] ], r14b ]
[ call  [ addr.func ]  ]
[ mov edx, dword ptr [rbx] ]
[ cmp dword ptr [rbx  +  [ displacement ] ], edx ]
[ jle  [ addr ]  ]
[ mov dword ptr [rbx  +  [ displacement ] ], edx ]
[ mov ecx, dword ptr [rbx  +  [ displacement ] ] ]
[ cmp edx, ecx ]
[ jnl  [ addr ]  ]
[ mov dword ptr [rbx  +  [ displacement ] ], edx ]
[ mov ecx, edx ]
[ cmp dword ptr [rbx  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov ecx, dword ptr [rbx  +  [ displacement ] ] ]
[ cmp edx, ecx ]
[ jnl  [ addr ]  ]
[ mov dword ptr [rbx  +  [ displacement ] ], edx ]
[ mov ecx, edx ]
[ cmp dword ptr [rbx  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp ebp, edx ]
[ jz  [ addr ]  ]
[ cmp dword ptr [rbx  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp ebp, edx ]
[ jz  [ addr ]  ]
[ movsxd rax, edx ]
[ mov r14, qword ptr [r12 + rax * 8] ]
[ cmp byte ptr [r14],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ movsxd rax, dword ptr [rbx  +  [ displacement ] ] ]
[ cmp eax, ecx ]
[ jz  [ addr ]  ]
[ cmp edx, eax ]
[ jz  [ addr ]  ]
[ mov rsi, rbx ]
[ mov rdi, r12 ]
[ mov dword ptr [rsp  +  [ displacement ] ], r9d ]
[ call  [ addr.func ]  ]
[ cmp edx, ecx ]
[ jz  [ addr ]  ]
[ mov dword ptr [rbx  +  [ displacement ] ], edx ]
[ movsxd rax, edx ]
[ jmp  [ addr ]  ]
[ movsxd rax, ecx ]
[ jmp  [ addr ]  ]
[ cmp ebp, eax ]
[ jnle  [ addr ]  ]
[ jmp  [ addr ]  ]
[ mov edx, eax ]
[ jmp  [ addr ]  ]
[ mov dword ptr [rbx  +  [ displacement ] ], edx ]
[ jmp  [ addr ]  ]
[ cmp ebp, edx ]
[ jz  [ addr ]  ]
[ movsxd rax, edx ]
[ mov r14, qword ptr [r12 + rax * 8] ]
[ cmp byte ptr [r14],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp byte ptr [r14  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov ebp, dword ptr [rbx  +  [ displacement ] ] ]
[ mov eax, dword ptr [rbx  +  [ displacement ] ] ]
[ cmp ebp, eax ]
[ jz  [ addr ]  ]
[ mov dword ptr [rbx], eax ]
[ mov r14d,  [ addr ]  ]
[ jmp  [ addr ]  ]
[ mov r14d,  [ addr ]  ]
[ jmp  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ mov eax, r14d ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ mov edx, dword ptr [rip  +  [ displacement ] ] ]
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ mov dword ptr [rbx], edx ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rdx], rcx ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ mov ecx, dword ptr [rip  +  [ displacement ] ] ]
[ mov dword ptr [rdx], ecx ]
[ pop rdx ]
[ pop rcx ]
[ pop rbx ]
[ ret  ]
[ add rsp,  [ argument ]  ]
[ ret  ]
[ cmp eax,  [ addr ]  ]
[ jz  [ addr ]  ]
[ add eax,  [ argument ]  ]
[ cmp eax,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ movsxd rax, dword ptr [rbx + rax * 4] ]
[ add rax, rbx ]
[ jmp rax ]
[ cmp qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov ecx,  [ argument ]  ]
[ xor edx, edx ]
[ div rcx ]
[ test rdx, rdx ]
[ setnz dl ]
[ xor edi, edi ]
[ movzx edx, dl ]
[ add rax, rdx ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ call  [ addr.func ]  ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629d9d8d
#call parent addr: 7f5e9791d48c
#root size: 1300
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 55e8629d9d8d
#root size: 1301
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 7f5e978610df
#call parent addr: 55e8629d9d8d
#root size: 1301
===============================================================
RET========================================================
#ret target: 7f5e978610df
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ mov rbx, rax ]
[ mov rdi, rax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629d9da6
#call parent addr: 55e8629d9d8d
#root size: 1301
===============================================================
[ nop edx, edi ]
[ push r13 ]
[ mov r13, rsi ]
[ push r12 ]
[ push rbp ]
[ mov rbp, rdx ]
[ push rbx ]
[ mov rbx, rdi ]
[ sub rsp,  [ argument ]  ]
[ mov rax, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ xor eax, eax ]
[ test rdi, rdi ]
[ jz  [ addr ]  ]
[ xor r12d, r12d ]
[ cmp byte ptr [rbx],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ add rbx,  [ argument ]  ]
[ mov r12d,  [ argument ]  ]
[ mov ecx,  [ argument ]  ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ mov rdi, rbx ]
[ call  [ addr.func ]  ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629e4b37
#call parent addr: 55e8629d9da6
#root size: 1302
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 55e8629e4b37
#root size: 1303
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ mov rbx, rax ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629e4b4f
#call parent addr: 55e8629e4b37
#root size: 1303
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 55e8629e4b4f
#root size: 1304
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ mov rbx, rax ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629e4b67
#call parent addr: 55e8629e4b4f
#root size: 1304
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 55e8629e4b67
#root size: 1305
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov qword ptr [rbp],  [ argument ]  ]
[ xor eax, eax ]
[ mov dword ptr [r13],  [ argument ]  ]
[ jmp  [ addr ]  ]
[ mov qword ptr [rbp],  [ argument ]  ]
[ mov dword ptr [r13],  [ argument ]  ]
[ jmp  [ addr ]  ]
[ mov rcx, qword ptr [rsp  +  [ displacement ] ] ]
[ xor rcx, qword ptr fs:[ [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ ret  ]
[ test rbx, rbx ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ test r14b, r14b ]
[ jz  [ addr ]  ]
[ mov dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jmp  [ addr ]  ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629da617
#call parent addr: 55e8629e4b67
#root size: 1305
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 55e8629da617
#root size: 1306
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ test r14b, r14b ]
[ jz  [ addr ]  ]
[ mov dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov ecx,  [ argument ]  ]
[ xor edx, edx ]
[ div rcx ]
[ test rdx, rdx ]
[ setnz dl ]
[ xor edi, edi ]
[ movzx edx, dl ]
[ add rax, rdx ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629d9104
#call parent addr: 55e8629da617
#root size: 1306
===============================================================
[ nop edx, edi ]
[ test rdi, rdi ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ cmovz rdi, rax ]
[ mov eax, dword ptr [rdi] ]
[ ret  ]
RET========================================================
#ret target: 55e8629d9104
#function name: NULL
#func_id: 5
===========================================================
[ mov edx, dword ptr [rip  +  [ displacement ] ] ]
[ mov ebx, eax ]
[ cmp edx,  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp edx,  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ xor eax, eax ]
[ xor edi, edi ]
[ mov byte ptr [rip  +  [ displacement ] ], al ]
[ and byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629d98f2
#call parent addr: 55e8629da617
#root size: 1306
===============================================================
[ nop edx, edi ]
[ push r12 ]
[ push rbp ]
[ mov rbp, rdi ]
[ push rbx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629e886b
#call parent addr: 55e8629d98f2
#root size: 1307
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ add rax, qword ptr fs:[ [ addr ]  ]
[ ret  ]
RET========================================================
#ret target: 55e8629e886b
#function name: __errno_location
#func_id: 302
===========================================================
[ test rbp, rbp ]
[ mov esi,  [ argument ]  ]
[ mov r12d, dword ptr [rax] ]
[ mov rbx, rax ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ cmovz rbp, rax ]
[ mov rdi, rbp ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629e888c
#call parent addr: 55e8629d98f2
#root size: 1307
===============================================================
[ nop edx, edi ]
[ push r12 ]
[ mov r12, rsi ]
[ push rbp ]
[ mov rbp, rdi ]
[ mov rdi, rsi ]
[ sub rsp,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629e9af4
#call parent addr: 55e8629e888c
#root size: 1308
===============================================================
[ nop edx, edi ]
[ push rbx ]
[ mov rbx, rdi ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629e98c8
#call parent addr: 55e8629e9af4
#root size: 1309
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ push r12 ]
[ push rbp ]
[ mov rbp, rdi ]
[ push rbx ]
[ mov rax, qword ptr [rax] ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ test rdi, rdi ]
[ js  [ addr ]  ]
[ lea rax, ptr [rdi  +  [ displacement ] ] ]
[ xor ebx, ebx ]
[ cmp rax,  [ argument ]  ]
[ jnbe  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5e978b52cf
#call parent addr: 55e8629e98c8
#root size: 1310
===============================================================
RET========================================================
#ret target: 7f5e978b52cf
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ test rbx, rbx ]
[ jnz  [ addr ]  ]
[ pop rbx ]
[ ret  ]
[ pop rbx ]
[ ret  ]
[ add rsp,  [ argument ]  ]
[ mov rdx, r12 ]
[ mov rsi, rbp ]
[ mov rdi, rax ]
[ pop rbp ]
[ pop r12 ]
[ jmp  [ addr ]  ]
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ mov rax, rdi ]
[ cmp rdx,  [ argument ]  ]
[ jb  [ addr ]  ]
[ cmp rdx,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ vmovdqu ymm0, ymmword ptr [rsi] ]
[ vmovdqu ymm1, ymmword ptr [rsi + rdx * 1- [ displacement ] ] ]
[ vmovdqu ymmword ptr [rdi], ymm0 ]
[ vmovdqu ymmword ptr [rdi + rdx * 1- [ displacement ] ], ymm1 ]
[ vzeroupper ]
[ ret  ]
[ mov dword ptr [rbx], r12d ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ ret  ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ cmp ebx,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ cmp eax,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ sub eax,  [ argument ]  ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ lea rbx, ptr [rax + rdx * 1] ]
[ movzx eax, byte ptr [rdx + rax * 1] ]
[ test al, al ]
[ jz  [ addr ]  ]
[ xor edi, edi ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629d9951
#call parent addr: 55e8629e98c8
#root size: 1310
===============================================================
CALL===========================================================
#now call addr: 55e8629e886b
#call parent addr: 55e8629d9951
#root size: 1311
===============================================================
RET========================================================
#ret target: 55e8629e886b
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e888c
#call parent addr: 55e8629d9951
#root size: 1311
===============================================================
CALL===========================================================
#now call addr: 55e8629e9af4
#call parent addr: 55e8629e888c
#root size: 1312
===============================================================
CALL===========================================================
#now call addr: 55e8629e98c8
#call parent addr: 55e8629e9af4
#root size: 1313
===============================================================
CALL===========================================================
#now call addr: 7f5e978b52cf
#call parent addr: 55e8629e98c8
#root size: 1314
===============================================================
RET========================================================
#ret target: 7f5e978b52cf
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
[ mov edx,  [ argument ]  ]
[ mov esi,  [ argument ]  ]
[ mov rdi, rax ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629d996a
#call parent addr: 55e8629e98c8
#root size: 1314
===============================================================
[ nop edx, edi ]
[ test rdi, rdi ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov ecx, esi ]
[ cmovz rdi, rax ]
[ mov eax, esi ]
[ and ecx,  [ argument ]  ]
[ shr al,  [ argument ]  ]
[ movzx eax, al ]
[ lea rsi, ptr [rdi + rax * 4 + [ displacement ] ] ]
[ mov edi, dword ptr [rsi] ]
[ mov eax, edi ]
[ shr eax, cl ]
[ xor edx, eax ]
[ and eax,  [ argument ]  ]
[ and edx,  [ argument ]  ]
[ shl edx, cl ]
[ xor edx, edi ]
[ mov dword ptr [rsi], edx ]
[ ret  ]
RET========================================================
#ret target: 55e8629d996a
#function name: NULL
#func_id: 5
===========================================================
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ mov edx, dword ptr [rip  +  [ displacement ] ] ]
[ sub eax,  [ argument ]  ]
[ cmp eax,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ mov edx, dword ptr [rip  +  [ displacement ] ] ]
[ sub eax,  [ argument ]  ]
[ cmp eax,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ cmp byte ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ test edx, edx ]
[ jnz  [ addr ]  ]
[ test edx, edx ]
[ jnz  [ addr ]  ]
[ test r15, r15 ]
[ jz  [ addr ]  ]
[ lea rbx, ptr [rip  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ movsxd rbx, dword ptr [rip  +  [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ cmp dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov eax,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ sbb eax, eax ]
[ and eax,  [ addr ]  ]
[ add eax,  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ jmp  [ addr ]  ]
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ lea r8, ptr [rip  +  [ displacement ] ] ]
[ lea rcx, ptr [rip  +  [ displacement ] ] ]
[ xor esi, esi ]
[ mov edi,  [ argument ]  ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629d9a72
#call parent addr: 55e8629e98c8
#root size: 1314
===============================================================
CALL===========================================================
#now call addr: 7f5e978610a0
#call parent addr: 55e8629d9a72
#root size: 1315
===============================================================
RET========================================================
#ret target: 7f5e978610a0
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ mov rdi, rax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629d9a7a
#call parent addr: 55e8629d9a72
#root size: 1315
===============================================================
[ nop edx, edi ]
[ push r12 ]
[ push rbp ]
[ push rbx ]
[ test rdi, rdi ]
[ jz  [ addr ]  ]
[ mov rbp, rdi ]
[ call  [ addr.func ]  ]
[ mov edi,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629eadc5
#call parent addr: 55e8629d9a7a
#root size: 1316
===============================================================
CALL===========================================================
#now call addr: 7f5e978b52cf
#call parent addr: 55e8629eadc5
#root size: 1317
===============================================================
RET========================================================
#ret target: 7f5e978b52cf
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
[ mov r12, rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ xor edx, edx ]
[ mov qword ptr [r12],  [ argument ]  ]
[ mov rax, r12 ]
[ mov word ptr [r12  +  [ displacement ] ], dx ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ ret  ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ sub eax,  [ argument ]  ]
[ and eax,  [ addr ]  ]
[ jz  [ addr ]  ]
[ cmp dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ xor eax, eax ]
[ mov byte ptr [rip  +  [ displacement ] ], al ]
[ and byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov eax,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ movzx eax, byte ptr [rip  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ mov byte ptr [rip  +  [ displacement ] ], al ]
[ and byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov edi,  [ argument ]  ]
[ mov r14d, r12d ]
[ mov qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ lea r15, ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629d9aeb
#call parent addr: 55e8629eadc5
#root size: 1317
===============================================================
CALL===========================================================
#now call addr: 55e8629e98c8
#call parent addr: 55e8629d9aeb
#root size: 1318
===============================================================
[ mov rsi, rbp ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978b52cf
#call parent addr: 55e8629e98c8
#root size: 1319
===============================================================
[ nop dword ptr [rax + rax * 1], eax ]
[ mov eax, dword ptr [rbx  +  [ displacement ] ] ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ mov rdi, rbx ]
[ call  [ addr.func ]  ]
RET========================================================
#ret target: 7f5e978b52cf
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
[ sub r14d, ebx ]
[ mov qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629d9b05
#call parent addr: 55e8629e98c8
#root size: 1319
===============================================================
[ cmp qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ push rbx ]
[ jz  [ addr ]  ]
[ xor ebx, ebx ]
[ nop dword ptr [rax], eax ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov rdi, qword ptr [rax + rbx * 8] ]
[ add rbx,  [ argument ]  ]
[ call  [ addr.func ]  ]
[ mov qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ pop rbx ]
[ mov byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ ret  ]
RET========================================================
#ret target: 55e8629d9b05
#function name: NULL
#func_id: 5
===========================================================
[ test r14d, r14d ]
[ jle  [ addr ]  ]
[ nop dword ptr [rax + rax * 1], eax ]
[ mov rdi, qword ptr [rbp + rbx * 8] ]
[ mov rcx, r15 ]
[ mov edx,  [ argument ]  ]
[ xor esi, esi ]
[ add rbx,  [ argument ]  ]
[ call  [ addr.func ]  ]
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov edx,  [ argument ]  ]
[ xor esi, esi ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629d9d18
#call parent addr: 55e8629e98c8
#root size: 1319
===============================================================
[ push r13 ]
[ mov r13d, edx ]
[ push r12 ]
[ mov r12, rsi ]
[ push rbp ]
[ mov rbp, rdi ]
[ mov edi,  [ argument ]  ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629dae98
#call parent addr: 55e8629d9d18
#root size: 1320
===============================================================
CALL===========================================================
#now call addr: 55e8629e98c8
#call parent addr: 55e8629dae98
#root size: 1321
===============================================================
CALL===========================================================
#now call addr: 7f5e978b52cf
#call parent addr: 55e8629e98c8
#root size: 1322
===============================================================
RET========================================================
#ret target: 7f5e978b52cf
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
[ mov rbx, rax ]
[ test r12, r12 ]
[ jz  [ addr ]  ]
[ mov rdi, r12 ]
[ call  [ addr.func ]  ]
[ mov qword ptr [rbx  +  [ displacement ] ], r12 ]
[ test rbp, rbp ]
[ jz  [ addr ]  ]
[ mov rdi, rbp ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629daebc
#call parent addr: 55e8629e98c8
#root size: 1322
===============================================================
[ nop edx, edi ]
[ push rbp ]
[ mov rbp, rdi ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629e9b18
#call parent addr: 55e8629daebc
#root size: 1323
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ mov ecx, edi ]
[ mov rdx, rdi ]
[ vpxor xmm0, xmm0, xmm0 ]
[ and ecx,  [ argument ]  ]
[ cmp ecx,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ vpcmpeqb ymm1, ymm0, ymmword ptr [rdi] ]
[ vpmovmskb eax, ymm1 ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ add rdi,  [ argument ]  ]
[ and ecx,  [ argument ]  ]
[ and rdi,  [ addr ]  ]
[ jmp  [ addr ]  ]
RET========================================================
#ret target: 55e8629e9b18
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ mov rdi, rbp ]
[ pop rbp ]
[ lea rsi, ptr [rax  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 55e8629e9af4
#call parent addr: 55e8629daebc
#root size: 1323
===============================================================
CALL===========================================================
#now call addr: 55e8629e98c8
#call parent addr: 55e8629e9af4
#root size: 1324
===============================================================
CALL===========================================================
#now call addr: 7f5e978b52cf
#call parent addr: 55e8629e98c8
#root size: 1325
===============================================================
[ cmp qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ mov r14d,  [ argument ]  ]
[ mov eax,  [ argument ]  ]
[ mov r13d,  [ argument ]  ]
[ add rax, rbx ]
[ mov r8, qword ptr [rax  +  [ displacement ] ] ]
[ lea rcx, ptr [rax- [ displacement ] ] ]
[ cmp rcx, r8 ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [r8  +  [ displacement ] ] ]
[ cmp qword ptr [rdx  +  [ displacement ] ], r8 ]
[ jnz  [ addr ]  ]
[ mov ecx,  [ argument ]  ]
[ mov r14d,  [ argument ]  ]
[ mov r13d,  [ argument ]  ]
[ xor eax, eax ]
[ lea rsi, ptr [rbx + rax * 8] ]
[ mov r8, qword ptr [rsi  +  [ displacement ] ] ]
[ test r8, r8 ]
[ jz  [ addr ]  ]
[ add rcx, rbx ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ mov rdx, qword ptr [r8  +  [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov qword ptr [rsi  +  [ displacement ] ], rdx ]
[ mov eax, dword ptr [r8  +  [ displacement ] ] ]
[ shr eax,  [ argument ]  ]
[ cmp eax, r14d ]
[ jnz  [ addr ]  ]
RET========================================================
#ret target: 7f5e978b52cf
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
[ cmp dl,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ jb  [ addr ]  ]
[ movzx ecx, byte ptr [rsi] ]
[ mov byte ptr [rdi], cl ]
[ ret  ]
[ movzx ecx, word ptr [rsi + rdx * 1- [ displacement ] ] ]
[ movzx esi, word ptr [rsi] ]
[ mov word ptr [rdi + rdx * 1- [ displacement ] ], cx ]
[ mov word ptr [rdi], si ]
[ ret  ]
[ mov rbp, rax ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rbx], rbp ]
[ mov byte ptr [rbx  +  [ displacement ] ], r13b ]
[ mov qword ptr [rbx  +  [ displacement ] ], rax ]
[ mov qword ptr [rip  +  [ displacement ] ], rbx ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ ret  ]
[ cmp qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rbp, qword ptr [rip  +  [ displacement ] ] ]
[ test rbp, rbp ]
[ jz  [ addr ]  ]
[ cmp qword ptr [rbp  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [rbp  +  [ displacement ] ] ]
[ mov r8, qword ptr [rip  +  [ displacement ] ] ]
[ mov rdi, qword ptr [rbp] ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ test r8, r8 ]
[ jz  [ addr ]  ]
[ test rdi, rdi ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov rdx, rax ]
[ sub rdx, qword ptr [rip  +  [ displacement ] ] ]
[ cmp rdx,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ movzx edx, byte ptr [rbp  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rbp  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629d9b58
#call parent addr: 55e8629e98c8
#root size: 1325
===============================================================
[ push r15 ]
[ push r14 ]
[ mov r14, rsi ]
[ push r13 ]
[ mov r13, rdi ]
[ push r12 ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov dword ptr [rsp  +  [ displacement ] ], edx ]
[ mov byte ptr [rsp  +  [ displacement ] ], dl ]
[ mov rax, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ xor eax, eax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629df8f2
#call parent addr: 55e8629d9b58
#root size: 1326
===============================================================
RET========================================================
#ret target: 55e8629df8f2
#function name: __errno_location
#func_id: 302
===========================================================
[ mov rdi, r13 ]
[ mov dword ptr [rax],  [ argument ]  ]
[ mov rbp, rax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629df903
#call parent addr: 55e8629d9b58
#root size: 1326
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ push r13 ]
[ push r12 ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov rax, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ xor eax, eax ]
[ cmp byte ptr [rdi],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov esi,  [ addr ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978f9032
#call parent addr: 55e8629df903
#root size: 1327
===============================================================
[ nop edx, edi ]
[ sub rsp,  [ argument ]  ]
[ mov r10d, esi ]
[ mov r9, rdi ]
[ mov r8d, esi ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdx ]
[ mov rax, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ xor eax, eax ]
[ and r10d,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov eax, esi ]
[ and eax,  [ addr ]  ]
[ cmp eax,  [ addr ]  ]
[ jz  [ addr ]  ]
[ mov edx, r8d ]
[ mov rsi, r9 ]
[ mov edi,  [ addr ]  ]
[ mov eax,  [ argument ]  ]
[ syscall  ]
[ cmp rax,  [ addr ]  ]
[ jnbe  [ addr ]  ]
[ mov rcx, qword ptr [rsp  +  [ displacement ] ] ]
[ xor rcx, qword ptr fs:[ [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5e978f9032
#function name: __open64_nocancel
#func_id: 1276
===========================================================
[ mov ebp, eax ]
[ test eax, eax ]
[ js  [ addr ]  ]
[ mov rdx, rsp ]
[ mov esi, eax ]
[ mov edi,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978f904b
#call parent addr: 55e8629df903
#root size: 1327
===============================================================
RET========================================================
#ret target: 7f5e978f904b
#function name: __fxstat64
#func_id: 1196
===========================================================
[ test eax, eax ]
[ js  [ addr ]  ]
[ mov eax, dword ptr [rsp  +  [ displacement ] ] ]
[ and eax,  [ argument ]  ]
[ cmp eax,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov ebx,  [ argument ]  ]
[ cmovnb rbx, qword ptr [rsp  +  [ displacement ] ] ]
[ mov eax,  [ addr ]  ]
[ cmp rbx,  [ addr ]  ]
[ cmovnbe rbx, rax ]
[ lea rdi, ptr [rbx  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978f9094
#call parent addr: 55e8629df903
#root size: 1327
===============================================================
CALL===========================================================
#now call addr: 7f5e978b52cf
#call parent addr: 7f5e978f9094
#root size: 1328
===============================================================
RET========================================================
#ret target: 7f5e978b52cf
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
[ mov r12, rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov dword ptr [r12], ebp ]
[ mov dword ptr [r12  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [r12  +  [ displacement ] ], rbx ]
[ mov qword ptr [r12  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [r12  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [r12  +  [ displacement ] ],  [ argument ]  ]
[ mov dword ptr [r12  +  [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ mov rax, r12 ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ ret  ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ cmp qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov r12, rax ]
[ jz  [ addr ]  ]
[ mov rdi, rax ]
[ call  [ addr.func ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629dfa75
#call parent addr: 7f5e978f9094
#root size: 1328
===============================================================
RET========================================================
#ret target: 55e8629dfa75
#function name: NULL
#func_id: 5
===========================================================
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rdi, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax, qword ptr [rdi  +  [ displacement ] ] ]
[ cmp rax, qword ptr [rdi  +  [ displacement ] ] ]
[ jnb  [ addr ]  ]
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ nop word ptr [rax + rax * 1], ax ]
[ mov dword ptr [rbp],  [ argument ]  ]
[ mov rdi, r12 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629dfb52
#call parent addr: 7f5e978f9094
#root size: 1328
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ push r14 ]
[ mov r14, rdi ]
[ push r13 ]
[ push r12 ]
[ push rbp ]
[ mov rbp, qword ptr [rip  +  [ displacement ] ] ]
[ push rbx ]
[ mov r13d, dword ptr fs:[rbp] ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ lea r12, ptr [rdi  +  [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov edx,  [ argument ]  ]
[ cmpxchg dword ptr [rdi  +  [ displacement ] ], edx ]
[ mov rdx, qword ptr [r14  +  [ displacement ] ] ]
[ mov rax, qword ptr [r14  +  [ displacement ] ] ]
[ lea rbx, ptr [r14  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ lea r8, ptr [rdx  +  [ displacement ] ] ]
[ cmp rdx, rax ]
[ jb  [ addr ]  ]
[ mov rdx, qword ptr [r14  +  [ displacement ] ] ]
[ mov edi, dword ptr [r14] ]
[ mov rsi, rbx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978f94f0
#call parent addr: 55e8629dfb52
#root size: 1329
===============================================================
[ nop edx, edi ]
[ cmp rdx,  [ addr ]  ]
[ mov eax,  [ addr ]  ]
[ cmovnbe rdx, rax ]
[ mov eax,  [ argument ]  ]
[ syscall  ]
[ cmp rax,  [ addr ]  ]
[ jnbe  [ addr ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5e978f94f0
#function name: getdents64
#func_id: 1038
===========================================================
[ test rax, rax ]
[ jle  [ addr ]  ]
[ mov qword ptr [r14  +  [ displacement ] ], rax ]
[ xor edx, edx ]
[ mov r8d,  [ argument ]  ]
[ jmp  [ addr ]  ]
[ add r8, r14 ]
[ movzx ecx, word ptr [r8  +  [ displacement ] ] ]
[ add rdx, rcx ]
[ mov rcx, qword ptr [r8  +  [ displacement ] ] ]
[ cmp qword ptr [r8],  [ argument ]  ]
[ mov qword ptr [r14  +  [ displacement ] ], rdx ]
[ mov qword ptr [r14  +  [ displacement ] ], rcx ]
[ jnz  [ addr ]  ]
[ lea r8, ptr [rdx  +  [ displacement ] ] ]
[ cmp rdx, rax ]
[ jb  [ addr ]  ]
[ mov rdx, qword ptr [r14  +  [ displacement ] ] ]
[ mov edi, dword ptr [r14] ]
[ mov rsi, rbx ]
[ call  [ addr.func ]  ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ sub dword ptr [r14  +  [ displacement ] ],  [ argument ]  ]
[ pop rbx ]
[ mov rax, r8 ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ ret  ]
[ mov rbx, rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ lea r15, ptr [rax  +  [ displacement ] ] ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ cmp eax,  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp byte ptr [rbx  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov r14, qword ptr [rip  +  [ displacement ] ] ]
[ test r14, r14 ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ mov r14, qword ptr [rip  +  [ displacement ] ] ]
[ test r14, r14 ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ movzx eax, byte ptr [rbx  +  [ displacement ] ] ]
[ xor esi, esi ]
[ sub eax,  [ argument ]  ]
[ cmp al,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ movzx eax, al ]
[ lea rcx, ptr [rip  +  [ displacement ] ] ]
[ mov esi, dword ptr [rcx + rax * 4] ]
[ xor edx, edx ]
[ mov rcx, r13 ]
[ mov rdi, r15 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629dfe1a
#call parent addr: 55e8629dfb52
#root size: 1329
===============================================================
[ push rbp ]
[ mov rbp, rsp ]
[ push r15 ]
[ mov r15, rcx ]
[ push r14 ]
[ push r13 ]
[ mov r13d, esi ]
[ push r12 ]
[ mov r12, rdi ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov dword ptr [rbp- [ displacement ] ], edx ]
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ mov rdi, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ xor eax, eax ]
[ cmp rcx, qword ptr [rip  +  [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov edx,  [ argument ]  ]
[ mov rax, rdx ]
[ mul rcx ]
[ seto dl ]
[ movzx edx, dl ]
[ test rax, rax ]
[ js  [ addr ]  ]
[ test rdx, rdx ]
[ jnz  [ addr ]  ]
[ lea rax, ptr [rcx + rcx * 4] ]
[ lea rax, ptr [rax + rax * 4] ]
[ lea rbx, ptr [rdi + rax * 8] ]
[ xor eax, eax ]
[ lea rdi, ptr [rbx  +  [ displacement ] ] ]
[ mov rcx, rbx ]
[ mov qword ptr [rbx  +  [ displacement ] ],  [ argument ]  ]
[ and rdi,  [ addr ]  ]
[ mov qword ptr [rbx],  [ argument ]  ]
[ sub rcx, rdi ]
[ add ecx,  [ argument ]  ]
[ shr ecx,  [ argument ]  ]
[ rep stosq qword ptr  [ str ] ]
[ mov qword ptr [rbx  +  [ displacement ] ],  [ argument ]  ]
[ mov dword ptr [rbx  +  [ displacement ] ], r13d ]
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov dword ptr [rbx  +  [ displacement ] ],  [ addr ]  ]
[ jnz  [ addr ]  ]
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp byte ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ movzx r8d, byte ptr [rip  +  [ displacement ] ] ]
[ jz  [ addr ]  ]
[ test r8b, r8b ]
[ jnz  [ addr ]  ]
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp r13d,  [ argument ]  ]
[ jz  [ addr ]  ]
[ movzx eax, byte ptr [rip  +  [ displacement ] ] ]
[ test al, al ]
[ jnz  [ addr ]  ]
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ test r13d, r13d ]
[ setz cl ]
[ mov edx, ecx ]
[ cmp r13d,  [ argument ]  ]
[ jz  [ addr ]  ]
[ xor r14d, r14d ]
[ jmp  [ addr ]  ]
[ mov rdi, r12 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629debe3
#call parent addr: 55e8629dfe1a
#root size: 1330
===============================================================
CALL===========================================================
#now call addr: 55e8629e9b18
#call parent addr: 55e8629debe3
#root size: 1331
===============================================================
RET========================================================
#ret target: 55e8629e9b18
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ mov rdi, rbp ]
[ pop rbp ]
[ lea rsi, ptr [rax  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 55e8629e9af4
#call parent addr: 55e8629debe3
#root size: 1331
===============================================================
CALL===========================================================
#now call addr: 55e8629e98c8
#call parent addr: 55e8629e9af4
#root size: 1332
===============================================================
CALL===========================================================
#now call addr: 7f5e978b52cf
#call parent addr: 55e8629e98c8
#root size: 1333
===============================================================
RET========================================================
#ret target: 7f5e978b52cf
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
[ add qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rbx], rax ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ lea rsp, ptr [rbp- [ displacement ] ] ]
[ mov rax, r14 ]
[ pop rbx ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ pop rbp ]
[ ret  ]
[ add qword ptr [rsp  +  [ displacement ] ], rax ]
[ cmp dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp dword ptr [rip  +  [ displacement ] ],  [ addr ]  ]
[ jnz  [ addr ]  ]
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629dfbc8
#call parent addr: 55e8629e98c8
#root size: 1333
===============================================================
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov rax, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ xor eax, eax ]
[ mov rbx, rsp ]
[ jmp  [ addr ]  ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ ret  ]
RET========================================================
#ret target: 55e8629dfbc8
#function name: NULL
#func_id: 5
===========================================================
[ jmp  [ addr ]  ]
[ mov dword ptr [rbp],  [ argument ]  ]
[ mov rdi, r12 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629dfb52
#call parent addr: 55e8629e98c8
#root size: 1333
===============================================================
RET========================================================
#ret target: 55e8629dfb52
#function name: readdir64
#func_id: 1040
===========================================================
CALL===========================================================
#now call addr: 55e8629dfe1a
#call parent addr: 55e8629e98c8
#root size: 1333
===============================================================
CALL===========================================================
#now call addr: 55e8629debe3
#call parent addr: 55e8629dfe1a
#root size: 1334
===============================================================
CALL===========================================================
#now call addr: 55e8629e9b18
#call parent addr: 55e8629debe3
#root size: 1335
===============================================================
RET========================================================
#ret target: 55e8629e9b18
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629e9af4
#call parent addr: 55e8629debe3
#root size: 1335
===============================================================
CALL===========================================================
#now call addr: 55e8629e98c8
#call parent addr: 55e8629e9af4
#root size: 1336
===============================================================
CALL===========================================================
#now call addr: 7f5e978b52cf
#call parent addr: 55e8629e98c8
#root size: 1337
===============================================================
RET========================================================
#ret target: 7f5e978b52cf
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
[ add qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rbx], rax ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ lea rsp, ptr [rbp- [ displacement ] ] ]
[ mov rax, r14 ]
[ pop rbx ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ pop rbp ]
[ ret  ]
CALL===========================================================
#now call addr: 55e8629dfbc8
#call parent addr: 55e8629e98c8
#root size: 1337
===============================================================
RET========================================================
#ret target: 55e8629dfbc8
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dfb52
#call parent addr: 55e8629e98c8
#root size: 1337
===============================================================
RET========================================================
#ret target: 55e8629dfb52
#function name: readdir64
#func_id: 1040
===========================================================
CALL===========================================================
#now call addr: 55e8629dfe1a
#call parent addr: 55e8629e98c8
#root size: 1337
===============================================================
CALL===========================================================
#now call addr: 55e8629debe3
#call parent addr: 55e8629dfe1a
#root size: 1338
===============================================================
CALL===========================================================
#now call addr: 55e8629e9b18
#call parent addr: 55e8629debe3
#root size: 1339
===============================================================
RET========================================================
#ret target: 55e8629e9b18
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629e9af4
#call parent addr: 55e8629debe3
#root size: 1339
===============================================================
CALL===========================================================
#now call addr: 55e8629e98c8
#call parent addr: 55e8629e9af4
#root size: 1340
===============================================================
CALL===========================================================
#now call addr: 7f5e978b52cf
#call parent addr: 55e8629e98c8
#root size: 1341
===============================================================
RET========================================================
#ret target: 7f5e978b52cf
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
CALL===========================================================
#now call addr: 55e8629dfbc8
#call parent addr: 55e8629e98c8
#root size: 1341
===============================================================
RET========================================================
#ret target: 55e8629dfbc8
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dfb52
#call parent addr: 55e8629e98c8
#root size: 1341
===============================================================
RET========================================================
#ret target: 55e8629dfb52
#function name: readdir64
#func_id: 1040
===========================================================
CALL===========================================================
#now call addr: 55e8629dfe1a
#call parent addr: 55e8629e98c8
#root size: 1341
===============================================================
CALL===========================================================
#now call addr: 55e8629debe3
#call parent addr: 55e8629dfe1a
#root size: 1342
===============================================================
CALL===========================================================
#now call addr: 55e8629e9b18
#call parent addr: 55e8629debe3
#root size: 1343
===============================================================
RET========================================================
#ret target: 55e8629e9b18
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629e9af4
#call parent addr: 55e8629debe3
#root size: 1343
===============================================================
CALL===========================================================
#now call addr: 55e8629e98c8
#call parent addr: 55e8629e9af4
#root size: 1344
===============================================================
CALL===========================================================
#now call addr: 7f5e978b52cf
#call parent addr: 55e8629e98c8
#root size: 1345
===============================================================
RET========================================================
#ret target: 7f5e978b52cf
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
CALL===========================================================
#now call addr: 55e8629dfbc8
#call parent addr: 55e8629e98c8
#root size: 1345
===============================================================
RET========================================================
#ret target: 55e8629dfbc8
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dfb52
#call parent addr: 55e8629e98c8
#root size: 1345
===============================================================
RET========================================================
#ret target: 55e8629dfb52
#function name: readdir64
#func_id: 1040
===========================================================
CALL===========================================================
#now call addr: 55e8629dfe1a
#call parent addr: 55e8629e98c8
#root size: 1345
===============================================================
CALL===========================================================
#now call addr: 55e8629debe3
#call parent addr: 55e8629dfe1a
#root size: 1346
===============================================================
CALL===========================================================
#now call addr: 55e8629e9b18
#call parent addr: 55e8629debe3
#root size: 1347
===============================================================
RET========================================================
#ret target: 55e8629e9b18
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629e9af4
#call parent addr: 55e8629debe3
#root size: 1347
===============================================================
CALL===========================================================
#now call addr: 55e8629e98c8
#call parent addr: 55e8629e9af4
#root size: 1348
===============================================================
CALL===========================================================
#now call addr: 7f5e978b52cf
#call parent addr: 55e8629e98c8
#root size: 1349
===============================================================
RET========================================================
#ret target: 7f5e978b52cf
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
CALL===========================================================
#now call addr: 55e8629dfbc8
#call parent addr: 55e8629e98c8
#root size: 1349
===============================================================
RET========================================================
#ret target: 55e8629dfbc8
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dfb52
#call parent addr: 55e8629e98c8
#root size: 1349
===============================================================
RET========================================================
#ret target: 55e8629dfb52
#function name: readdir64
#func_id: 1040
===========================================================
CALL===========================================================
#now call addr: 55e8629dfe1a
#call parent addr: 55e8629e98c8
#root size: 1349
===============================================================
CALL===========================================================
#now call addr: 55e8629debe3
#call parent addr: 55e8629dfe1a
#root size: 1350
===============================================================
CALL===========================================================
#now call addr: 55e8629e9b18
#call parent addr: 55e8629debe3
#root size: 1351
===============================================================
RET========================================================
#ret target: 55e8629e9b18
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629e9af4
#call parent addr: 55e8629debe3
#root size: 1351
===============================================================
CALL===========================================================
#now call addr: 55e8629e98c8
#call parent addr: 55e8629e9af4
#root size: 1352
===============================================================
CALL===========================================================
#now call addr: 7f5e978b52cf
#call parent addr: 55e8629e98c8
#root size: 1353
===============================================================
RET========================================================
#ret target: 7f5e978b52cf
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
CALL===========================================================
#now call addr: 55e8629dfbc8
#call parent addr: 55e8629e98c8
#root size: 1353
===============================================================
RET========================================================
#ret target: 55e8629dfbc8
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dfb52
#call parent addr: 55e8629e98c8
#root size: 1353
===============================================================
RET========================================================
#ret target: 55e8629dfb52
#function name: readdir64
#func_id: 1040
===========================================================
CALL===========================================================
#now call addr: 55e8629dfe1a
#call parent addr: 55e8629e98c8
#root size: 1353
===============================================================
CALL===========================================================
#now call addr: 55e8629debe3
#call parent addr: 55e8629dfe1a
#root size: 1354
===============================================================
CALL===========================================================
#now call addr: 55e8629e9b18
#call parent addr: 55e8629debe3
#root size: 1355
===============================================================
RET========================================================
#ret target: 55e8629e9b18
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629e9af4
#call parent addr: 55e8629debe3
#root size: 1355
===============================================================
CALL===========================================================
#now call addr: 55e8629e98c8
#call parent addr: 55e8629e9af4
#root size: 1356
===============================================================
CALL===========================================================
#now call addr: 7f5e978b52cf
#call parent addr: 55e8629e98c8
#root size: 1357
===============================================================
RET========================================================
#ret target: 7f5e978b52cf
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
CALL===========================================================
#now call addr: 55e8629dfbc8
#call parent addr: 55e8629e98c8
#root size: 1357
===============================================================
RET========================================================
#ret target: 55e8629dfbc8
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dfb52
#call parent addr: 55e8629e98c8
#root size: 1357
===============================================================
RET========================================================
#ret target: 55e8629dfb52
#function name: readdir64
#func_id: 1040
===========================================================
CALL===========================================================
#now call addr: 55e8629dfe1a
#call parent addr: 55e8629e98c8
#root size: 1357
===============================================================
CALL===========================================================
#now call addr: 55e8629debe3
#call parent addr: 55e8629dfe1a
#root size: 1358
===============================================================
CALL===========================================================
#now call addr: 55e8629e9b18
#call parent addr: 55e8629debe3
#root size: 1359
===============================================================
RET========================================================
#ret target: 55e8629e9b18
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629e9af4
#call parent addr: 55e8629debe3
#root size: 1359
===============================================================
CALL===========================================================
#now call addr: 55e8629e98c8
#call parent addr: 55e8629e9af4
#root size: 1360
===============================================================
CALL===========================================================
#now call addr: 7f5e978b52cf
#call parent addr: 55e8629e98c8
#root size: 1361
===============================================================
RET========================================================
#ret target: 7f5e978b52cf
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
[ add qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rbx], rax ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ lea rsp, ptr [rbp- [ displacement ] ] ]
[ mov rax, r14 ]
[ pop rbx ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ pop rbp ]
[ ret  ]
CALL===========================================================
#now call addr: 55e8629dfbc8
#call parent addr: 55e8629e98c8
#root size: 1361
===============================================================
RET========================================================
#ret target: 55e8629dfbc8
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dfb52
#call parent addr: 55e8629e98c8
#root size: 1361
===============================================================
RET========================================================
#ret target: 55e8629dfb52
#function name: readdir64
#func_id: 1040
===========================================================
[ test eax, eax ]
[ jz  [ addr ]  ]
[ xor eax, eax ]
[ cmp byte ptr [rbx  +  [ displacement ] ],  [ argument ]  ]
[ setz al ]
[ cmp byte ptr [rbx + rax * 1 + [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ nop dword ptr [rax], eax ]
[ mov r14, qword ptr [rip  +  [ displacement ] ] ]
[ test r14, r14 ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 55e8629dfbc8
#call parent addr: 55e8629e98c8
#root size: 1361
===============================================================
RET========================================================
#ret target: 55e8629dfbc8
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dfb52
#call parent addr: 55e8629e98c8
#root size: 1361
===============================================================
RET========================================================
#ret target: 55e8629dfb52
#function name: readdir64
#func_id: 1040
===========================================================
CALL===========================================================
#now call addr: 55e8629dfe1a
#call parent addr: 55e8629e98c8
#root size: 1361
===============================================================
CALL===========================================================
#now call addr: 55e8629debe3
#call parent addr: 55e8629dfe1a
#root size: 1362
===============================================================
CALL===========================================================
#now call addr: 55e8629e9b18
#call parent addr: 55e8629debe3
#root size: 1363
===============================================================
RET========================================================
#ret target: 55e8629e9b18
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629e9af4
#call parent addr: 55e8629debe3
#root size: 1363
===============================================================
CALL===========================================================
#now call addr: 55e8629e98c8
#call parent addr: 55e8629e9af4
#root size: 1364
===============================================================
CALL===========================================================
#now call addr: 7f5e978b52cf
#call parent addr: 55e8629e98c8
#root size: 1365
===============================================================
RET========================================================
#ret target: 7f5e978b52cf
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
CALL===========================================================
#now call addr: 55e8629dfbc8
#call parent addr: 55e8629e98c8
#root size: 1365
===============================================================
RET========================================================
#ret target: 55e8629dfbc8
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dfb52
#call parent addr: 55e8629e98c8
#root size: 1365
===============================================================
RET========================================================
#ret target: 55e8629dfb52
#function name: readdir64
#func_id: 1040
===========================================================
CALL===========================================================
#now call addr: 55e8629dfe1a
#call parent addr: 55e8629e98c8
#root size: 1365
===============================================================
CALL===========================================================
#now call addr: 55e8629debe3
#call parent addr: 55e8629dfe1a
#root size: 1366
===============================================================
CALL===========================================================
#now call addr: 55e8629e9b18
#call parent addr: 55e8629debe3
#root size: 1367
===============================================================
RET========================================================
#ret target: 55e8629e9b18
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629e9af4
#call parent addr: 55e8629debe3
#root size: 1367
===============================================================
CALL===========================================================
#now call addr: 55e8629e98c8
#call parent addr: 55e8629e9af4
#root size: 1368
===============================================================
CALL===========================================================
#now call addr: 7f5e978b52cf
#call parent addr: 55e8629e98c8
#root size: 1369
===============================================================
RET========================================================
#ret target: 7f5e978b52cf
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
CALL===========================================================
#now call addr: 55e8629dfbc8
#call parent addr: 55e8629e98c8
#root size: 1369
===============================================================
RET========================================================
#ret target: 55e8629dfbc8
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dfb52
#call parent addr: 55e8629e98c8
#root size: 1369
===============================================================
RET========================================================
#ret target: 55e8629dfb52
#function name: readdir64
#func_id: 1040
===========================================================
CALL===========================================================
#now call addr: 55e8629dfe1a
#call parent addr: 55e8629e98c8
#root size: 1369
===============================================================
CALL===========================================================
#now call addr: 55e8629debe3
#call parent addr: 55e8629dfe1a
#root size: 1370
===============================================================
CALL===========================================================
#now call addr: 55e8629e9b18
#call parent addr: 55e8629debe3
#root size: 1371
===============================================================
RET========================================================
#ret target: 55e8629e9b18
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629e9af4
#call parent addr: 55e8629debe3
#root size: 1371
===============================================================
CALL===========================================================
#now call addr: 55e8629e98c8
#call parent addr: 55e8629e9af4
#root size: 1372
===============================================================
CALL===========================================================
#now call addr: 7f5e978b52cf
#call parent addr: 55e8629e98c8
#root size: 1373
===============================================================
RET========================================================
#ret target: 7f5e978b52cf
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
CALL===========================================================
#now call addr: 55e8629dfbc8
#call parent addr: 55e8629e98c8
#root size: 1373
===============================================================
RET========================================================
#ret target: 55e8629dfbc8
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dfb52
#call parent addr: 55e8629e98c8
#root size: 1373
===============================================================
RET========================================================
#ret target: 55e8629dfb52
#function name: readdir64
#func_id: 1040
===========================================================
CALL===========================================================
#now call addr: 55e8629dfe1a
#call parent addr: 55e8629e98c8
#root size: 1373
===============================================================
CALL===========================================================
#now call addr: 55e8629debe3
#call parent addr: 55e8629dfe1a
#root size: 1374
===============================================================
CALL===========================================================
#now call addr: 55e8629e9b18
#call parent addr: 55e8629debe3
#root size: 1375
===============================================================
RET========================================================
#ret target: 55e8629e9b18
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629e9af4
#call parent addr: 55e8629debe3
#root size: 1375
===============================================================
CALL===========================================================
#now call addr: 55e8629e98c8
#call parent addr: 55e8629e9af4
#root size: 1376
===============================================================
CALL===========================================================
#now call addr: 7f5e978b52cf
#call parent addr: 55e8629e98c8
#root size: 1377
===============================================================
RET========================================================
#ret target: 7f5e978b52cf
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
CALL===========================================================
#now call addr: 55e8629dfbc8
#call parent addr: 55e8629e98c8
#root size: 1377
===============================================================
RET========================================================
#ret target: 55e8629dfbc8
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dfb52
#call parent addr: 55e8629e98c8
#root size: 1377
===============================================================
RET========================================================
#ret target: 55e8629dfb52
#function name: readdir64
#func_id: 1040
===========================================================
CALL===========================================================
#now call addr: 55e8629dfe1a
#call parent addr: 55e8629e98c8
#root size: 1377
===============================================================
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov edi,  [ argument ]  ]
[ mov byte ptr [rbp- [ displacement ] ], r8b ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629debe3
#call parent addr: 55e8629dfe1a
#root size: 1378
===============================================================
CALL===========================================================
#now call addr: 55e8629e9b18
#call parent addr: 55e8629debe3
#root size: 1379
===============================================================
RET========================================================
#ret target: 55e8629e9b18
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629e9af4
#call parent addr: 55e8629debe3
#root size: 1379
===============================================================
CALL===========================================================
#now call addr: 55e8629e98c8
#call parent addr: 55e8629e9af4
#root size: 1380
===============================================================
CALL===========================================================
#now call addr: 7f5e978b52cf
#call parent addr: 55e8629e98c8
#root size: 1381
===============================================================
RET========================================================
#ret target: 7f5e978b52cf
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
CALL===========================================================
#now call addr: 55e8629dfbc8
#call parent addr: 55e8629e98c8
#root size: 1381
===============================================================
RET========================================================
#ret target: 55e8629dfbc8
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dfb52
#call parent addr: 55e8629e98c8
#root size: 1381
===============================================================
RET========================================================
#ret target: 55e8629dfb52
#function name: readdir64
#func_id: 1040
===========================================================
CALL===========================================================
#now call addr: 55e8629dfe1a
#call parent addr: 55e8629e98c8
#root size: 1381
===============================================================
CALL===========================================================
#now call addr: 55e8629debe3
#call parent addr: 55e8629dfe1a
#root size: 1382
===============================================================
CALL===========================================================
#now call addr: 55e8629e9b18
#call parent addr: 55e8629debe3
#root size: 1383
===============================================================
RET========================================================
#ret target: 55e8629e9b18
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629e9af4
#call parent addr: 55e8629debe3
#root size: 1383
===============================================================
CALL===========================================================
#now call addr: 55e8629e98c8
#call parent addr: 55e8629e9af4
#root size: 1384
===============================================================
CALL===========================================================
#now call addr: 7f5e978b52cf
#call parent addr: 55e8629e98c8
#root size: 1385
===============================================================
RET========================================================
#ret target: 7f5e978b52cf
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
CALL===========================================================
#now call addr: 55e8629dfbc8
#call parent addr: 55e8629e98c8
#root size: 1385
===============================================================
RET========================================================
#ret target: 55e8629dfbc8
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dfb52
#call parent addr: 55e8629e98c8
#root size: 1385
===============================================================
RET========================================================
#ret target: 55e8629dfb52
#function name: readdir64
#func_id: 1040
===========================================================
CALL===========================================================
#now call addr: 55e8629dfe1a
#call parent addr: 55e8629e98c8
#root size: 1385
===============================================================
CALL===========================================================
#now call addr: 55e8629debe3
#call parent addr: 55e8629dfe1a
#root size: 1386
===============================================================
CALL===========================================================
#now call addr: 55e8629e9b18
#call parent addr: 55e8629debe3
#root size: 1387
===============================================================
RET========================================================
#ret target: 55e8629e9b18
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629e9af4
#call parent addr: 55e8629debe3
#root size: 1387
===============================================================
CALL===========================================================
#now call addr: 55e8629e98c8
#call parent addr: 55e8629e9af4
#root size: 1388
===============================================================
CALL===========================================================
#now call addr: 7f5e978b52cf
#call parent addr: 55e8629e98c8
#root size: 1389
===============================================================
RET========================================================
#ret target: 7f5e978b52cf
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
CALL===========================================================
#now call addr: 55e8629dfbc8
#call parent addr: 55e8629e98c8
#root size: 1389
===============================================================
RET========================================================
#ret target: 55e8629dfbc8
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dfb52
#call parent addr: 55e8629e98c8
#root size: 1389
===============================================================
RET========================================================
#ret target: 55e8629dfb52
#function name: readdir64
#func_id: 1040
===========================================================
CALL===========================================================
#now call addr: 55e8629dfe1a
#call parent addr: 55e8629e98c8
#root size: 1389
===============================================================
CALL===========================================================
#now call addr: 55e8629debe3
#call parent addr: 55e8629dfe1a
#root size: 1390
===============================================================
CALL===========================================================
#now call addr: 55e8629e9b18
#call parent addr: 55e8629debe3
#root size: 1391
===============================================================
RET========================================================
#ret target: 55e8629e9b18
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629e9af4
#call parent addr: 55e8629debe3
#root size: 1391
===============================================================
CALL===========================================================
#now call addr: 55e8629e98c8
#call parent addr: 55e8629e9af4
#root size: 1392
===============================================================
CALL===========================================================
#now call addr: 7f5e978b52cf
#call parent addr: 55e8629e98c8
#root size: 1393
===============================================================
RET========================================================
#ret target: 7f5e978b52cf
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
CALL===========================================================
#now call addr: 55e8629dfbc8
#call parent addr: 55e8629e98c8
#root size: 1393
===============================================================
RET========================================================
#ret target: 55e8629dfbc8
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dfb52
#call parent addr: 55e8629e98c8
#root size: 1393
===============================================================
RET========================================================
#ret target: 55e8629dfb52
#function name: readdir64
#func_id: 1040
===========================================================
CALL===========================================================
#now call addr: 55e8629dfe1a
#call parent addr: 55e8629e98c8
#root size: 1393
===============================================================
CALL===========================================================
#now call addr: 55e8629debe3
#call parent addr: 55e8629dfe1a
#root size: 1394
===============================================================
CALL===========================================================
#now call addr: 55e8629e9b18
#call parent addr: 55e8629debe3
#root size: 1395
===============================================================
RET========================================================
#ret target: 55e8629e9b18
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629e9af4
#call parent addr: 55e8629debe3
#root size: 1395
===============================================================
CALL===========================================================
#now call addr: 55e8629e98c8
#call parent addr: 55e8629e9af4
#root size: 1396
===============================================================
CALL===========================================================
#now call addr: 7f5e978b52cf
#call parent addr: 55e8629e98c8
#root size: 1397
===============================================================
RET========================================================
#ret target: 7f5e978b52cf
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
CALL===========================================================
#now call addr: 55e8629dfbc8
#call parent addr: 55e8629e98c8
#root size: 1397
===============================================================
RET========================================================
#ret target: 55e8629dfbc8
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dfb52
#call parent addr: 55e8629e98c8
#root size: 1397
===============================================================
RET========================================================
#ret target: 55e8629dfb52
#function name: readdir64
#func_id: 1040
===========================================================
CALL===========================================================
#now call addr: 55e8629dfe1a
#call parent addr: 55e8629e98c8
#root size: 1397
===============================================================
CALL===========================================================
#now call addr: 55e8629debe3
#call parent addr: 55e8629dfe1a
#root size: 1398
===============================================================
CALL===========================================================
#now call addr: 55e8629e9b18
#call parent addr: 55e8629debe3
#root size: 1399
===============================================================
RET========================================================
#ret target: 55e8629e9b18
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629e9af4
#call parent addr: 55e8629debe3
#root size: 1399
===============================================================
CALL===========================================================
#now call addr: 55e8629e98c8
#call parent addr: 55e8629e9af4
#root size: 1400
===============================================================
CALL===========================================================
#now call addr: 7f5e978b52cf
#call parent addr: 55e8629e98c8
#root size: 1401
===============================================================
RET========================================================
#ret target: 7f5e978b52cf
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
CALL===========================================================
#now call addr: 55e8629dfbc8
#call parent addr: 55e8629e98c8
#root size: 1401
===============================================================
RET========================================================
#ret target: 55e8629dfbc8
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dfb52
#call parent addr: 55e8629e98c8
#root size: 1401
===============================================================
RET========================================================
#ret target: 55e8629dfb52
#function name: readdir64
#func_id: 1040
===========================================================
CALL===========================================================
#now call addr: 55e8629dfe1a
#call parent addr: 55e8629e98c8
#root size: 1401
===============================================================
CALL===========================================================
#now call addr: 55e8629debe3
#call parent addr: 55e8629dfe1a
#root size: 1402
===============================================================
CALL===========================================================
#now call addr: 55e8629e9b18
#call parent addr: 55e8629debe3
#root size: 1403
===============================================================
RET========================================================
#ret target: 55e8629e9b18
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629e9af4
#call parent addr: 55e8629debe3
#root size: 1403
===============================================================
CALL===========================================================
#now call addr: 55e8629e98c8
#call parent addr: 55e8629e9af4
#root size: 1404
===============================================================
CALL===========================================================
#now call addr: 7f5e978b52cf
#call parent addr: 55e8629e98c8
#root size: 1405
===============================================================
RET========================================================
#ret target: 7f5e978b52cf
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
CALL===========================================================
#now call addr: 55e8629dfbc8
#call parent addr: 55e8629e98c8
#root size: 1405
===============================================================
RET========================================================
#ret target: 55e8629dfbc8
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dfb52
#call parent addr: 55e8629e98c8
#root size: 1405
===============================================================
RET========================================================
#ret target: 55e8629dfb52
#function name: readdir64
#func_id: 1040
===========================================================
CALL===========================================================
#now call addr: 55e8629dfe1a
#call parent addr: 55e8629e98c8
#root size: 1405
===============================================================
CALL===========================================================
#now call addr: 55e8629debe3
#call parent addr: 55e8629dfe1a
#root size: 1406
===============================================================
CALL===========================================================
#now call addr: 55e8629e9b18
#call parent addr: 55e8629debe3
#root size: 1407
===============================================================
RET========================================================
#ret target: 55e8629e9b18
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629e9af4
#call parent addr: 55e8629debe3
#root size: 1407
===============================================================
CALL===========================================================
#now call addr: 55e8629e98c8
#call parent addr: 55e8629e9af4
#root size: 1408
===============================================================
CALL===========================================================
#now call addr: 7f5e978b52cf
#call parent addr: 55e8629e98c8
#root size: 1409
===============================================================
RET========================================================
#ret target: 7f5e978b52cf
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
CALL===========================================================
#now call addr: 55e8629dfbc8
#call parent addr: 55e8629e98c8
#root size: 1409
===============================================================
RET========================================================
#ret target: 55e8629dfbc8
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dfb52
#call parent addr: 55e8629e98c8
#root size: 1409
===============================================================
RET========================================================
#ret target: 55e8629dfb52
#function name: readdir64
#func_id: 1040
===========================================================
CALL===========================================================
#now call addr: 55e8629dfe1a
#call parent addr: 55e8629e98c8
#root size: 1409
===============================================================
CALL===========================================================
#now call addr: 55e8629debe3
#call parent addr: 55e8629dfe1a
#root size: 1410
===============================================================
CALL===========================================================
#now call addr: 55e8629e9b18
#call parent addr: 55e8629debe3
#root size: 1411
===============================================================
RET========================================================
#ret target: 55e8629e9b18
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629e9af4
#call parent addr: 55e8629debe3
#root size: 1411
===============================================================
CALL===========================================================
#now call addr: 55e8629e98c8
#call parent addr: 55e8629e9af4
#root size: 1412
===============================================================
CALL===========================================================
#now call addr: 7f5e978b52cf
#call parent addr: 55e8629e98c8
#root size: 1413
===============================================================
RET========================================================
#ret target: 7f5e978b52cf
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
CALL===========================================================
#now call addr: 55e8629dfbc8
#call parent addr: 55e8629e98c8
#root size: 1413
===============================================================
RET========================================================
#ret target: 55e8629dfbc8
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dfb52
#call parent addr: 55e8629e98c8
#root size: 1413
===============================================================
RET========================================================
#ret target: 55e8629dfb52
#function name: readdir64
#func_id: 1040
===========================================================
CALL===========================================================
#now call addr: 55e8629dfbc8
#call parent addr: 55e8629e98c8
#root size: 1413
===============================================================
RET========================================================
#ret target: 55e8629dfbc8
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dfb52
#call parent addr: 55e8629e98c8
#root size: 1413
===============================================================
RET========================================================
#ret target: 55e8629dfb52
#function name: readdir64
#func_id: 1040
===========================================================
CALL===========================================================
#now call addr: 55e8629dfe1a
#call parent addr: 55e8629e98c8
#root size: 1413
===============================================================
CALL===========================================================
#now call addr: 55e8629debe3
#call parent addr: 55e8629dfe1a
#root size: 1414
===============================================================
CALL===========================================================
#now call addr: 55e8629e9b18
#call parent addr: 55e8629debe3
#root size: 1415
===============================================================
RET========================================================
#ret target: 55e8629e9b18
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629e9af4
#call parent addr: 55e8629debe3
#root size: 1415
===============================================================
CALL===========================================================
#now call addr: 55e8629e98c8
#call parent addr: 55e8629e9af4
#root size: 1416
===============================================================
CALL===========================================================
#now call addr: 7f5e978b52cf
#call parent addr: 55e8629e98c8
#root size: 1417
===============================================================
RET========================================================
#ret target: 7f5e978b52cf
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
CALL===========================================================
#now call addr: 55e8629dfbc8
#call parent addr: 55e8629e98c8
#root size: 1417
===============================================================
RET========================================================
#ret target: 55e8629dfbc8
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dfb52
#call parent addr: 55e8629e98c8
#root size: 1417
===============================================================
RET========================================================
#ret target: 55e8629dfb52
#function name: readdir64
#func_id: 1040
===========================================================
CALL===========================================================
#now call addr: 55e8629dfe1a
#call parent addr: 55e8629e98c8
#root size: 1417
===============================================================
CALL===========================================================
#now call addr: 55e8629debe3
#call parent addr: 55e8629dfe1a
#root size: 1418
===============================================================
CALL===========================================================
#now call addr: 55e8629e9b18
#call parent addr: 55e8629debe3
#root size: 1419
===============================================================
RET========================================================
#ret target: 55e8629e9b18
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629e9af4
#call parent addr: 55e8629debe3
#root size: 1419
===============================================================
CALL===========================================================
#now call addr: 55e8629e98c8
#call parent addr: 55e8629e9af4
#root size: 1420
===============================================================
CALL===========================================================
#now call addr: 7f5e978b52cf
#call parent addr: 55e8629e98c8
#root size: 1421
===============================================================
RET========================================================
#ret target: 7f5e978b52cf
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
CALL===========================================================
#now call addr: 55e8629dfbc8
#call parent addr: 55e8629e98c8
#root size: 1421
===============================================================
RET========================================================
#ret target: 55e8629dfbc8
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dfb52
#call parent addr: 55e8629e98c8
#root size: 1421
===============================================================
RET========================================================
#ret target: 55e8629dfb52
#function name: readdir64
#func_id: 1040
===========================================================
CALL===========================================================
#now call addr: 55e8629dfe1a
#call parent addr: 55e8629e98c8
#root size: 1421
===============================================================
CALL===========================================================
#now call addr: 55e8629debe3
#call parent addr: 55e8629dfe1a
#root size: 1422
===============================================================
CALL===========================================================
#now call addr: 55e8629e9b18
#call parent addr: 55e8629debe3
#root size: 1423
===============================================================
RET========================================================
#ret target: 55e8629e9b18
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629e9af4
#call parent addr: 55e8629debe3
#root size: 1423
===============================================================
CALL===========================================================
#now call addr: 55e8629e98c8
#call parent addr: 55e8629e9af4
#root size: 1424
===============================================================
CALL===========================================================
#now call addr: 7f5e978b52cf
#call parent addr: 55e8629e98c8
#root size: 1425
===============================================================
RET========================================================
#ret target: 7f5e978b52cf
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
CALL===========================================================
#now call addr: 55e8629dfbc8
#call parent addr: 55e8629e98c8
#root size: 1425
===============================================================
RET========================================================
#ret target: 55e8629dfbc8
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dfb52
#call parent addr: 55e8629e98c8
#root size: 1425
===============================================================
RET========================================================
#ret target: 55e8629dfb52
#function name: readdir64
#func_id: 1040
===========================================================
CALL===========================================================
#now call addr: 55e8629dfbc8
#call parent addr: 55e8629e98c8
#root size: 1425
===============================================================
RET========================================================
#ret target: 55e8629dfbc8
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dfb52
#call parent addr: 55e8629e98c8
#root size: 1425
===============================================================
RET========================================================
#ret target: 55e8629dfb52
#function name: readdir64
#func_id: 1040
===========================================================
CALL===========================================================
#now call addr: 55e8629dfe1a
#call parent addr: 55e8629e98c8
#root size: 1425
===============================================================
CALL===========================================================
#now call addr: 55e8629debe3
#call parent addr: 55e8629dfe1a
#root size: 1426
===============================================================
CALL===========================================================
#now call addr: 55e8629e9b18
#call parent addr: 55e8629debe3
#root size: 1427
===============================================================
RET========================================================
#ret target: 55e8629e9b18
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629e9af4
#call parent addr: 55e8629debe3
#root size: 1427
===============================================================
CALL===========================================================
#now call addr: 55e8629e98c8
#call parent addr: 55e8629e9af4
#root size: 1428
===============================================================
CALL===========================================================
#now call addr: 7f5e978b52cf
#call parent addr: 55e8629e98c8
#root size: 1429
===============================================================
RET========================================================
#ret target: 7f5e978b52cf
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
CALL===========================================================
#now call addr: 55e8629dfbc8
#call parent addr: 55e8629e98c8
#root size: 1429
===============================================================
RET========================================================
#ret target: 55e8629dfbc8
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dfb52
#call parent addr: 55e8629e98c8
#root size: 1429
===============================================================
RET========================================================
#ret target: 55e8629dfb52
#function name: readdir64
#func_id: 1040
===========================================================
CALL===========================================================
#now call addr: 55e8629dfe1a
#call parent addr: 55e8629e98c8
#root size: 1429
===============================================================
CALL===========================================================
#now call addr: 55e8629debe3
#call parent addr: 55e8629dfe1a
#root size: 1430
===============================================================
CALL===========================================================
#now call addr: 55e8629e9b18
#call parent addr: 55e8629debe3
#root size: 1431
===============================================================
RET========================================================
#ret target: 55e8629e9b18
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629e9af4
#call parent addr: 55e8629debe3
#root size: 1431
===============================================================
CALL===========================================================
#now call addr: 55e8629e98c8
#call parent addr: 55e8629e9af4
#root size: 1432
===============================================================
CALL===========================================================
#now call addr: 7f5e978b52cf
#call parent addr: 55e8629e98c8
#root size: 1433
===============================================================
RET========================================================
#ret target: 7f5e978b52cf
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
CALL===========================================================
#now call addr: 55e8629dfbc8
#call parent addr: 55e8629e98c8
#root size: 1433
===============================================================
RET========================================================
#ret target: 55e8629dfbc8
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dfb52
#call parent addr: 55e8629e98c8
#root size: 1433
===============================================================
RET========================================================
#ret target: 55e8629dfb52
#function name: readdir64
#func_id: 1040
===========================================================
CALL===========================================================
#now call addr: 55e8629dfe1a
#call parent addr: 55e8629e98c8
#root size: 1433
===============================================================
CALL===========================================================
#now call addr: 55e8629debe3
#call parent addr: 55e8629dfe1a
#root size: 1434
===============================================================
CALL===========================================================
#now call addr: 55e8629e9b18
#call parent addr: 55e8629debe3
#root size: 1435
===============================================================
RET========================================================
#ret target: 55e8629e9b18
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629e9af4
#call parent addr: 55e8629debe3
#root size: 1435
===============================================================
CALL===========================================================
#now call addr: 55e8629e98c8
#call parent addr: 55e8629e9af4
#root size: 1436
===============================================================
CALL===========================================================
#now call addr: 7f5e978b52cf
#call parent addr: 55e8629e98c8
#root size: 1437
===============================================================
RET========================================================
#ret target: 7f5e978b52cf
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
CALL===========================================================
#now call addr: 55e8629dfbc8
#call parent addr: 55e8629e98c8
#root size: 1437
===============================================================
RET========================================================
#ret target: 55e8629dfbc8
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dfb52
#call parent addr: 55e8629e98c8
#root size: 1437
===============================================================
RET========================================================
#ret target: 55e8629dfb52
#function name: readdir64
#func_id: 1040
===========================================================
CALL===========================================================
#now call addr: 55e8629dfe1a
#call parent addr: 55e8629e98c8
#root size: 1437
===============================================================
CALL===========================================================
#now call addr: 55e8629debe3
#call parent addr: 55e8629dfe1a
#root size: 1438
===============================================================
CALL===========================================================
#now call addr: 55e8629e9b18
#call parent addr: 55e8629debe3
#root size: 1439
===============================================================
RET========================================================
#ret target: 55e8629e9b18
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629e9af4
#call parent addr: 55e8629debe3
#root size: 1439
===============================================================
CALL===========================================================
#now call addr: 55e8629e98c8
#call parent addr: 55e8629e9af4
#root size: 1440
===============================================================
CALL===========================================================
#now call addr: 7f5e978b52cf
#call parent addr: 55e8629e98c8
#root size: 1441
===============================================================
RET========================================================
#ret target: 7f5e978b52cf
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
CALL===========================================================
#now call addr: 55e8629dfbc8
#call parent addr: 55e8629e98c8
#root size: 1441
===============================================================
RET========================================================
#ret target: 55e8629dfbc8
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dfb52
#call parent addr: 55e8629e98c8
#root size: 1441
===============================================================
RET========================================================
#ret target: 55e8629dfb52
#function name: readdir64
#func_id: 1040
===========================================================
CALL===========================================================
#now call addr: 55e8629dfe1a
#call parent addr: 55e8629e98c8
#root size: 1441
===============================================================
CALL===========================================================
#now call addr: 55e8629debe3
#call parent addr: 55e8629dfe1a
#root size: 1442
===============================================================
CALL===========================================================
#now call addr: 55e8629e9b18
#call parent addr: 55e8629debe3
#root size: 1443
===============================================================
RET========================================================
#ret target: 55e8629e9b18
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629e9af4
#call parent addr: 55e8629debe3
#root size: 1443
===============================================================
CALL===========================================================
#now call addr: 55e8629e98c8
#call parent addr: 55e8629e9af4
#root size: 1444
===============================================================
CALL===========================================================
#now call addr: 7f5e978b52cf
#call parent addr: 55e8629e98c8
#root size: 1445
===============================================================
RET========================================================
#ret target: 7f5e978b52cf
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
CALL===========================================================
#now call addr: 55e8629dfbc8
#call parent addr: 55e8629e98c8
#root size: 1445
===============================================================
RET========================================================
#ret target: 55e8629dfbc8
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dfb52
#call parent addr: 55e8629e98c8
#root size: 1445
===============================================================
RET========================================================
#ret target: 55e8629dfb52
#function name: readdir64
#func_id: 1040
===========================================================
CALL===========================================================
#now call addr: 55e8629dfe1a
#call parent addr: 55e8629e98c8
#root size: 1445
===============================================================
CALL===========================================================
#now call addr: 55e8629debe3
#call parent addr: 55e8629dfe1a
#root size: 1446
===============================================================
CALL===========================================================
#now call addr: 55e8629e9b18
#call parent addr: 55e8629debe3
#root size: 1447
===============================================================
RET========================================================
#ret target: 55e8629e9b18
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629e9af4
#call parent addr: 55e8629debe3
#root size: 1447
===============================================================
CALL===========================================================
#now call addr: 55e8629e98c8
#call parent addr: 55e8629e9af4
#root size: 1448
===============================================================
CALL===========================================================
#now call addr: 7f5e978b52cf
#call parent addr: 55e8629e98c8
#root size: 1449
===============================================================
RET========================================================
#ret target: 7f5e978b52cf
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
CALL===========================================================
#now call addr: 55e8629dfbc8
#call parent addr: 55e8629e98c8
#root size: 1449
===============================================================
RET========================================================
#ret target: 55e8629dfbc8
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dfb52
#call parent addr: 55e8629e98c8
#root size: 1449
===============================================================
CALL===========================================================
#now call addr: 7f5e978f94f0
#call parent addr: 55e8629dfb52
#root size: 1450
===============================================================
RET========================================================
#ret target: 7f5e978f94f0
#function name: getdents64
#func_id: 1038
===========================================================
[ jnz  [ addr ]  ]
[ mov dword ptr fs:[rbp], r13d ]
[ xor r8d, r8d ]
[ nop word ptr [rax + rax * 1], ax ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ sub dword ptr [r14  +  [ displacement ] ],  [ argument ]  ]
[ pop rbx ]
[ mov rax, r8 ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ ret  ]
[ mov edx, dword ptr [rbp] ]
[ test edx, edx ]
[ jz  [ addr ]  ]
[ xor edi, edi ]
[ mov edx,  [ argument ]  ]
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
[ mov rdi, r12 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629dfc77
#call parent addr: 55e8629dfb52
#root size: 1450
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ test rdi, rdi ]
[ jz  [ addr ]  ]
[ push rbp ]
[ mov ebp, dword ptr [rdi] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978f929c
#call parent addr: 55e8629dfc77
#root size: 1451
===============================================================
[ cmp rbx, qword ptr [rip  +  [ displacement ] ] ]
[ jnbe  [ addr ]  ]
[ lea r14, ptr [r12 + rbx * 1] ]
[ mov rax, qword ptr [r14  +  [ displacement ] ] ]
[ cmp rax,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ and rax,  [ addr ]  ]
[ cmp rax, qword ptr [rbp  +  [ displacement ] ] ]
[ jnb  [ addr ]  ]
[ test byte ptr [r12  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ and r13d,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov dword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rbp  +  [ displacement ] ] ]
[ lea r13, ptr [r12 + rbx * 1] ]
[ cmp rax, r12 ]
[ jz  [ addr ]  ]
[ test byte ptr [rbp  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [r13  +  [ displacement ] ] ]
[ test al,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [rax  +  [ displacement ] ] ]
[ and rdx,  [ addr ]  ]
[ add rax, rdx ]
[ cmp r13, rax ]
[ jb  [ addr ]  ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
[ mov rax, qword ptr [r13  +  [ displacement ] ] ]
[ test al,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov r14, rax ]
[ and r14,  [ addr ]  ]
[ cmp rax,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ cmp qword ptr [rbp  +  [ displacement ] ], r14 ]
[ jbe  [ addr ]  ]
[ mov esi, dword ptr [rip  +  [ displacement ] ] ]
[ test esi, esi ]
[ jnz  [ addr ]  ]
[ test byte ptr [r12  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [r12] ]
[ sub r12, rax ]
[ add rbx, rax ]
[ mov rdx, qword ptr [r12  +  [ displacement ] ] ]
[ and rdx,  [ addr ]  ]
[ cmp rdx, rax ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [rbp  +  [ displacement ] ], r13 ]
[ jz  [ addr ]  ]
[ test byte ptr [r13 + r14 * 1 + [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ and qword ptr [r13  +  [ displacement ] ],  [ addr ]  ]
[ mov rax, qword ptr [rbp  +  [ displacement ] ] ]
[ lea rdx, ptr [rbp  +  [ displacement ] ] ]
[ cmp qword ptr [rax  +  [ displacement ] ], rdx ]
[ jnz  [ addr ]  ]
[ movq xmm0, rax ]
[ movq xmm1, rdx ]
[ punpcklqdq xmm0, xmm1 ]
[ movups xmmword ptr [r12  +  [ displacement ] ], xmm0 ]
[ cmp rbx,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ mov qword ptr [rbp  +  [ displacement ] ], r12 ]
[ mov qword ptr [rax  +  [ displacement ] ], r12 ]
[ mov rax, rbx ]
[ or rax,  [ argument ]  ]
[ mov qword ptr [r12  +  [ displacement ] ], rax ]
[ mov qword ptr [r12 + rbx * 1], rbx ]
[ cmp rbx,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ mov eax, dword ptr [rsp  +  [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ pxor xmm0, xmm0 ]
[ movups xmmword ptr [r12  +  [ displacement ] ], xmm0 ]
[ jmp  [ addr ]  ]
[ mov qword ptr [rbp  +  [ displacement ] ], r12 ]
[ mov qword ptr [rax  +  [ displacement ] ], r12 ]
[ mov rax, rbx ]
[ or rax,  [ argument ]  ]
[ mov qword ptr [r12  +  [ displacement ] ], rax ]
[ mov qword ptr [r12 + rbx * 1], rbx ]
[ cmp rbx,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ mov eax, dword ptr [rsp  +  [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
RET========================================================
#ret target: 7f5e978f929c
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
[ mov edi, ebp ]
[ pop rbp ]
[ jmp  [ addr ]  ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629dfc84
#call parent addr: 55e8629dfc77
#root size: 1451
===============================================================
[ push rbx ]
[ mov rbx, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax, rbx ]
[ shr rax,  [ argument ]  ]
[ add rax, rbx ]
[ cmp rax, qword ptr [rip  +  [ displacement ] ] ]
[ jnbe  [ addr ]  ]
[ test rbx, rbx ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ lea rcx, ptr [rax + rbx * 8] ]
[ nop dword ptr [rax], eax ]
[ mov qword ptr [rax], rdx ]
[ add rax,  [ argument ]  ]
[ add rdx,  [ argument ]  ]
[ cmp rcx, rax ]
[ jnz  [ addr ]  ]
[ mov rdi, qword ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629db297
#call parent addr: 55e8629dfc84
#root size: 1452
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ sub rsp,  [ argument ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax, qword ptr [rax] ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ test rdi, rdi ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rdi- [ displacement ] ] ]
[ lea rsi, ptr [rdi- [ displacement ] ] ]
[ test al,  [ argument ]  ]
[ jnz  [ addr ]  ]
RET========================================================
#ret target: 55e8629db297
#function name: cfree
#func_id: 832
===========================================================
[ mov edx,  [ argument ]  ]
[ mov rax, rdx ]
[ mul rbx ]
[ seto dl ]
[ test rax, rax ]
[ mov eax,  [ argument ]  ]
[ movzx edx, dl ]
[ cmovs rdx, rax ]
[ test rdx, rdx ]
[ jnz  [ addr ]  ]
[ lea rdi, ptr [rbx + rbx * 2] ]
[ shl rdi,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629db2c6
#call parent addr: 55e8629dfc84
#root size: 1452
===============================================================
CALL===========================================================
#now call addr: 55e8629e98c8
#call parent addr: 55e8629db2c6
#root size: 1453
===============================================================
CALL===========================================================
#now call addr: 7f5e978b52cf
#call parent addr: 55e8629e98c8
#root size: 1454
===============================================================
[ mov rcx, qword ptr [rbx  +  [ displacement ] ] ]
[ cmp rcx, rax ]
[ jb  [ addr ]  ]
[ mov rdx, qword ptr [r9  +  [ displacement ] ] ]
[ cmp rdx,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ cmp rcx, rdx ]
[ jb  [ addr ]  ]
[ mov rcx, qword ptr [r9] ]
[ and rcx,  [ addr ]  ]
[ cmp rcx, rax ]
[ jnz  [ addr ]  ]
[ mov rcx, qword ptr [rsi  +  [ displacement ] ] ]
[ cmp rsi, qword ptr [rcx  +  [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [rsi  +  [ displacement ] ], r11 ]
[ jnz  [ addr ]  ]
[ test dl,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp r13,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ cmp rcx, r11 ]
[ jz  [ addr ]  ]
[ cmp rsi, qword ptr [rbx  +  [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [rsp  +  [ displacement ] ], rax ]
[ jnb  [ addr ]  ]
[ movq xmm1, rsi ]
[ movq xmm0, r13 ]
[ lea rcx, ptr [rsi + r13 * 1] ]
[ sub rax, r13 ]
[ punpcklqdq xmm1, xmm1 ]
[ punpcklqdq xmm0, xmm0 ]
[ mov qword ptr [rbx  +  [ displacement ] ], rcx ]
[ mov rbp, qword ptr [rsp  +  [ displacement ] ] ]
[ paddq xmm0, xmm1 ]
[ movups xmmword ptr [rbx  +  [ displacement ] ], xmm0 ]
[ movq xmm0, r11 ]
[ punpcklqdq xmm0, xmm0 ]
[ movups xmmword ptr [rcx  +  [ displacement ] ], xmm0 ]
[ cmp rax,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ mov qword ptr [rbx  +  [ displacement ] ], rcx ]
[ mov qword ptr [rcx  +  [ displacement ] ], r11 ]
[ cmp rax, r13 ]
[ jz  [ addr ]  ]
[ cmp rax,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ mov ecx, eax ]
[ shr ecx,  [ argument ]  ]
[ lea eax, ptr [rcx + rcx * 1- [ displacement ] ] ]
[ cdqe  ]
[ lea rax, ptr [rbx + rax * 8 + [ displacement ] ] ]
[ mov r9, qword ptr [rax] ]
[ lea r12, ptr [rax- [ displacement ] ] ]
[ mov eax, ecx ]
[ movq xmm0, r9 ]
[ movq xmm3, r12 ]
[ mov edx,  [ argument ]  ]
[ sar eax,  [ argument ]  ]
[ punpcklqdq xmm0, xmm3 ]
[ add qword ptr [rsp],  [ argument ]  ]
[ shl edx, cl ]
[ cdqe  ]
[ or dword ptr [rbx + rax * 4 + [ displacement ] ], edx ]
[ mov rax, qword ptr [rsp] ]
[ movups xmmword ptr [rsi  +  [ displacement ] ], xmm0 ]
[ mov qword ptr [r9  +  [ displacement ] ], rsi ]
[ mov qword ptr [r12  +  [ displacement ] ], rsi ]
[ test r8d, r8d ]
[ jz  [ addr ]  ]
[ mov rcx, rax ]
[ shr rcx,  [ argument ]  ]
[ add ecx,  [ argument ]  ]
[ cmp rax,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ mov rcx, rax ]
[ shr rcx,  [ argument ]  ]
[ add ecx,  [ argument ]  ]
[ cmp rax,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ mov rcx, rax ]
[ shr rcx,  [ argument ]  ]
[ add ecx,  [ argument ]  ]
[ cmp rax,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ lea edx, ptr [rcx + rcx * 1- [ displacement ] ] ]
[ movsxd rdx, edx ]
[ lea r12, ptr [rbx + rdx * 8 + [ displacement ] ] ]
[ mov rdx, qword ptr [r12] ]
[ lea r9, ptr [r12- [ displacement ] ] ]
[ cmp r9, rdx ]
[ jz  [ addr ]  ]
[ mov r12, qword ptr [r12  +  [ displacement ] ] ]
[ or rax,  [ argument ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ mov rax, qword ptr [r12  +  [ displacement ] ] ]
[ test al,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp rax, qword ptr [rsp  +  [ displacement ] ] ]
[ jbe  [ addr ]  ]
[ movq xmm0, rsi ]
[ mov r12, r9 ]
[ punpcklqdq xmm0, xmm0 ]
[ movups xmmword ptr [rsi  +  [ displacement ] ], xmm0 ]
[ jmp  [ addr ]  ]
[ mov eax, ecx ]
[ movq xmm0, r9 ]
[ movq xmm3, r12 ]
[ mov edx,  [ argument ]  ]
[ sar eax,  [ argument ]  ]
[ punpcklqdq xmm0, xmm3 ]
[ add qword ptr [rsp],  [ argument ]  ]
[ shl edx, cl ]
[ cdqe  ]
[ or dword ptr [rbx + rax * 4 + [ displacement ] ], edx ]
[ mov rax, qword ptr [rsp] ]
[ movups xmmword ptr [rsi  +  [ displacement ] ], xmm0 ]
[ mov qword ptr [r9  +  [ displacement ] ], rsi ]
[ mov qword ptr [r12  +  [ displacement ] ], rsi ]
[ test r8d, r8d ]
[ jz  [ addr ]  ]
[ cmp rbp, rax ]
[ jnb  [ addr ]  ]
[ cmp byte ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ add edi,  [ argument ]  ]
[ cmp edi,  [ argument ]  ]
[ jnle  [ addr ]  ]
[ mov rsi, qword ptr [rbx  +  [ displacement ] ] ]
[ cmp rsi, r11 ]
[ jnz  [ addr ]  ]
[ cmp r13,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ mov edi, eax ]
[ mov eax, edi ]
[ shl eax,  [ argument ]  ]
[ sub eax,  [ argument ]  ]
[ lea rdx, ptr [rbx + rax * 8 + [ displacement ] ] ]
[ mov eax,  [ argument ]  ]
[ jmp  [ addr ]  ]
[ test eax, esi ]
[ jz  [ addr ]  ]
[ mov rcx, qword ptr [rdx  +  [ displacement ] ] ]
[ cmp rdx, rcx ]
[ jnz  [ addr ]  ]
[ mov ecx, eax ]
[ add rdx,  [ argument ]  ]
[ add eax, eax ]
[ not ecx ]
[ and esi, ecx ]
[ mov ecx, edi ]
[ mov dword ptr [rbx + rcx * 4 + [ displacement ] ], esi ]
[ jmp  [ addr ]  ]
[ add rdx,  [ argument ]  ]
[ add eax, eax ]
[ jz  [ addr ]  ]
[ test eax, esi ]
[ jz  [ addr ]  ]
[ mov rcx, qword ptr [rdx  +  [ displacement ] ] ]
[ cmp rdx, rcx ]
[ jnz  [ addr ]  ]
[ mov r14, qword ptr [rcx  +  [ displacement ] ] ]
[ mov rbp, qword ptr [rsp  +  [ displacement ] ] ]
[ and r14,  [ addr ]  ]
[ cmp r14, r13 ]
[ jb  [ addr ]  ]
[ mov r12, r14 ]
[ mov rdi, rcx ]
[ mov qword ptr [rsp  +  [ displacement ] ], r11 ]
[ sub r12, r13 ]
[ mov qword ptr [rsp], rcx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978b376e
#call parent addr: 7f5e978b52cf
#root size: 1455
===============================================================
[ sub rsp,  [ argument ]  ]
[ mov rcx, qword ptr [rdi  +  [ displacement ] ] ]
[ mov rax, rcx ]
[ and rax,  [ addr ]  ]
[ cmp rax, qword ptr [rdi + rax * 1] ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rdi  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rdi  +  [ displacement ] ] ]
[ cmp rdi, qword ptr [rax  +  [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ cmp rdi, qword ptr [rdx  +  [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov qword ptr [rax  +  [ displacement ] ], rdx ]
[ mov qword ptr [rdx  +  [ displacement ] ], rax ]
[ cmp rcx,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ mov rdx, qword ptr [rdi  +  [ displacement ] ] ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ cmp rdi, qword ptr [rdx  +  [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov rcx, qword ptr [rdi  +  [ displacement ] ] ]
[ cmp rdi, qword ptr [rcx  +  [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov qword ptr [rdx  +  [ displacement ] ], rcx ]
[ mov rax, qword ptr [rdi  +  [ displacement ] ] ]
[ mov qword ptr [rax  +  [ displacement ] ], rdx ]
[ add rsp,  [ argument ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5e978b376e
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
[ cmp r12,  [ argument ]  ]
[ mov rcx, qword ptr [rsp] ]
[ mov r11, qword ptr [rsp  +  [ displacement ] ] ]
[ jbe  [ addr ]  ]
[ mov rax, qword ptr [rbx  +  [ displacement ] ] ]
[ lea rdx, ptr [rcx + r13 * 1] ]
[ cmp qword ptr [rax  +  [ displacement ] ], r11 ]
[ jnz  [ addr ]  ]
[ movq xmm0, rax ]
[ movq xmm5, r11 ]
[ punpcklqdq xmm0, xmm5 ]
[ movups xmmword ptr [rdx  +  [ displacement ] ], xmm0 ]
[ mov qword ptr [rbx  +  [ displacement ] ], rdx ]
[ mov qword ptr [rax  +  [ displacement ] ], rdx ]
[ cmp r13,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ mov qword ptr [rbx  +  [ displacement ] ], rdx ]
[ cmp r12,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ pxor xmm0, xmm0 ]
[ movups xmmword ptr [rdx  +  [ displacement ] ], xmm0 ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ cmp rbx, rax ]
[ setnz al ]
[ movzx eax, al ]
[ shl rax,  [ argument ]  ]
[ or rax, r13 ]
[ or rax,  [ argument ]  ]
[ mov qword ptr [rcx  +  [ displacement ] ], rax ]
[ mov rax, r12 ]
[ or rax,  [ argument ]  ]
[ mov qword ptr [rdx  +  [ displacement ] ], rax ]
[ mov qword ptr [rcx + r14 * 1], r12 ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ lea r8, ptr [rcx  +  [ displacement ] ] ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ mov rbx, qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ lea rax, ptr [rbx + rbx * 2] ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ jmp  [ addr ]  ]
[ test rbx, rbx ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rip  +  [ displacement ] ] ]
[ lea rcx, ptr [rax + rbx * 8] ]
[ nop dword ptr [rax], eax ]
[ mov qword ptr [rax], rdx ]
[ add rax,  [ argument ]  ]
[ add rdx,  [ argument ]  ]
[ cmp rcx, rax ]
[ jnz  [ addr ]  ]
[ cmp dword ptr [rip  +  [ displacement ] ],  [ addr ]  ]
[ jz  [ addr ]  ]
[ mov qword ptr [rax], rdx ]
[ add rax,  [ argument ]  ]
[ add rdx,  [ argument ]  ]
[ cmp rcx, rax ]
[ jnz  [ addr ]  ]
[ cmp dword ptr [rip  +  [ displacement ] ],  [ addr ]  ]
[ jz  [ addr ]  ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629db1df
#call parent addr: 7f5e978b52cf
#root size: 1455
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ xor esi, esi ]
[ jmp  [ addr ]  ]
RET========================================================
#ret target: 55e8629db1df
#function name: __sigsetjmp
#func_id: 396
===========================================================
[ nop edx, edi ]
[ mov esi, dword ptr [rip  +  [ displacement ] ] ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ cmp esi,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov r8, qword ptr [rip  +  [ displacement ] ] ]
[ mov rdi, qword ptr [rip  +  [ displacement ] ] ]
[ test r8, r8 ]
[ jz  [ addr ]  ]
[ mov rdi, qword ptr [rip  +  [ displacement ] ] ]
[ mov r8, qword ptr [rip  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ cmp esi,  [ argument ]  ]
[ mov edx,  [ argument ]  ]
[ cdqe  ]
[ cmovz edx, dword ptr [rip  +  [ displacement ] ] ]
[ movzx ecx, byte ptr [rip  +  [ displacement ] ] ]
[ add edx, esi ]
[ mov rsi, r8 ]
[ lea rdx, ptr [rax + rdx * 2] ]
[ movzx eax, byte ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rax + rdx * 2] ]
[ lea rdx, ptr [rcx + rax * 2] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rax + rdx * 8] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629db273
#call parent addr: 7f5e978b52cf
#root size: 1455
===============================================================
[ nop edx, edi ]
[ mov rcx, rdx ]
[ lea rdx, ptr [rdi + rsi * 8] ]
[ jmp  [ addr ]  ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ push rbp ]
[ mov rbp, rcx ]
[ push rbx ]
[ mov rbx, rdi ]
[ sub rsp,  [ argument ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ], rsi ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdx ]
[ cmp rsi,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ jz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ mov r15, qword ptr [rsp  +  [ displacement ] ] ]
[ mov r14, qword ptr [rsp  +  [ displacement ] ] ]
[ mov rcx, r15 ]
[ mov rsi, r15 ]
[ mov rdx, r14 ]
[ shr rcx,  [ argument ]  ]
[ lea rdi, ptr [rdi + rcx * 8] ]
[ sub rsi, rcx ]
[ mov qword ptr [rsp  +  [ displacement ] ], rcx ]
[ mov rcx, rbp ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdi ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629e5792
#call parent addr: 55e8629db273
#root size: 1456
===============================================================
CALL===========================================================
#now call addr: 55e8629e5792
#call parent addr: 55e8629e5792
#root size: 1457
===============================================================
CALL===========================================================
#now call addr: 55e8629e5792
#call parent addr: 55e8629e5792
#root size: 1458
===============================================================
CALL===========================================================
#now call addr: 55e8629e5792
#call parent addr: 55e8629e5792
#root size: 1459
===============================================================
[ mov r13, qword ptr [rdi  +  [ displacement ] ] ]
[ mov r12, qword ptr [rdi] ]
[ mov rsi, r13 ]
[ mov rdi, r12 ]
[ call rcx ]
CALL===========================================================
#now call addr: 55e8629e5745
#call parent addr: 55e8629e5792
#root size: 1460
===============================================================
[ nop edx, edi ]
[ mov rsi, qword ptr [rsi] ]
[ mov rdi, qword ptr [rdi] ]
[ jmp  [ addr ]  ]
[ push r12 ]
[ mov r12, rsi ]
[ push rbp ]
[ mov rbp, rdi ]
[ sub rsp,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e5745
#root size: 1461
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
[ mov rsi, r12 ]
[ mov rdi, rbp ]
[ mov dword ptr [rax],  [ argument ]  ]
[ add rsp,  [ argument ]  ]
[ pop rbp ]
[ pop r12 ]
[ jmp  [ addr ]  ]
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov rdx, qword ptr fs:[rax] ]
[ jmp  [ addr ]  ]
[ nop edx, edi ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov rax, qword ptr [rdx  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdi ]
[ mov edi, dword ptr [rax  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rsi ]
[ test rdi, rdi ]
[ mov dword ptr [rsp  +  [ displacement ] ], edi ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdi ]
[ mov rdi, qword ptr [rsp  +  [ displacement ] ] ]
[ jz  [ addr ]  ]
[ movzx ecx, byte ptr [rdi] ]
[ mov rdi, qword ptr [rsp  +  [ displacement ] ] ]
[ movzx edx, byte ptr [rdi] ]
[ test cl, cl ]
[ jz  [ addr ]  ]
[ test dl, dl ]
[ jz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ jmp  [ addr ]  ]
[ test eax, eax ]
[ jle  [ addr ]  ]
[ mov qword ptr [rbx], r13 ]
[ mov qword ptr [rbx  +  [ displacement ] ], r12 ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ cmp r15,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov r15, qword ptr [rbx] ]
[ mov qword ptr [r14], r15 ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [rsp],  [ argument ]  ]
[ xor r14d, r14d ]
[ mov r13, qword ptr [rsp  +  [ displacement ] ] ]
[ mov r12, qword ptr [rax] ]
[ nop ]
[ mov rsi, r12 ]
[ mov rdi, r15 ]
[ add r14,  [ argument ]  ]
[ call rbp ]
[ mov r15, qword ptr [rsp  +  [ displacement ] ] ]
[ mov r14, qword ptr [rsp  +  [ displacement ] ] ]
[ mov rcx, rbp ]
[ mov rsi, qword ptr [rsp  +  [ displacement ] ] ]
[ shr r15,  [ argument ]  ]
[ mov rdx, r14 ]
[ lea r12, ptr [rbx + r15 * 8] ]
[ sub rsi, r15 ]
[ mov qword ptr [rsp  +  [ displacement ] ], r15 ]
[ mov r13, r15 ]
[ mov rdi, r12 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629e584b
#call parent addr: 55e8629e5745
#root size: 1461
===============================================================
RET========================================================
#ret target: 55e8629e584b
#function name: NULL
#func_id: 5
===========================================================
[ mov rdx, r14 ]
[ mov rsi, r15 ]
[ mov rcx, rbp ]
[ mov rdi, rbx ]
[ mov qword ptr [rsp  +  [ displacement ] ], r14 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629e5861
#call parent addr: 55e8629e5745
#root size: 1461
===============================================================
RET========================================================
#ret target: 55e8629e5861
#function name: NULL
#func_id: 5
===========================================================
[ mov qword ptr [rsp],  [ argument ]  ]
[ mov r14, qword ptr [r12] ]
[ mov r12, r13 ]
[ mov r15, qword ptr [rbx] ]
[ mov r13, qword ptr [rsp  +  [ displacement ] ] ]
[ nop dword ptr [rax], eax ]
[ mov rsi, r14 ]
[ mov rdi, r15 ]
[ add r13,  [ argument ]  ]
[ call rbp ]
CALL===========================================================
#now call addr: 55e8629e588a
#call parent addr: 55e8629e5745
#root size: 1461
===============================================================
[ nop edx, edi ]
[ mov rsi, qword ptr [rsi] ]
[ mov rdi, qword ptr [rdi] ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e588a
#root size: 1462
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
[ test eax, eax ]
[ jle  [ addr ]  ]
[ mov qword ptr [r13- [ displacement ] ], r14 ]
[ add r12,  [ argument ]  ]
[ cmp qword ptr [rsp  +  [ displacement ] ], r12 ]
[ jz  [ addr ]  ]
[ mov r14, qword ptr [rbx + r12 * 8] ]
[ mov rdi, r15 ]
[ add r13,  [ argument ]  ]
[ mov rsi, r14 ]
[ call rbp ]
[ mov rax, qword ptr [rsp] ]
[ mov rdx, qword ptr [rsp  +  [ displacement ] ] ]
[ mov rdi, r13 ]
[ sub rdx, rax ]
[ lea rsi, ptr [rbx + rax * 8] ]
[ shl rdx,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629e592d
#call parent addr: 55e8629e588a
#root size: 1462
===============================================================
RET========================================================
#ret target: 55e8629e592d
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ mov r15, qword ptr [rax] ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [rsp],  [ argument ]  ]
[ xor r14d, r14d ]
[ mov r13, qword ptr [rsp  +  [ displacement ] ] ]
[ mov r12, qword ptr [rax] ]
[ nop ]
[ mov rsi, r12 ]
[ mov rdi, r15 ]
[ add r14,  [ argument ]  ]
[ call rbp ]
CALL===========================================================
#now call addr: 55e8629e57ca
#call parent addr: 55e8629e588a
#root size: 1462
===============================================================
[ nop edx, edi ]
[ mov rsi, qword ptr [rsi] ]
[ mov rdi, qword ptr [rdi] ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57ca
#root size: 1463
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
[ test eax, eax ]
[ jle  [ addr ]  ]
[ mov qword ptr [rbx + r14 * 8- [ displacement ] ], r12 ]
[ add r13,  [ argument ]  ]
[ cmp qword ptr [rsp  +  [ displacement ] ], r13 ]
[ jz  [ addr ]  ]
[ mov r12, qword ptr [rbx + r13 * 8] ]
[ mov rdi, r15 ]
[ add r14,  [ argument ]  ]
[ mov rsi, r12 ]
[ call rbp ]
CALL===========================================================
#now call addr: 55e8629e57f2
#call parent addr: 55e8629e57ca
#root size: 1463
===============================================================
[ nop edx, edi ]
[ mov rsi, qword ptr [rsi] ]
[ mov rdi, qword ptr [rdi] ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57f2
#root size: 1464
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
[ test eax, eax ]
[ jnle  [ addr ]  ]
[ add qword ptr [rsp],  [ argument ]  ]
[ mov rax, qword ptr [rsp] ]
[ mov qword ptr [rbx + r14 * 8- [ displacement ] ], r15 ]
[ cmp qword ptr [rsp  +  [ displacement ] ], rax ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [rsp  +  [ displacement ] ] ]
[ mov r15, qword ptr [rdx + rax * 8] ]
[ jmp  [ addr ]  ]
[ mov rsi, r12 ]
[ mov rdi, r15 ]
[ add r14,  [ argument ]  ]
[ call rbp ]
CALL===========================================================
#now call addr: 55e8629e57ca
#call parent addr: 55e8629e57f2
#root size: 1464
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57ca
#root size: 1465
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
[ mov rax, qword ptr [rsp] ]
[ mov r13, qword ptr [rsp  +  [ displacement ] ] ]
[ lea rdi, ptr [rbx + r14 * 8] ]
[ mov rcx, qword ptr [rsp  +  [ displacement ] ] ]
[ add rsp,  [ argument ]  ]
[ sub r13, rax ]
[ pop rbx ]
[ pop rbp ]
[ lea rdx, ptr [r13 * 8] ]
[ pop r12 ]
[ lea rsi, ptr [rcx + rax * 8] ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ jmp  [ addr ]  ]
[ cmp r15,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov r15, qword ptr [rbx] ]
[ mov qword ptr [r14], r15 ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [rsp],  [ argument ]  ]
[ xor r14d, r14d ]
[ mov r13, qword ptr [rsp  +  [ displacement ] ] ]
[ mov r12, qword ptr [rax] ]
[ nop ]
[ mov rsi, r12 ]
[ mov rdi, r15 ]
[ add r14,  [ argument ]  ]
[ call rbp ]
CALL===========================================================
#now call addr: 55e8629e584b
#call parent addr: 55e8629e57ca
#root size: 1465
===============================================================
CALL===========================================================
#now call addr: 55e8629e5745
#call parent addr: 55e8629e584b
#root size: 1466
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e5745
#root size: 1467
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
CALL===========================================================
#now call addr: 55e8629e5861
#call parent addr: 55e8629e5745
#root size: 1467
===============================================================
CALL===========================================================
#now call addr: 55e8629e5745
#call parent addr: 55e8629e5861
#root size: 1468
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e5745
#root size: 1469
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
[ test eax, eax ]
[ jle  [ addr ]  ]
[ mov qword ptr [rbx], r13 ]
[ mov qword ptr [rbx  +  [ displacement ] ], r12 ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ mov qword ptr [rsp],  [ argument ]  ]
[ mov r14, qword ptr [r12] ]
[ mov r12, r13 ]
[ mov r15, qword ptr [rbx] ]
[ mov r13, qword ptr [rsp  +  [ displacement ] ] ]
[ nop dword ptr [rax], eax ]
[ mov rsi, r14 ]
[ mov rdi, r15 ]
[ add r13,  [ argument ]  ]
[ call rbp ]
CALL===========================================================
#now call addr: 55e8629e588a
#call parent addr: 55e8629e5745
#root size: 1469
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e588a
#root size: 1470
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e58ad
#call parent addr: 55e8629e588a
#root size: 1470
===============================================================
[ nop edx, edi ]
[ mov rsi, qword ptr [rsi] ]
[ mov rdi, qword ptr [rdi] ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e58ad
#root size: 1471
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
[ test eax, eax ]
[ jnle  [ addr ]  ]
[ add qword ptr [rsp],  [ argument ]  ]
[ mov rax, qword ptr [rsp] ]
[ mov qword ptr [r13- [ displacement ] ], r15 ]
[ cmp qword ptr [rsp  +  [ displacement ] ], rax ]
[ jz  [ addr ]  ]
[ mov r15, qword ptr [rbx + rax * 8] ]
[ jmp  [ addr ]  ]
[ mov rsi, r14 ]
[ mov rdi, r15 ]
[ add r13,  [ argument ]  ]
[ call rbp ]
CALL===========================================================
#now call addr: 55e8629e588a
#call parent addr: 55e8629e58ad
#root size: 1471
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e588a
#root size: 1472
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
[ test eax, eax ]
[ jle  [ addr ]  ]
[ mov qword ptr [r13- [ displacement ] ], r14 ]
[ add r12,  [ argument ]  ]
[ cmp qword ptr [rsp  +  [ displacement ] ], r12 ]
[ jz  [ addr ]  ]
[ mov r14, qword ptr [rbx + r12 * 8] ]
[ mov rdi, r15 ]
[ add r13,  [ argument ]  ]
[ mov rsi, r14 ]
[ call rbp ]
[ add qword ptr [rsp],  [ argument ]  ]
[ mov rax, qword ptr [rsp] ]
[ mov qword ptr [r13- [ displacement ] ], r15 ]
[ cmp qword ptr [rsp  +  [ displacement ] ], rax ]
[ jz  [ addr ]  ]
[ mov r15, qword ptr [rbx + rax * 8] ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [rsp], r12 ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ mov rax, qword ptr [rsp] ]
[ mov rdx, qword ptr [rsp  +  [ displacement ] ] ]
[ mov rdi, r13 ]
[ sub rdx, rax ]
[ lea rsi, ptr [rbx + rax * 8] ]
[ shl rdx,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629e592d
#call parent addr: 55e8629e588a
#root size: 1472
===============================================================
RET========================================================
#ret target: 55e8629e592d
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629e57ca
#call parent addr: 55e8629e588a
#root size: 1472
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57ca
#root size: 1473
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
[ add qword ptr [rsp],  [ argument ]  ]
[ mov rax, qword ptr [rsp] ]
[ mov qword ptr [rbx + r14 * 8- [ displacement ] ], r15 ]
[ cmp qword ptr [rsp  +  [ displacement ] ], rax ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [rsp  +  [ displacement ] ] ]
[ mov r15, qword ptr [rdx + rax * 8] ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 55e8629e57ca
#call parent addr: 55e8629e57ca
#root size: 1473
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57ca
#root size: 1474
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57ca
#call parent addr: 55e8629e57ca
#root size: 1474
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57ca
#root size: 1475
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
[ test eax, eax ]
[ jle  [ addr ]  ]
[ mov qword ptr [rbx + r14 * 8- [ displacement ] ], r12 ]
[ add r13,  [ argument ]  ]
[ cmp qword ptr [rsp  +  [ displacement ] ], r13 ]
[ jz  [ addr ]  ]
[ mov r12, qword ptr [rbx + r13 * 8] ]
[ mov rdi, r15 ]
[ add r14,  [ argument ]  ]
[ mov rsi, r12 ]
[ call rbp ]
CALL===========================================================
#now call addr: 55e8629e57f2
#call parent addr: 55e8629e57ca
#root size: 1475
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57f2
#root size: 1476
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
[ test eax, eax ]
[ jnle  [ addr ]  ]
[ add qword ptr [rsp],  [ argument ]  ]
[ mov rax, qword ptr [rsp] ]
[ mov qword ptr [rbx + r14 * 8- [ displacement ] ], r15 ]
[ cmp qword ptr [rsp  +  [ displacement ] ], rax ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [rsp  +  [ displacement ] ] ]
[ mov r15, qword ptr [rdx + rax * 8] ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 55e8629e57ca
#call parent addr: 55e8629e57f2
#root size: 1476
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57ca
#root size: 1477
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57f2
#call parent addr: 55e8629e57ca
#root size: 1477
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57f2
#root size: 1478
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
[ cmp r15,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov r15, qword ptr [rbx] ]
[ mov qword ptr [r14], r15 ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [rsp],  [ argument ]  ]
[ xor r14d, r14d ]
[ mov r13, qword ptr [rsp  +  [ displacement ] ] ]
[ mov r12, qword ptr [rax] ]
[ nop ]
[ mov rsi, r12 ]
[ mov rdi, r15 ]
[ add r14,  [ argument ]  ]
[ call rbp ]
CALL===========================================================
#now call addr: 55e8629e584b
#call parent addr: 55e8629e57f2
#root size: 1478
===============================================================
CALL===========================================================
#now call addr: 55e8629e5792
#call parent addr: 55e8629e584b
#root size: 1479
===============================================================
CALL===========================================================
#now call addr: 55e8629e5745
#call parent addr: 55e8629e5792
#root size: 1480
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e5745
#root size: 1481
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e584b
#call parent addr: 55e8629e5745
#root size: 1481
===============================================================
RET========================================================
#ret target: 55e8629e584b
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629e5861
#call parent addr: 55e8629e5745
#root size: 1481
===============================================================
RET========================================================
#ret target: 55e8629e5861
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629e588a
#call parent addr: 55e8629e5745
#root size: 1481
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e588a
#root size: 1482
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e592d
#call parent addr: 55e8629e588a
#root size: 1482
===============================================================
RET========================================================
#ret target: 55e8629e592d
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629e57ca
#call parent addr: 55e8629e588a
#root size: 1482
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57ca
#root size: 1483
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57f2
#call parent addr: 55e8629e57ca
#root size: 1483
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57f2
#root size: 1484
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57ca
#call parent addr: 55e8629e57f2
#root size: 1484
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57ca
#root size: 1485
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
[ mov rdx, r14 ]
[ mov rsi, r15 ]
[ mov rcx, rbp ]
[ mov rdi, rbx ]
[ mov qword ptr [rsp  +  [ displacement ] ], r14 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629e5861
#call parent addr: 55e8629e57ca
#root size: 1485
===============================================================
CALL===========================================================
#now call addr: 55e8629e5792
#call parent addr: 55e8629e5861
#root size: 1486
===============================================================
CALL===========================================================
#now call addr: 55e8629e5745
#call parent addr: 55e8629e5792
#root size: 1487
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e5745
#root size: 1488
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57ca
#call parent addr: 55e8629e5745
#root size: 1488
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57ca
#root size: 1489
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57f2
#call parent addr: 55e8629e57ca
#root size: 1489
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57f2
#root size: 1490
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
[ mov qword ptr [rbx + r14 * 8- [ displacement ] ], r12 ]
[ add r13,  [ argument ]  ]
[ cmp qword ptr [rsp  +  [ displacement ] ], r13 ]
[ jz  [ addr ]  ]
[ mov r12, qword ptr [rbx + r13 * 8] ]
[ mov rdi, r15 ]
[ add r14,  [ argument ]  ]
[ mov rsi, r12 ]
[ call rbp ]
[ mov qword ptr [rsp],  [ argument ]  ]
[ mov r14, qword ptr [r12] ]
[ mov r12, r13 ]
[ mov r15, qword ptr [rbx] ]
[ mov r13, qword ptr [rsp  +  [ displacement ] ] ]
[ nop dword ptr [rax], eax ]
[ mov rsi, r14 ]
[ mov rdi, r15 ]
[ add r13,  [ argument ]  ]
[ call rbp ]
CALL===========================================================
#now call addr: 55e8629e588a
#call parent addr: 55e8629e57f2
#root size: 1490
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e588a
#root size: 1491
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e58ad
#call parent addr: 55e8629e588a
#root size: 1491
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e58ad
#root size: 1492
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
[ mov qword ptr [r13- [ displacement ] ], r14 ]
[ add r12,  [ argument ]  ]
[ cmp qword ptr [rsp  +  [ displacement ] ], r12 ]
[ jz  [ addr ]  ]
[ mov r14, qword ptr [rbx + r12 * 8] ]
[ mov rdi, r15 ]
[ add r13,  [ argument ]  ]
[ mov rsi, r14 ]
[ call rbp ]
CALL===========================================================
#now call addr: 55e8629e58ad
#call parent addr: 55e8629e58ad
#root size: 1492
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e58ad
#root size: 1493
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e58ad
#call parent addr: 55e8629e58ad
#root size: 1493
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e58ad
#root size: 1494
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e588a
#call parent addr: 55e8629e58ad
#root size: 1494
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e588a
#root size: 1495
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e592d
#call parent addr: 55e8629e588a
#root size: 1495
===============================================================
RET========================================================
#ret target: 55e8629e592d
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ mov r15, qword ptr [rax] ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 55e8629e57ca
#call parent addr: 55e8629e588a
#root size: 1495
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57ca
#root size: 1496
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57ca
#call parent addr: 55e8629e57ca
#root size: 1496
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57ca
#root size: 1497
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57ca
#call parent addr: 55e8629e57ca
#root size: 1497
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57ca
#root size: 1498
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57ca
#call parent addr: 55e8629e57ca
#root size: 1498
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57ca
#root size: 1499
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57f2
#call parent addr: 55e8629e57ca
#root size: 1499
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57f2
#root size: 1500
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57f2
#call parent addr: 55e8629e57f2
#root size: 1500
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57f2
#root size: 1501
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57ca
#call parent addr: 55e8629e57f2
#root size: 1501
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57ca
#root size: 1502
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57f2
#call parent addr: 55e8629e57ca
#root size: 1502
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57f2
#root size: 1503
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57ca
#call parent addr: 55e8629e57f2
#root size: 1503
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57ca
#root size: 1504
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57f2
#call parent addr: 55e8629e57ca
#root size: 1504
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57f2
#root size: 1505
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57f2
#call parent addr: 55e8629e57f2
#root size: 1505
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57f2
#root size: 1506
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57f2
#call parent addr: 55e8629e57f2
#root size: 1506
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57f2
#root size: 1507
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57ca
#call parent addr: 55e8629e57f2
#root size: 1507
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57ca
#root size: 1508
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e584b
#call parent addr: 55e8629e57ca
#root size: 1508
===============================================================
CALL===========================================================
#now call addr: 55e8629e5792
#call parent addr: 55e8629e584b
#root size: 1509
===============================================================
CALL===========================================================
#now call addr: 55e8629e5792
#call parent addr: 55e8629e5792
#root size: 1510
===============================================================
CALL===========================================================
#now call addr: 55e8629e5745
#call parent addr: 55e8629e5792
#root size: 1511
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e5745
#root size: 1512
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e584b
#call parent addr: 55e8629e5745
#root size: 1512
===============================================================
RET========================================================
#ret target: 55e8629e584b
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629e5861
#call parent addr: 55e8629e5745
#root size: 1512
===============================================================
RET========================================================
#ret target: 55e8629e5861
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629e588a
#call parent addr: 55e8629e5745
#root size: 1512
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e588a
#root size: 1513
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e592d
#call parent addr: 55e8629e588a
#root size: 1513
===============================================================
RET========================================================
#ret target: 55e8629e592d
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629e57ca
#call parent addr: 55e8629e588a
#root size: 1513
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57ca
#root size: 1514
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57f2
#call parent addr: 55e8629e57ca
#root size: 1514
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57f2
#root size: 1515
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
[ cmp r15,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov r15, qword ptr [rbx] ]
[ mov qword ptr [r14], r15 ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [rsp],  [ argument ]  ]
[ xor r14d, r14d ]
[ mov r13, qword ptr [rsp  +  [ displacement ] ] ]
[ mov r12, qword ptr [rax] ]
[ nop ]
[ mov rsi, r12 ]
[ mov rdi, r15 ]
[ add r14,  [ argument ]  ]
[ call rbp ]
CALL===========================================================
#now call addr: 55e8629e584b
#call parent addr: 55e8629e57f2
#root size: 1515
===============================================================
CALL===========================================================
#now call addr: 55e8629e5745
#call parent addr: 55e8629e584b
#root size: 1516
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e5745
#root size: 1517
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e5861
#call parent addr: 55e8629e5745
#root size: 1517
===============================================================
CALL===========================================================
#now call addr: 55e8629e5745
#call parent addr: 55e8629e5861
#root size: 1518
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e5745
#root size: 1519
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e588a
#call parent addr: 55e8629e5745
#root size: 1519
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e588a
#root size: 1520
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e58ad
#call parent addr: 55e8629e588a
#root size: 1520
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e58ad
#root size: 1521
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e588a
#call parent addr: 55e8629e58ad
#root size: 1521
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e588a
#root size: 1522
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e592d
#call parent addr: 55e8629e588a
#root size: 1522
===============================================================
RET========================================================
#ret target: 55e8629e592d
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629e57ca
#call parent addr: 55e8629e588a
#root size: 1522
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57ca
#root size: 1523
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57ca
#call parent addr: 55e8629e57ca
#root size: 1523
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57ca
#root size: 1524
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57f2
#call parent addr: 55e8629e57ca
#root size: 1524
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57f2
#root size: 1525
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57f2
#call parent addr: 55e8629e57f2
#root size: 1525
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57f2
#root size: 1526
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57ca
#call parent addr: 55e8629e57f2
#root size: 1526
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57ca
#root size: 1527
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57ca
#call parent addr: 55e8629e57ca
#root size: 1527
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57ca
#root size: 1528
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57f2
#call parent addr: 55e8629e57ca
#root size: 1528
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57f2
#root size: 1529
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e5861
#call parent addr: 55e8629e57f2
#root size: 1529
===============================================================
CALL===========================================================
#now call addr: 55e8629e5792
#call parent addr: 55e8629e5861
#root size: 1530
===============================================================
CALL===========================================================
#now call addr: 55e8629e5792
#call parent addr: 55e8629e5792
#root size: 1531
===============================================================
CALL===========================================================
#now call addr: 55e8629e5745
#call parent addr: 55e8629e5792
#root size: 1532
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e5745
#root size: 1533
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e584b
#call parent addr: 55e8629e5745
#root size: 1533
===============================================================
RET========================================================
#ret target: 55e8629e584b
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629e5861
#call parent addr: 55e8629e5745
#root size: 1533
===============================================================
RET========================================================
#ret target: 55e8629e5861
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629e588a
#call parent addr: 55e8629e5745
#root size: 1533
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e588a
#root size: 1534
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e592d
#call parent addr: 55e8629e588a
#root size: 1534
===============================================================
RET========================================================
#ret target: 55e8629e592d
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629e57ca
#call parent addr: 55e8629e588a
#root size: 1534
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57ca
#root size: 1535
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57ca
#call parent addr: 55e8629e57ca
#root size: 1535
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57ca
#root size: 1536
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57f2
#call parent addr: 55e8629e57ca
#root size: 1536
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57f2
#root size: 1537
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e584b
#call parent addr: 55e8629e57f2
#root size: 1537
===============================================================
CALL===========================================================
#now call addr: 55e8629e5745
#call parent addr: 55e8629e584b
#root size: 1538
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e5745
#root size: 1539
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e5861
#call parent addr: 55e8629e5745
#root size: 1539
===============================================================
RET========================================================
#ret target: 55e8629e5861
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629e588a
#call parent addr: 55e8629e5745
#root size: 1539
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e588a
#root size: 1540
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e58ad
#call parent addr: 55e8629e588a
#root size: 1540
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e58ad
#root size: 1541
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e592d
#call parent addr: 55e8629e58ad
#root size: 1541
===============================================================
RET========================================================
#ret target: 55e8629e592d
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629e57ca
#call parent addr: 55e8629e58ad
#root size: 1541
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57ca
#root size: 1542
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57ca
#call parent addr: 55e8629e57ca
#root size: 1542
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57ca
#root size: 1543
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57f2
#call parent addr: 55e8629e57ca
#root size: 1543
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57f2
#root size: 1544
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57f2
#call parent addr: 55e8629e57f2
#root size: 1544
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57f2
#root size: 1545
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57ca
#call parent addr: 55e8629e57f2
#root size: 1545
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57ca
#root size: 1546
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57f2
#call parent addr: 55e8629e57ca
#root size: 1546
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57f2
#root size: 1547
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e588a
#call parent addr: 55e8629e57f2
#root size: 1547
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e588a
#root size: 1548
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e58ad
#call parent addr: 55e8629e588a
#root size: 1548
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e58ad
#root size: 1549
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e58ad
#call parent addr: 55e8629e58ad
#root size: 1549
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e58ad
#root size: 1550
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e58ad
#call parent addr: 55e8629e58ad
#root size: 1550
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e58ad
#root size: 1551
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e588a
#call parent addr: 55e8629e58ad
#root size: 1551
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e588a
#root size: 1552
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e588a
#call parent addr: 55e8629e588a
#root size: 1552
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e588a
#root size: 1553
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e58ad
#call parent addr: 55e8629e588a
#root size: 1553
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e58ad
#root size: 1554
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e58ad
#call parent addr: 55e8629e58ad
#root size: 1554
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e58ad
#root size: 1555
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e588a
#call parent addr: 55e8629e58ad
#root size: 1555
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e588a
#root size: 1556
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e588a
#call parent addr: 55e8629e588a
#root size: 1556
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e588a
#root size: 1557
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e58ad
#call parent addr: 55e8629e588a
#root size: 1557
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e58ad
#root size: 1558
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e588a
#call parent addr: 55e8629e58ad
#root size: 1558
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e588a
#root size: 1559
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e58ad
#call parent addr: 55e8629e588a
#root size: 1559
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e58ad
#root size: 1560
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e588a
#call parent addr: 55e8629e58ad
#root size: 1560
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e588a
#root size: 1561
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e592d
#call parent addr: 55e8629e588a
#root size: 1561
===============================================================
RET========================================================
#ret target: 55e8629e592d
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629e57ca
#call parent addr: 55e8629e588a
#root size: 1561
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57ca
#root size: 1562
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57f2
#call parent addr: 55e8629e57ca
#root size: 1562
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57f2
#root size: 1563
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57f2
#call parent addr: 55e8629e57f2
#root size: 1563
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57f2
#root size: 1564
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57ca
#call parent addr: 55e8629e57f2
#root size: 1564
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57ca
#root size: 1565
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57f2
#call parent addr: 55e8629e57ca
#root size: 1565
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57f2
#root size: 1566
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57ca
#call parent addr: 55e8629e57f2
#root size: 1566
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57ca
#root size: 1567
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57ca
#call parent addr: 55e8629e57ca
#root size: 1567
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57ca
#root size: 1568
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57ca
#call parent addr: 55e8629e57ca
#root size: 1568
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57ca
#root size: 1569
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57ca
#call parent addr: 55e8629e57ca
#root size: 1569
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57ca
#root size: 1570
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57f2
#call parent addr: 55e8629e57ca
#root size: 1570
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57f2
#root size: 1571
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57f2
#call parent addr: 55e8629e57f2
#root size: 1571
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57f2
#root size: 1572
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57f2
#call parent addr: 55e8629e57f2
#root size: 1572
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57f2
#root size: 1573
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57ca
#call parent addr: 55e8629e57f2
#root size: 1573
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57ca
#root size: 1574
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57ca
#call parent addr: 55e8629e57ca
#root size: 1574
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57ca
#root size: 1575
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57f2
#call parent addr: 55e8629e57ca
#root size: 1575
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57f2
#root size: 1576
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57ca
#call parent addr: 55e8629e57f2
#root size: 1576
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57ca
#root size: 1577
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57f2
#call parent addr: 55e8629e57ca
#root size: 1577
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57f2
#root size: 1578
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57ca
#call parent addr: 55e8629e57f2
#root size: 1578
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57ca
#root size: 1579
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57f2
#call parent addr: 55e8629e57ca
#root size: 1579
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57f2
#root size: 1580
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57ca
#call parent addr: 55e8629e57f2
#root size: 1580
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57ca
#root size: 1581
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57ca
#call parent addr: 55e8629e57ca
#root size: 1581
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57ca
#root size: 1582
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57ca
#call parent addr: 55e8629e57ca
#root size: 1582
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57ca
#root size: 1583
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57f2
#call parent addr: 55e8629e57ca
#root size: 1583
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57f2
#root size: 1584
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57f2
#call parent addr: 55e8629e57f2
#root size: 1584
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57f2
#root size: 1585
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57f2
#call parent addr: 55e8629e57f2
#root size: 1585
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57f2
#root size: 1586
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57f2
#call parent addr: 55e8629e57f2
#root size: 1586
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57f2
#root size: 1587
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57ca
#call parent addr: 55e8629e57f2
#root size: 1587
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57ca
#root size: 1588
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57ca
#call parent addr: 55e8629e57ca
#root size: 1588
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57ca
#root size: 1589
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e57f2
#call parent addr: 55e8629e57ca
#root size: 1589
===============================================================
CALL===========================================================
#now call addr: 55e8629db31d
#call parent addr: 55e8629e57f2
#root size: 1590
===============================================================
RET========================================================
#ret target: 55e8629db31d
#function name: __errno_location
#func_id: 302
===========================================================
[ pop rbx ]
[ ret  ]
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629dfd91
#call parent addr: 55e8629e57f2
#root size: 1590
===============================================================
[ cmp dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ push r15 ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ movsxd rax, dword ptr [rdx + rax * 4] ]
[ add rax, rdx ]
[ jmp rax ]
[ xor ebx, ebx ]
[ cmp qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ xor esi, esi ]
[ mov rdi, qword ptr [rax + rbx * 8] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629de35d
#call parent addr: 55e8629dfd91
#root size: 1591
===============================================================
[ push r12 ]
[ mov r12, rsi ]
[ push rbx ]
[ mov rbx, rdi ]
[ sub rsp,  [ argument ]  ]
[ mov rax, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ xor eax, eax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629dced3
#call parent addr: 55e8629de35d
#root size: 1592
===============================================================
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ ret  ]
RET========================================================
#ret target: 55e8629dced3
#function name: NULL
#func_id: 5
===========================================================
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp byte ptr [rbx  +  [ displacement ] ],  [ argument ]  ]
[ lea rcx, ptr [rip  +  [ displacement ] ] ]
[ jz  [ addr ]  ]
[ mov rdi, qword ptr [rbx  +  [ displacement ] ] ]
[ test rdi, rdi ]
[ jnz  [ addr ]  ]
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp byte ptr [rbx  +  [ displacement ] ],  [ argument ]  ]
[ lea rcx, ptr [rip  +  [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ xor edx, edx ]
[ cmp dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ xor edx, edx ]
[ cmp dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov rcx, qword ptr [rbx  +  [ displacement ] ] ]
[ jz  [ addr ]  ]
[ mov edx, dword ptr [rip  +  [ displacement ] ] ]
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ mov edi,  [ argument ]  ]
[ xor eax, eax ]
[ call  [ addr.func ]  ]
[ mov rcx, r12 ]
[ xor edx, edx ]
[ xor esi, esi ]
[ mov rdi, rbx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629dcfa1
#call parent addr: 55e8629de35d
#root size: 1592
===============================================================
[ push r15 ]
[ mov r15, rdx ]
[ push r14 ]
[ mov r14d, esi ]
[ push r13 ]
[ push r12 ]
[ mov r12, rdi ]
[ push rbp ]
[ mov rbp, rcx ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ movzx eax, byte ptr [rip  +  [ displacement ] ] ]
[ test sil, sil ]
[ jz  [ addr ]  ]
[ mov r13, qword ptr [rdi  +  [ displacement ] ] ]
[ test al, al ]
[ jnz  [ addr ]  ]
[ sub rsp,  [ argument ]  ]
[ mov rsi, qword ptr [rip  +  [ displacement ] ] ]
[ xor ecx, ecx ]
[ mov r9, r15 ]
[ mov edx, dword ptr [r12  +  [ displacement ] ] ]
[ push qword ptr [r12  +  [ displacement ] ] ]
[ xor r14d,  [ argument ]  ]
[ mov rdi, r13 ]
[ movzx r8d, r14b ]
[ call  [ addr.func ]  ]
[ mov r13, qword ptr [rdi] ]
[ test al, al ]
[ jz  [ addr ]  ]
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ movzx edx, byte ptr [rdi  +  [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov esi, dword ptr [r12  +  [ displacement ] ] ]
[ movzx ecx, byte ptr [r12  +  [ displacement ] ] ]
[ test cl, cl ]
[ jnz  [ addr ]  ]
[ sub rsp,  [ argument ]  ]
[ mov rsi, qword ptr [rip  +  [ displacement ] ] ]
[ xor ecx, ecx ]
[ mov r9, r15 ]
[ mov edx, dword ptr [r12  +  [ displacement ] ] ]
[ push qword ptr [r12  +  [ displacement ] ] ]
[ xor r14d,  [ argument ]  ]
[ mov rdi, r13 ]
[ movzx r8d, r14b ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629dcaba
#call parent addr: 55e8629dcfa1
#root size: 1593
===============================================================
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ or qword ptr [rsp],  [ argument ]  ]
[ sub rsp,  [ argument ]  ]
[ or qword ptr [rsp],  [ argument ]  ]
[ sub rsp,  [ argument ]  ]
[ mov r14, qword ptr [rsp  +  [ displacement ] ] ]
[ mov r13, rdi ]
[ mov r12, rcx ]
[ mov r15d, r8d ]
[ mov ecx, edx ]
[ mov rax, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ xor eax, eax ]
[ xor r8d, r8d ]
[ lea rax, ptr [rsp  +  [ displacement ] ] ]
[ mov rdx, rsi ]
[ mov rbx, r9 ]
[ lea rdi, ptr [rsp  +  [ displacement ] ] ]
[ lea r9, ptr [rsp  +  [ displacement ] ] ]
[ mov rsi, r13 ]
[ mov qword ptr [rsp], rax ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629dc6c0
#call parent addr: 55e8629dcaba
#root size: 1594
===============================================================
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ mov r13, rdx ]
[ push r12 ]
[ mov r12d, ecx ]
[ push rbp ]
[ mov rbp, rsi ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdi ]
[ mov qword ptr [rsp  +  [ displacement ] ], r8 ]
[ mov qword ptr [rsp  +  [ displacement ] ], r9 ]
[ mov rax, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ xor eax, eax ]
[ mov rax, qword ptr [rdi] ]
[ mov rdi, rdx ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629dc221
#call parent addr: 55e8629dc6c0
#root size: 1595
===============================================================
RET========================================================
#ret target: 55e8629dc221
#function name: NULL
#func_id: 5
===========================================================
[ cmp eax,  [ argument ]  ]
[ setbe al ]
[ and al, byte ptr [rip  +  [ displacement ] ] ]
[ mov byte ptr [rsp  +  [ displacement ] ], al ]
[ jnz  [ addr ]  ]
[ xor r15d, r15d ]
[ test r12d, r12d ]
[ jz  [ addr ]  ]
[ mov rdi, qword ptr [rsp  +  [ displacement ] ] ]
[ mov r8, r13 ]
[ mov rdx, rbp ]
[ mov esi,  [ argument ]  ]
[ mov rcx,  [ addr ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629dc25b
#call parent addr: 55e8629dc6c0
#root size: 1595
===============================================================
[ nop edx, edi ]
[ push r15 ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ push r14 ]
[ mov r14, rdx ]
[ push r13 ]
[ mov r13, rsi ]
[ push r12 ]
[ mov r12, rdi ]
[ push rbp ]
[ push rbx ]
[ mov rbx, r8 ]
[ sub rsp,  [ argument ]  ]
[ test r8, r8 ]
[ cmovz rbx, rax ]
[ mov qword ptr [rsp  +  [ displacement ] ], rcx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629e89b1
#call parent addr: 55e8629dc25b
#root size: 1596
===============================================================
RET========================================================
#ret target: 55e8629e89b1
#function name: __errno_location
#func_id: 302
===========================================================
[ sub rsp,  [ argument ]  ]
[ mov rdx, r14 ]
[ mov rsi, r13 ]
[ mov r15d, dword ptr [rax] ]
[ mov rbp, rax ]
[ lea rax, ptr [rbx  +  [ displacement ] ] ]
[ mov r9d, dword ptr [rbx  +  [ displacement ] ] ]
[ push qword ptr [rbx  +  [ displacement ] ] ]
[ mov r8d, dword ptr [rbx] ]
[ mov rdi, r12 ]
[ push qword ptr [rbx  +  [ displacement ] ] ]
[ push rax ]
[ mov rcx, qword ptr [rsp  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629e89e0
#call parent addr: 55e8629dc25b
#root size: 1596
===============================================================
[ push r15 ]
[ mov r15, rdi ]
[ push r14 ]
[ mov r14, rsi ]
[ push r13 ]
[ push r12 ]
[ push rbp ]
[ push rbx ]
[ mov ebx, r9d ]
[ sub rsp,  [ argument ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rdx ]
[ mov qword ptr [rsp  +  [ displacement ] ], rcx ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ mov dword ptr [rsp  +  [ displacement ] ], r8d ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ mov dword ptr [rsp  +  [ displacement ] ], r9d ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ mov rax, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ xor eax, eax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629e74d8
#call parent addr: 55e8629e89e0
#root size: 1597
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax, qword ptr fs:[rax] ]
[ mov rax, qword ptr [rax] ]
[ mov eax, dword ptr [rax  +  [ displacement ] ] ]
[ ret  ]
RET========================================================
#ret target: 55e8629e74d8
#function name: __ctype_get_mb_cur_max
#func_id: 314
===========================================================
[ mov r10d, dword ptr [rsp  +  [ displacement ] ] ]
[ and ebx,  [ argument ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ setnz byte ptr [rsp  +  [ displacement ] ] ]
[ cmp r10d,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ lea rcx, ptr [rip  +  [ displacement ] ] ]
[ mov edx, r10d ]
[ mov r11, qword ptr [rsp  +  [ displacement ] ] ]
[ movsxd rax, dword ptr [rcx + rdx * 4] ]
[ add rax, rcx ]
[ jmp rax ]
[ mov byte ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ xor r13d, r13d ]
[ xor r12d, r12d ]
[ mov byte ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov byte ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov byte ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ jmp  [ addr ]  ]
[ xor ebx, ebx ]
[ mov r8d, r13d ]
[ nop dword ptr [rax], eax ]
[ cmp r11, rbx ]
[ setnz r13b ]
[ cmp r11,  [ addr ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ cmp byte ptr [rax + rbx * 1],  [ argument ]  ]
[ setnz r13b ]
[ test r13b, r13b ]
[ jz  [ addr ]  ]
[ cmp r10d,  [ argument ]  ]
[ mov rdi, qword ptr [rsp  +  [ displacement ] ] ]
[ setnz al ]
[ and al, byte ptr [rsp  +  [ displacement ] ] ]
[ lea rbp, ptr [rdi + rbx * 1] ]
[ mov r9d, eax ]
[ jz  [ addr ]  ]
[ movzx ebp, byte ptr [rbp] ]
[ cmp bpl,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ lea rcx, ptr [rip  +  [ displacement ] ] ]
[ movzx edx, bpl ]
[ movsxd rax, dword ptr [rcx + rdx * 4] ]
[ add rax, rcx ]
[ jmp rax ]
[ cmp r10d,  [ argument ]  ]
[ setz al ]
[ jmp  [ addr ]  ]
[ movzx edx, byte ptr [rsp  +  [ displacement ] ] ]
[ xor edx,  [ argument ]  ]
[ or al, dl ]
[ jz  [ addr ]  ]
[ xor eax, eax ]
[ cmp byte ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ nop dword ptr [rax], eax ]
[ test r9b, r9b ]
[ jnz  [ addr ]  ]
[ xor eax,  [ argument ]  ]
[ add rbx,  [ argument ]  ]
[ and eax, r8d ]
[ jmp  [ addr ]  ]
[ test al, al ]
[ jz  [ addr ]  ]
[ cmp r14, r12 ]
[ jbe  [ addr ]  ]
[ mov byte ptr [r15 + r12 * 1],  [ argument ]  ]
[ lea rax, ptr [r12  +  [ displacement ] ] ]
[ cmp r14, rax ]
[ jbe  [ addr ]  ]
[ cmp r12, r14 ]
[ jnb  [ addr ]  ]
[ mov byte ptr [r15 + r12 * 1], bpl ]
[ movzx edi, byte ptr [rsp  +  [ displacement ] ] ]
[ add r12,  [ argument ]  ]
[ mov eax,  [ argument ]  ]
[ test r13b, r13b ]
[ cmovz edi, eax ]
[ mov byte ptr [rsp  +  [ displacement ] ], dil ]
[ jmp  [ addr ]  ]
[ cmp r11, rbx ]
[ setnz r13b ]
[ cmp r11,  [ addr ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ cmp byte ptr [rax + rbx * 1],  [ argument ]  ]
[ setnz r13b ]
[ test r13b, r13b ]
[ jz  [ addr ]  ]
[ cmp r10d,  [ argument ]  ]
[ mov rdi, qword ptr [rsp  +  [ displacement ] ] ]
[ setnz al ]
[ and al, byte ptr [rsp  +  [ displacement ] ] ]
[ lea rbp, ptr [rdi + rbx * 1] ]
[ mov r9d, eax ]
[ jz  [ addr ]  ]
[ cmp r10d,  [ argument ]  ]
[ mov r13d, r8d ]
[ setz dl ]
[ test r12, r12 ]
[ jnz  [ addr ]  ]
[ test byte ptr [rsp  +  [ displacement ] ], dl ]
[ jnz  [ addr ]  ]
[ movzx eax, byte ptr [rsp  +  [ displacement ] ] ]
[ xor eax,  [ argument ]  ]
[ and dl, al ]
[ jz  [ addr ]  ]
[ movzx eax, byte ptr [rsp  +  [ displacement ] ] ]
[ xor eax,  [ argument ]  ]
[ and dl, al ]
[ jz  [ addr ]  ]
[ cmp byte ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp byte ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov edx, eax ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ test dl, dl ]
[ jz  [ addr ]  ]
[ movzx edx, byte ptr [rax] ]
[ test dl, dl ]
[ jz  [ addr ]  ]
[ cmp r14, r12 ]
[ jbe  [ addr ]  ]
[ mov byte ptr [r15 + r12 * 1],  [ argument ]  ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ mov rax, r12 ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ mov dword ptr [rbp], r15d ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ mov r12, rax ]
[ cmp rax,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ mov byte ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ movzx eax, byte ptr [rax] ]
[ cmp byte ptr [rbp], al ]
[ jnz  [ addr ]  ]
[ mov rdi, rbp ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629dc284
#call parent addr: 55e8629e89e0
#root size: 1597
===============================================================
RET========================================================
#ret target: 55e8629dc284
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ cmp r12, rax ]
[ setnz byte ptr [rsp  +  [ displacement ] ] ]
[ test r15d, r15d ]
[ jz  [ addr ]  ]
[ mov rbx, r12 ]
[ jmp  [ addr ]  ]
[ cmp qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ call  [ addr.func ]  ]
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ mov byte ptr [rax],  [ argument ]  ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rsp  +  [ displacement ] ] ]
[ mov qword ptr [rax], rsi ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ mov rax, r12 ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ cmp byte ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ mov rbp, rax ]
[ jz  [ addr ]  ]
[ test r15b, r15b ]
[ jnz  [ addr ]  ]
[ test r12, r12 ]
[ jz  [ addr ]  ]
[ test r12, r12 ]
[ jz  [ addr ]  ]
[ mov edi,  [ argument ]  ]
[ call  [ addr.func ]  ]
[ test r14, r14 ]
[ jz  [ addr ]  ]
[ movzx r12d, byte ptr [rip  +  [ displacement ] ] ]
[ test r12b, r12b ]
[ jnz  [ addr ]  ]
[ mov r10, rbp ]
[ xor r9d, r9d ]
[ mov rdi, qword ptr [rip  +  [ displacement ] ] ]
[ xor esi, esi ]
[ mov qword ptr [rsp  +  [ displacement ] ], r10 ]
[ mov qword ptr [rsp  +  [ displacement ] ], r9 ]
[ call  [ addr.func ]  ]
[ mov r10, rbp ]
[ xor r9d, r9d ]
[ xor r12d, r12d ]
[ test rbx, rbx ]
[ jnz  [ addr ]  ]
[ mov rdi, qword ptr [rsp  +  [ displacement ] ] ]
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ mov rdx, r10 ]
[ mov esi,  [ argument ]  ]
[ add rdi, r9 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629dc989
#call parent addr: 55e8629e89e0
#root size: 1597
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ push r14 ]
[ push r12 ]
[ mov r12, rsi ]
[ push rbp ]
[ imul r12, rdx ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ test r12, r12 ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [rcx  +  [ displacement ] ] ]
[ mov rbx, rsi ]
[ mov rbp, rdx ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov dword ptr [rcx  +  [ displacement ] ],  [ addr ]  ]
[ mov r14, qword ptr [rcx  +  [ displacement ] ] ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ sub rax, rdx ]
[ mov rsi, r14 ]
[ sub rsi, rdx ]
[ cmp rax, rsi ]
[ jbe  [ addr ]  ]
[ mov rsi, rdi ]
[ mov rdx, r12 ]
[ mov rdi, rcx ]
[ call qword ptr [r14  +  [ displacement ] ] ]
CALL===========================================================
#now call addr: 7f5e978a9390
#call parent addr: 55e8629dc989
#root size: 1598
===============================================================
[ nop edx, edi ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ xor r13d, r13d ]
[ push r12 ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ mov rbp, rdi ]
[ mov r12, rsi ]
[ mov rdi, qword ptr [rdi  +  [ displacement ] ] ]
[ mov rbx, rdx ]
[ mov eax, dword ptr [rbp] ]
[ and eax,  [ argument ]  ]
[ cmp eax,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rbp  +  [ displacement ] ] ]
[ cmp rax, rdi ]
[ jbe  [ addr ]  ]
[ mov r14, rbx ]
[ mov rax, qword ptr [rbp  +  [ displacement ] ] ]
[ lea r15, ptr [rip  +  [ displacement ] ] ]
[ lea r13, ptr [rip  +  [ displacement ] ] ]
[ sub r13, r15 ]
[ mov rdx, rax ]
[ sub rdx, r15 ]
[ cmp r13, rdx ]
[ jbe  [ addr ]  ]
[ mov esi,  [ addr ]  ]
[ mov rdi, rbp ]
[ call qword ptr [rax  +  [ displacement ] ] ]
CALL===========================================================
#now call addr: 7f5e978aa832
#call parent addr: 7f5e978a9390
#root size: 1599
===============================================================
[ nop edx, edi ]
[ push r12 ]
[ push rbp ]
[ mov rbp, rdi ]
[ push rbx ]
[ mov eax, dword ptr [rdi] ]
[ test al,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov ebx, esi ]
[ mov rsi, qword ptr [rdi  +  [ displacement ] ] ]
[ test ah,  [ argument ]  ]
[ jz  [ addr ]  ]
[ test rsi, rsi ]
[ jz  [ addr ]  ]
[ test rsi, rsi ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [rdi  +  [ displacement ] ] ]
[ test ah,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rcx, qword ptr [rbp  +  [ displacement ] ] ]
[ cmp rcx, rdx ]
[ jz  [ addr ]  ]
[ mov rdi, rbp ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978ac0ab
#call parent addr: 7f5e978aa832
#root size: 1600
===============================================================
CALL===========================================================
#now call addr: 7f5e978ad04d
#call parent addr: 7f5e978ac0ab
#root size: 1601
===============================================================
CALL===========================================================
#now call addr: 7f5e9789ce4d
#call parent addr: 7f5e978ad04d
#root size: 1602
===============================================================
RET========================================================
#ret target: 7f5e9789ce4d
#function name: __fxstat64
#func_id: 1196
===========================================================
CALL===========================================================
#now call addr: 7f5e9789ce7f
#call parent addr: 7f5e978ad04d
#root size: 1602
===============================================================
CALL===========================================================
#now call addr: 7f5e978b52cf
#call parent addr: 7f5e9789ce7f
#root size: 1603
===============================================================
[ mov eax, dword ptr [rsp  +  [ displacement ] ] ]
[ lea eax, ptr [rax + rax * 1- [ displacement ] ] ]
[ lea rax, ptr [rbx + rax * 8 + [ displacement ] ] ]
[ mov rdx, qword ptr [rax] ]
[ lea rcx, ptr [rax- [ displacement ] ] ]
[ cmp rdx, rcx ]
[ jz  [ addr ]  ]
[ cmp qword ptr [rdx  +  [ displacement ] ], r13 ]
[ jnb  [ addr ]  ]
[ mov eax, dword ptr [rsp  +  [ displacement ] ] ]
[ lea ecx, ptr [rax  +  [ displacement ] ] ]
[ add eax, eax ]
[ mov edi, ecx ]
[ lea rdx, ptr [rbx + rax * 8 + [ displacement ] ] ]
[ shr edi,  [ argument ]  ]
[ mov eax, edi ]
[ mov esi, dword ptr [rbx + rax * 4 + [ displacement ] ] ]
[ mov eax,  [ argument ]  ]
[ shl eax, cl ]
[ nop word ptr [rax + rax * 1], ax ]
[ cmp eax, esi ]
[ jnbe  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5e978b376e
#call parent addr: 7f5e978b52cf
#root size: 1604
===============================================================
RET========================================================
#ret target: 7f5e978b376e
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
[ cmp r12,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ pxor xmm0, xmm0 ]
[ movups xmmword ptr [rdx  +  [ displacement ] ], xmm0 ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ cmp rbx, rax ]
[ setnz al ]
[ movzx eax, al ]
[ shl rax,  [ argument ]  ]
[ or rax, r13 ]
[ or rax,  [ argument ]  ]
[ mov qword ptr [rcx  +  [ displacement ] ], rax ]
[ mov rax, r12 ]
[ or rax,  [ argument ]  ]
[ mov qword ptr [rdx  +  [ displacement ] ], rax ]
[ mov qword ptr [rcx + r14 * 1], r12 ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ lea r8, ptr [rcx  +  [ displacement ] ] ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5e9789ce98
#call parent addr: 7f5e978b52cf
#root size: 1604
===============================================================
RET========================================================
#ret target: 7f5e9789ce98
#function name: _IO_setb
#func_id: 758
===========================================================
[ mov rdx, qword ptr [rbp  +  [ displacement ] ] ]
[ mov eax, dword ptr [rbp] ]
[ mov qword ptr [rbp  +  [ displacement ] ], rdx ]
[ mov qword ptr [rbp  +  [ displacement ] ], rdx ]
[ mov qword ptr [rbp  +  [ displacement ] ], rdx ]
[ jmp  [ addr ]  ]
[ test ah,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rcx, qword ptr [rbp  +  [ displacement ] ] ]
[ cmp rcx, rdx ]
[ jz  [ addr ]  ]
[ movq xmm0, qword ptr [rbp  +  [ displacement ] ] ]
[ movq xmm2, rcx ]
[ movq xmm1, rdx ]
[ mov ecx, eax ]
[ movq qword ptr [rbp  +  [ displacement ] ], xmm0 ]
[ or ch,  [ argument ]  ]
[ punpcklqdq xmm0, xmm1 ]
[ mov rsi, rdx ]
[ mov dword ptr [rbp], ecx ]
[ mov ecx, dword ptr [rbp  +  [ displacement ] ] ]
[ movups xmmword ptr [rbp  +  [ displacement ] ], xmm0 ]
[ movq xmm0, rdx ]
[ punpcklqdq xmm0, xmm2 ]
[ movups xmmword ptr [rbp  +  [ displacement ] ], xmm0 ]
[ test ecx, ecx ]
[ jnle  [ addr ]  ]
[ test eax,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov qword ptr [rbp  +  [ displacement ] ], rdx ]
[ cmp ebx,  [ addr ]  ]
[ jnz  [ addr ]  ]
[ pop rbx ]
[ mov rdi, rbp ]
[ sub rdx, rsi ]
[ pop rbp ]
[ pop r12 ]
[ jmp  [ addr ]  ]
[ cmp ebx,  [ addr ]  ]
[ jz  [ addr ]  ]
[ cmp qword ptr [rbp  +  [ displacement ] ], rdx ]
[ jz  [ addr ]  ]
[ lea rax, ptr [rdx  +  [ displacement ] ] ]
[ mov qword ptr [rbp  +  [ displacement ] ], rax ]
[ mov byte ptr [rdx], bl ]
[ mov eax, dword ptr [rbp] ]
[ test al,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ pop rbx ]
[ mov rdi, rbp ]
[ sub rdx, rsi ]
[ pop rbp ]
[ pop r12 ]
[ jmp  [ addr ]  ]
[ nop edx, edi ]
[ xor eax, eax ]
[ test rdx, rdx ]
[ jnz  [ addr ]  ]
[ ret  ]
[ cmp eax,  [ addr ]  ]
[ jz  [ addr ]  ]
[ mov rcx, qword ptr [rbp  +  [ displacement ] ] ]
[ sub rcx, qword ptr [rbp  +  [ displacement ] ] ]
[ mov r8, r14 ]
[ cmp rcx,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ mov rax, r14 ]
[ xor edx, edx ]
[ div rcx ]
[ sub r8, rdx ]
[ test r8, r8 ]
[ jnz  [ addr ]  ]
[ mov r13, rbx ]
[ test r14, r14 ]
[ jz  [ addr ]  ]
[ lea rsi, ptr [r12 + r8 * 1] ]
[ mov rdx, r14 ]
[ mov rdi, rbp ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978aa875
#call parent addr: 7f5e978b52cf
#root size: 1604
===============================================================
[ nop edx, edi ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ push r15 ]
[ mov r15, rdi ]
[ push r14 ]
[ mov r14, rdx ]
[ push r13 ]
[ mov r13, rdx ]
[ push r12 ]
[ lea r12, ptr [rip  +  [ displacement ] ] ]
[ push rbp ]
[ lea rbp, ptr [rip  +  [ displacement ] ] ]
[ push rbx ]
[ sub rbp, r12 ]
[ sub rsp,  [ argument ]  ]
[ jmp  [ addr ]  ]
[ mov rdi, qword ptr [r15  +  [ displacement ] ] ]
[ mov rbx, qword ptr [r15  +  [ displacement ] ] ]
[ cmp rdi, rbx ]
[ jnb  [ addr ]  ]
[ sub rbx, rdi ]
[ cmp rbx, r14 ]
[ cmovnbe rbx, r14 ]
[ cmp rbx,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ mov rdx, rbx ]
[ mov qword ptr [rsp], rsi ]
[ call  [ addr.func ]  ]
[ test rbx, rbx ]
[ jnz  [ addr ]  ]
[ sub r14, rbx ]
[ test r14, r14 ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ mov rdx, rax ]
[ sub rdx, r12 ]
[ cmp rbp, rdx ]
[ jbe  [ addr ]  ]
[ lea rax, ptr [rdi  +  [ displacement ] ] ]
[ sub rax, rsi ]
[ cmp rax,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ lea rax, ptr [rbx- [ displacement ] ] ]
[ cmp rax,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ movdqu xmm0, xmmword ptr [rsi] ]
[ movups xmmword ptr [rdi], xmm0 ]
[ cmp rbx,  [ argument ]  ]
[ jz  [ addr ]  ]
[ xor eax, eax ]
[ nop word ptr [rax + rax * 1], ax ]
[ movzx edx, byte ptr [rsi + rax * 1] ]
[ mov byte ptr [rdi + rax * 1], dl ]
[ add rax,  [ argument ]  ]
[ cmp rbx, rax ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ movzx edx, byte ptr [rsi + rax * 1] ]
[ mov byte ptr [rdi + rax * 1], dl ]
[ add rax,  [ argument ]  ]
[ cmp rbx, rax ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ add rdi, rbx ]
[ add rsi, rbx ]
[ mov qword ptr [r15  +  [ displacement ] ], rdi ]
[ jmp  [ addr ]  ]
[ sub r14, rbx ]
[ test r14, r14 ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ mov rdx, rax ]
[ sub rdx, r12 ]
[ cmp rbp, rdx ]
[ jbe  [ addr ]  ]
[ lea rbx, ptr [rsi  +  [ displacement ] ] ]
[ mov rdi, r15 ]
[ movzx esi, byte ptr [rsi] ]
[ call qword ptr [rax  +  [ displacement ] ] ]
[ add rsp,  [ argument ]  ]
[ mov rax, r13 ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
RET========================================================
#ret target: 7f5e978aa875
#function name: _IO_default_xsputn
#func_id: 761
===========================================================
[ sub rax, r14 ]
[ add r13, rax ]
[ jmp  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ mov rax, r13 ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ cmp r12, rax ]
[ jz  [ addr ]  ]
[ cmp rax,  [ addr ]  ]
[ jz  [ addr ]  ]
[ xor edx, edx ]
[ div rbx ]
[ mov r12, rax ]
[ add rsp,  [ argument ]  ]
[ mov rax, r12 ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r14 ]
[ ret  ]
[ mov r12, rbp ]
[ jmp  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ mov rax, r12 ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r14 ]
[ ret  ]
[ add qword ptr [rip  +  [ displacement ] ], rbp ]
[ jmp  [ addr ]  ]
[ test r14, r14 ]
[ jz  [ addr ]  ]
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ mov edx,  [ argument ]  ]
[ mov esi,  [ argument ]  ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
[ mov rdi, qword ptr [rsp  +  [ displacement ] ] ]
[ cmp rdi, r13 ]
[ jz  [ addr ]  ]
[ cmp rdi, qword ptr [rsp] ]
[ jz  [ addr ]  ]
[ call  [ addr.func ]  ]
[ movzx eax, byte ptr [rsp  +  [ displacement ] ] ]
[ add rax, rbp ]
[ mov rbx, qword ptr [rsp  +  [ displacement ] ] ]
[ xor rbx, qword ptr fs:[ [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ mov r12, rax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629dcac2
#call parent addr: 7f5e978b52cf
#root size: 1604
===============================================================
RET========================================================
#ret target: 55e8629dcac2
#function name: NULL
#func_id: 5
===========================================================
[ pop rcx ]
[ pop rsi ]
[ add rsp,  [ argument ]  ]
[ mov rax, r12 ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ mov r12, rax ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ mov rax, r12 ]
[ pop rbx ]
[ pop r12 ]
[ ret  ]
[ mov rdi, qword ptr [rip  +  [ displacement ] ] ]
[ mov rax, qword ptr [rdi  +  [ displacement ] ] ]
[ cmp rax, qword ptr [rdi  +  [ displacement ] ] ]
[ jnb  [ addr ]  ]
[ lea rdx, ptr [rax  +  [ displacement ] ] ]
[ mov qword ptr [rdi  +  [ displacement ] ], rdx ]
[ mov byte ptr [rax],  [ argument ]  ]
[ add rbx,  [ argument ]  ]
[ cmp qword ptr [rip  +  [ displacement ] ], rbx ]
[ jnbe  [ addr ]  ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ xor esi, esi ]
[ mov rdi, qword ptr [rax + rbx * 8] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629de35d
#call parent addr: 7f5e978b52cf
#root size: 1604
===============================================================
CALL===========================================================
#now call addr: 55e8629dced3
#call parent addr: 55e8629de35d
#root size: 1605
===============================================================
RET========================================================
#ret target: 55e8629dced3
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dcfa1
#call parent addr: 55e8629de35d
#root size: 1605
===============================================================
CALL===========================================================
#now call addr: 55e8629dcaba
#call parent addr: 55e8629dcfa1
#root size: 1606
===============================================================
CALL===========================================================
#now call addr: 55e8629dc6c0
#call parent addr: 55e8629dcaba
#root size: 1607
===============================================================
CALL===========================================================
#now call addr: 55e8629dc221
#call parent addr: 55e8629dc6c0
#root size: 1608
===============================================================
RET========================================================
#ret target: 55e8629dc221
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dc25b
#call parent addr: 55e8629dc6c0
#root size: 1608
===============================================================
CALL===========================================================
#now call addr: 55e8629e89b1
#call parent addr: 55e8629dc25b
#root size: 1609
===============================================================
RET========================================================
#ret target: 55e8629e89b1
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e89e0
#call parent addr: 55e8629dc25b
#root size: 1609
===============================================================
CALL===========================================================
#now call addr: 55e8629e74d8
#call parent addr: 55e8629e89e0
#root size: 1610
===============================================================
RET========================================================
#ret target: 55e8629e74d8
#function name: __ctype_get_mb_cur_max
#func_id: 314
===========================================================
CALL===========================================================
#now call addr: 55e8629dc284
#call parent addr: 55e8629e89e0
#root size: 1610
===============================================================
RET========================================================
#ret target: 55e8629dc284
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ cmp r12, rax ]
[ setnz byte ptr [rsp  +  [ displacement ] ] ]
[ test r15d, r15d ]
[ jz  [ addr ]  ]
[ mov rbx, r12 ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 55e8629dc989
#call parent addr: 55e8629e89e0
#root size: 1610
===============================================================
[ cmp eax,  [ addr ]  ]
[ jz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ xor r12d, r12d ]
[ pop rbx ]
[ mov rax, r12 ]
[ pop rbp ]
[ pop r12 ]
[ pop r14 ]
[ ret  ]
[ mov r14, qword ptr [rcx  +  [ displacement ] ] ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ sub rax, rdx ]
[ mov rsi, r14 ]
[ sub rsi, rdx ]
[ cmp rax, rsi ]
[ jbe  [ addr ]  ]
[ mov rsi, rdi ]
[ mov rdx, r12 ]
[ mov rdi, rcx ]
[ call qword ptr [r14  +  [ displacement ] ] ]
CALL===========================================================
#now call addr: 7f5e978a9390
#call parent addr: 55e8629dc989
#root size: 1611
===============================================================
[ sub rax, rdi ]
[ xor r15d, r15d ]
[ mov rdx, rax ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ cmp rbx, rdx ]
[ mov rsi, r12 ]
[ mov r14, rbx ]
[ cmovbe rdx, rbx ]
[ mov r13, rdx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978aa7ad
#call parent addr: 7f5e978a9390
#root size: 1612
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ mov rax, rdi ]
[ add rax, rdx ]
[ jmp  [ addr ]  ]
[ cmp rdx,  [ argument ]  ]
[ jb  [ addr ]  ]
[ cmp rdx,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ vmovdqu ymm0, ymmword ptr [rsi] ]
[ vmovdqu ymm1, ymmword ptr [rsi + rdx * 1- [ displacement ] ] ]
[ vmovdqu ymmword ptr [rdi], ymm0 ]
[ vmovdqu ymmword ptr [rdi + rdx * 1- [ displacement ] ], ymm1 ]
[ vzeroupper ]
[ ret  ]
RET========================================================
#ret target: 7f5e978aa7ad
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ add r12, r13 ]
[ sub r14, r13 ]
[ mov qword ptr [rbp  +  [ displacement ] ], rax ]
[ add r15, r14 ]
[ jnz  [ addr ]  ]
[ sub rbx, r14 ]
[ mov r13, rbx ]
[ add rsp,  [ argument ]  ]
[ mov rax, r13 ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
CALL===========================================================
#now call addr: 55e8629dcac2
#call parent addr: 7f5e978a9390
#root size: 1612
===============================================================
RET========================================================
#ret target: 55e8629dcac2
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629de35d
#call parent addr: 7f5e978a9390
#root size: 1612
===============================================================
CALL===========================================================
#now call addr: 55e8629dced3
#call parent addr: 55e8629de35d
#root size: 1613
===============================================================
RET========================================================
#ret target: 55e8629dced3
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dcfa1
#call parent addr: 55e8629de35d
#root size: 1613
===============================================================
CALL===========================================================
#now call addr: 55e8629dcaba
#call parent addr: 55e8629dcfa1
#root size: 1614
===============================================================
CALL===========================================================
#now call addr: 55e8629dc6c0
#call parent addr: 55e8629dcaba
#root size: 1615
===============================================================
CALL===========================================================
#now call addr: 55e8629dc221
#call parent addr: 55e8629dc6c0
#root size: 1616
===============================================================
RET========================================================
#ret target: 55e8629dc221
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dc25b
#call parent addr: 55e8629dc6c0
#root size: 1616
===============================================================
CALL===========================================================
#now call addr: 55e8629e89b1
#call parent addr: 55e8629dc25b
#root size: 1617
===============================================================
RET========================================================
#ret target: 55e8629e89b1
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e89e0
#call parent addr: 55e8629dc25b
#root size: 1617
===============================================================
CALL===========================================================
#now call addr: 55e8629e74d8
#call parent addr: 55e8629e89e0
#root size: 1618
===============================================================
RET========================================================
#ret target: 55e8629e74d8
#function name: __ctype_get_mb_cur_max
#func_id: 314
===========================================================
CALL===========================================================
#now call addr: 55e8629dc284
#call parent addr: 55e8629e89e0
#root size: 1618
===============================================================
RET========================================================
#ret target: 55e8629dc284
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dc989
#call parent addr: 55e8629e89e0
#root size: 1618
===============================================================
CALL===========================================================
#now call addr: 7f5e978a9390
#call parent addr: 55e8629dc989
#root size: 1619
===============================================================
CALL===========================================================
#now call addr: 7f5e978aa7ad
#call parent addr: 7f5e978a9390
#root size: 1620
===============================================================
RET========================================================
#ret target: 7f5e978aa7ad
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ add r12, r13 ]
[ sub r14, r13 ]
[ mov qword ptr [rbp  +  [ displacement ] ], rax ]
[ add r15, r14 ]
[ jnz  [ addr ]  ]
[ sub rbx, r14 ]
[ mov r13, rbx ]
[ add rsp,  [ argument ]  ]
[ mov rax, r13 ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
CALL===========================================================
#now call addr: 55e8629dcac2
#call parent addr: 7f5e978a9390
#root size: 1620
===============================================================
RET========================================================
#ret target: 55e8629dcac2
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629de35d
#call parent addr: 7f5e978a9390
#root size: 1620
===============================================================
CALL===========================================================
#now call addr: 55e8629dced3
#call parent addr: 55e8629de35d
#root size: 1621
===============================================================
RET========================================================
#ret target: 55e8629dced3
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dcfa1
#call parent addr: 55e8629de35d
#root size: 1621
===============================================================
CALL===========================================================
#now call addr: 55e8629dcaba
#call parent addr: 55e8629dcfa1
#root size: 1622
===============================================================
CALL===========================================================
#now call addr: 55e8629dc6c0
#call parent addr: 55e8629dcaba
#root size: 1623
===============================================================
CALL===========================================================
#now call addr: 55e8629dc221
#call parent addr: 55e8629dc6c0
#root size: 1624
===============================================================
RET========================================================
#ret target: 55e8629dc221
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dc25b
#call parent addr: 55e8629dc6c0
#root size: 1624
===============================================================
CALL===========================================================
#now call addr: 55e8629e89b1
#call parent addr: 55e8629dc25b
#root size: 1625
===============================================================
RET========================================================
#ret target: 55e8629e89b1
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e89e0
#call parent addr: 55e8629dc25b
#root size: 1625
===============================================================
CALL===========================================================
#now call addr: 55e8629e74d8
#call parent addr: 55e8629e89e0
#root size: 1626
===============================================================
RET========================================================
#ret target: 55e8629e74d8
#function name: __ctype_get_mb_cur_max
#func_id: 314
===========================================================
CALL===========================================================
#now call addr: 55e8629dc284
#call parent addr: 55e8629e89e0
#root size: 1626
===============================================================
RET========================================================
#ret target: 55e8629dc284
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dc989
#call parent addr: 55e8629e89e0
#root size: 1626
===============================================================
CALL===========================================================
#now call addr: 7f5e978a9390
#call parent addr: 55e8629dc989
#root size: 1627
===============================================================
CALL===========================================================
#now call addr: 7f5e978aa7ad
#call parent addr: 7f5e978a9390
#root size: 1628
===============================================================
RET========================================================
#ret target: 7f5e978aa7ad
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dcac2
#call parent addr: 7f5e978a9390
#root size: 1628
===============================================================
RET========================================================
#ret target: 55e8629dcac2
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629de35d
#call parent addr: 7f5e978a9390
#root size: 1628
===============================================================
CALL===========================================================
#now call addr: 55e8629dced3
#call parent addr: 55e8629de35d
#root size: 1629
===============================================================
RET========================================================
#ret target: 55e8629dced3
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dcfa1
#call parent addr: 55e8629de35d
#root size: 1629
===============================================================
CALL===========================================================
#now call addr: 55e8629dcaba
#call parent addr: 55e8629dcfa1
#root size: 1630
===============================================================
CALL===========================================================
#now call addr: 55e8629dc6c0
#call parent addr: 55e8629dcaba
#root size: 1631
===============================================================
CALL===========================================================
#now call addr: 55e8629dc221
#call parent addr: 55e8629dc6c0
#root size: 1632
===============================================================
RET========================================================
#ret target: 55e8629dc221
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dc25b
#call parent addr: 55e8629dc6c0
#root size: 1632
===============================================================
CALL===========================================================
#now call addr: 55e8629e89b1
#call parent addr: 55e8629dc25b
#root size: 1633
===============================================================
RET========================================================
#ret target: 55e8629e89b1
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e89e0
#call parent addr: 55e8629dc25b
#root size: 1633
===============================================================
CALL===========================================================
#now call addr: 55e8629e74d8
#call parent addr: 55e8629e89e0
#root size: 1634
===============================================================
RET========================================================
#ret target: 55e8629e74d8
#function name: __ctype_get_mb_cur_max
#func_id: 314
===========================================================
CALL===========================================================
#now call addr: 55e8629dc284
#call parent addr: 55e8629e89e0
#root size: 1634
===============================================================
RET========================================================
#ret target: 55e8629dc284
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dc989
#call parent addr: 55e8629e89e0
#root size: 1634
===============================================================
CALL===========================================================
#now call addr: 7f5e978a9390
#call parent addr: 55e8629dc989
#root size: 1635
===============================================================
CALL===========================================================
#now call addr: 7f5e978aa7ad
#call parent addr: 7f5e978a9390
#root size: 1636
===============================================================
RET========================================================
#ret target: 7f5e978aa7ad
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dcac2
#call parent addr: 7f5e978a9390
#root size: 1636
===============================================================
RET========================================================
#ret target: 55e8629dcac2
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629de35d
#call parent addr: 7f5e978a9390
#root size: 1636
===============================================================
CALL===========================================================
#now call addr: 55e8629dced3
#call parent addr: 55e8629de35d
#root size: 1637
===============================================================
RET========================================================
#ret target: 55e8629dced3
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dcfa1
#call parent addr: 55e8629de35d
#root size: 1637
===============================================================
CALL===========================================================
#now call addr: 55e8629dcaba
#call parent addr: 55e8629dcfa1
#root size: 1638
===============================================================
CALL===========================================================
#now call addr: 55e8629dc6c0
#call parent addr: 55e8629dcaba
#root size: 1639
===============================================================
CALL===========================================================
#now call addr: 55e8629dc221
#call parent addr: 55e8629dc6c0
#root size: 1640
===============================================================
RET========================================================
#ret target: 55e8629dc221
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dc25b
#call parent addr: 55e8629dc6c0
#root size: 1640
===============================================================
CALL===========================================================
#now call addr: 55e8629e89b1
#call parent addr: 55e8629dc25b
#root size: 1641
===============================================================
RET========================================================
#ret target: 55e8629e89b1
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e89e0
#call parent addr: 55e8629dc25b
#root size: 1641
===============================================================
CALL===========================================================
#now call addr: 55e8629e74d8
#call parent addr: 55e8629e89e0
#root size: 1642
===============================================================
RET========================================================
#ret target: 55e8629e74d8
#function name: __ctype_get_mb_cur_max
#func_id: 314
===========================================================
CALL===========================================================
#now call addr: 55e8629dc284
#call parent addr: 55e8629e89e0
#root size: 1642
===============================================================
RET========================================================
#ret target: 55e8629dc284
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dc989
#call parent addr: 55e8629e89e0
#root size: 1642
===============================================================
CALL===========================================================
#now call addr: 7f5e978a9390
#call parent addr: 55e8629dc989
#root size: 1643
===============================================================
CALL===========================================================
#now call addr: 7f5e978aa7ad
#call parent addr: 7f5e978a9390
#root size: 1644
===============================================================
RET========================================================
#ret target: 7f5e978aa7ad
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dcac2
#call parent addr: 7f5e978a9390
#root size: 1644
===============================================================
RET========================================================
#ret target: 55e8629dcac2
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629de35d
#call parent addr: 7f5e978a9390
#root size: 1644
===============================================================
CALL===========================================================
#now call addr: 55e8629dced3
#call parent addr: 55e8629de35d
#root size: 1645
===============================================================
RET========================================================
#ret target: 55e8629dced3
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dcfa1
#call parent addr: 55e8629de35d
#root size: 1645
===============================================================
CALL===========================================================
#now call addr: 55e8629dcaba
#call parent addr: 55e8629dcfa1
#root size: 1646
===============================================================
CALL===========================================================
#now call addr: 55e8629dc6c0
#call parent addr: 55e8629dcaba
#root size: 1647
===============================================================
CALL===========================================================
#now call addr: 55e8629dc221
#call parent addr: 55e8629dc6c0
#root size: 1648
===============================================================
RET========================================================
#ret target: 55e8629dc221
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dc25b
#call parent addr: 55e8629dc6c0
#root size: 1648
===============================================================
CALL===========================================================
#now call addr: 55e8629e89b1
#call parent addr: 55e8629dc25b
#root size: 1649
===============================================================
RET========================================================
#ret target: 55e8629e89b1
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e89e0
#call parent addr: 55e8629dc25b
#root size: 1649
===============================================================
CALL===========================================================
#now call addr: 55e8629e74d8
#call parent addr: 55e8629e89e0
#root size: 1650
===============================================================
RET========================================================
#ret target: 55e8629e74d8
#function name: __ctype_get_mb_cur_max
#func_id: 314
===========================================================
CALL===========================================================
#now call addr: 55e8629dc284
#call parent addr: 55e8629e89e0
#root size: 1650
===============================================================
RET========================================================
#ret target: 55e8629dc284
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dc989
#call parent addr: 55e8629e89e0
#root size: 1650
===============================================================
CALL===========================================================
#now call addr: 7f5e978a9390
#call parent addr: 55e8629dc989
#root size: 1651
===============================================================
CALL===========================================================
#now call addr: 7f5e978aa7ad
#call parent addr: 7f5e978a9390
#root size: 1652
===============================================================
RET========================================================
#ret target: 7f5e978aa7ad
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dcac2
#call parent addr: 7f5e978a9390
#root size: 1652
===============================================================
RET========================================================
#ret target: 55e8629dcac2
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629de35d
#call parent addr: 7f5e978a9390
#root size: 1652
===============================================================
CALL===========================================================
#now call addr: 55e8629dced3
#call parent addr: 55e8629de35d
#root size: 1653
===============================================================
RET========================================================
#ret target: 55e8629dced3
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dcfa1
#call parent addr: 55e8629de35d
#root size: 1653
===============================================================
CALL===========================================================
#now call addr: 55e8629dcaba
#call parent addr: 55e8629dcfa1
#root size: 1654
===============================================================
CALL===========================================================
#now call addr: 55e8629dc6c0
#call parent addr: 55e8629dcaba
#root size: 1655
===============================================================
CALL===========================================================
#now call addr: 55e8629dc221
#call parent addr: 55e8629dc6c0
#root size: 1656
===============================================================
RET========================================================
#ret target: 55e8629dc221
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dc25b
#call parent addr: 55e8629dc6c0
#root size: 1656
===============================================================
CALL===========================================================
#now call addr: 55e8629e89b1
#call parent addr: 55e8629dc25b
#root size: 1657
===============================================================
RET========================================================
#ret target: 55e8629e89b1
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e89e0
#call parent addr: 55e8629dc25b
#root size: 1657
===============================================================
CALL===========================================================
#now call addr: 55e8629e74d8
#call parent addr: 55e8629e89e0
#root size: 1658
===============================================================
RET========================================================
#ret target: 55e8629e74d8
#function name: __ctype_get_mb_cur_max
#func_id: 314
===========================================================
CALL===========================================================
#now call addr: 55e8629dc284
#call parent addr: 55e8629e89e0
#root size: 1658
===============================================================
RET========================================================
#ret target: 55e8629dc284
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dc989
#call parent addr: 55e8629e89e0
#root size: 1658
===============================================================
CALL===========================================================
#now call addr: 7f5e978a9390
#call parent addr: 55e8629dc989
#root size: 1659
===============================================================
CALL===========================================================
#now call addr: 7f5e978aa7ad
#call parent addr: 7f5e978a9390
#root size: 1660
===============================================================
RET========================================================
#ret target: 7f5e978aa7ad
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dcac2
#call parent addr: 7f5e978a9390
#root size: 1660
===============================================================
RET========================================================
#ret target: 55e8629dcac2
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629de35d
#call parent addr: 7f5e978a9390
#root size: 1660
===============================================================
CALL===========================================================
#now call addr: 55e8629dced3
#call parent addr: 55e8629de35d
#root size: 1661
===============================================================
RET========================================================
#ret target: 55e8629dced3
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dcfa1
#call parent addr: 55e8629de35d
#root size: 1661
===============================================================
CALL===========================================================
#now call addr: 55e8629dcaba
#call parent addr: 55e8629dcfa1
#root size: 1662
===============================================================
CALL===========================================================
#now call addr: 55e8629dc6c0
#call parent addr: 55e8629dcaba
#root size: 1663
===============================================================
CALL===========================================================
#now call addr: 55e8629dc221
#call parent addr: 55e8629dc6c0
#root size: 1664
===============================================================
RET========================================================
#ret target: 55e8629dc221
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dc25b
#call parent addr: 55e8629dc6c0
#root size: 1664
===============================================================
CALL===========================================================
#now call addr: 55e8629e89b1
#call parent addr: 55e8629dc25b
#root size: 1665
===============================================================
RET========================================================
#ret target: 55e8629e89b1
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e89e0
#call parent addr: 55e8629dc25b
#root size: 1665
===============================================================
CALL===========================================================
#now call addr: 55e8629e74d8
#call parent addr: 55e8629e89e0
#root size: 1666
===============================================================
RET========================================================
#ret target: 55e8629e74d8
#function name: __ctype_get_mb_cur_max
#func_id: 314
===========================================================
CALL===========================================================
#now call addr: 55e8629dc284
#call parent addr: 55e8629e89e0
#root size: 1666
===============================================================
RET========================================================
#ret target: 55e8629dc284
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dc989
#call parent addr: 55e8629e89e0
#root size: 1666
===============================================================
CALL===========================================================
#now call addr: 7f5e978a9390
#call parent addr: 55e8629dc989
#root size: 1667
===============================================================
CALL===========================================================
#now call addr: 7f5e978aa7ad
#call parent addr: 7f5e978a9390
#root size: 1668
===============================================================
RET========================================================
#ret target: 7f5e978aa7ad
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dcac2
#call parent addr: 7f5e978a9390
#root size: 1668
===============================================================
RET========================================================
#ret target: 55e8629dcac2
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629de35d
#call parent addr: 7f5e978a9390
#root size: 1668
===============================================================
CALL===========================================================
#now call addr: 55e8629dced3
#call parent addr: 55e8629de35d
#root size: 1669
===============================================================
RET========================================================
#ret target: 55e8629dced3
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dcfa1
#call parent addr: 55e8629de35d
#root size: 1669
===============================================================
CALL===========================================================
#now call addr: 55e8629dcaba
#call parent addr: 55e8629dcfa1
#root size: 1670
===============================================================
CALL===========================================================
#now call addr: 55e8629dc6c0
#call parent addr: 55e8629dcaba
#root size: 1671
===============================================================
CALL===========================================================
#now call addr: 55e8629dc221
#call parent addr: 55e8629dc6c0
#root size: 1672
===============================================================
RET========================================================
#ret target: 55e8629dc221
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dc25b
#call parent addr: 55e8629dc6c0
#root size: 1672
===============================================================
CALL===========================================================
#now call addr: 55e8629e89b1
#call parent addr: 55e8629dc25b
#root size: 1673
===============================================================
RET========================================================
#ret target: 55e8629e89b1
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e89e0
#call parent addr: 55e8629dc25b
#root size: 1673
===============================================================
CALL===========================================================
#now call addr: 55e8629e74d8
#call parent addr: 55e8629e89e0
#root size: 1674
===============================================================
RET========================================================
#ret target: 55e8629e74d8
#function name: __ctype_get_mb_cur_max
#func_id: 314
===========================================================
CALL===========================================================
#now call addr: 55e8629dc284
#call parent addr: 55e8629e89e0
#root size: 1674
===============================================================
RET========================================================
#ret target: 55e8629dc284
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dc989
#call parent addr: 55e8629e89e0
#root size: 1674
===============================================================
CALL===========================================================
#now call addr: 7f5e978a9390
#call parent addr: 55e8629dc989
#root size: 1675
===============================================================
CALL===========================================================
#now call addr: 7f5e978aa7ad
#call parent addr: 7f5e978a9390
#root size: 1676
===============================================================
RET========================================================
#ret target: 7f5e978aa7ad
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dcac2
#call parent addr: 7f5e978a9390
#root size: 1676
===============================================================
RET========================================================
#ret target: 55e8629dcac2
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629de35d
#call parent addr: 7f5e978a9390
#root size: 1676
===============================================================
CALL===========================================================
#now call addr: 55e8629dced3
#call parent addr: 55e8629de35d
#root size: 1677
===============================================================
RET========================================================
#ret target: 55e8629dced3
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dcfa1
#call parent addr: 55e8629de35d
#root size: 1677
===============================================================
CALL===========================================================
#now call addr: 55e8629dcaba
#call parent addr: 55e8629dcfa1
#root size: 1678
===============================================================
CALL===========================================================
#now call addr: 55e8629dc6c0
#call parent addr: 55e8629dcaba
#root size: 1679
===============================================================
CALL===========================================================
#now call addr: 55e8629dc221
#call parent addr: 55e8629dc6c0
#root size: 1680
===============================================================
RET========================================================
#ret target: 55e8629dc221
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dc25b
#call parent addr: 55e8629dc6c0
#root size: 1680
===============================================================
CALL===========================================================
#now call addr: 55e8629e89b1
#call parent addr: 55e8629dc25b
#root size: 1681
===============================================================
RET========================================================
#ret target: 55e8629e89b1
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e89e0
#call parent addr: 55e8629dc25b
#root size: 1681
===============================================================
CALL===========================================================
#now call addr: 55e8629e74d8
#call parent addr: 55e8629e89e0
#root size: 1682
===============================================================
RET========================================================
#ret target: 55e8629e74d8
#function name: __ctype_get_mb_cur_max
#func_id: 314
===========================================================
CALL===========================================================
#now call addr: 55e8629dc284
#call parent addr: 55e8629e89e0
#root size: 1682
===============================================================
RET========================================================
#ret target: 55e8629dc284
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dc989
#call parent addr: 55e8629e89e0
#root size: 1682
===============================================================
CALL===========================================================
#now call addr: 7f5e978a9390
#call parent addr: 55e8629dc989
#root size: 1683
===============================================================
CALL===========================================================
#now call addr: 7f5e978aa7ad
#call parent addr: 7f5e978a9390
#root size: 1684
===============================================================
RET========================================================
#ret target: 7f5e978aa7ad
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dcac2
#call parent addr: 7f5e978a9390
#root size: 1684
===============================================================
RET========================================================
#ret target: 55e8629dcac2
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629de35d
#call parent addr: 7f5e978a9390
#root size: 1684
===============================================================
CALL===========================================================
#now call addr: 55e8629dced3
#call parent addr: 55e8629de35d
#root size: 1685
===============================================================
RET========================================================
#ret target: 55e8629dced3
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dcfa1
#call parent addr: 55e8629de35d
#root size: 1685
===============================================================
CALL===========================================================
#now call addr: 55e8629dcaba
#call parent addr: 55e8629dcfa1
#root size: 1686
===============================================================
CALL===========================================================
#now call addr: 55e8629dc6c0
#call parent addr: 55e8629dcaba
#root size: 1687
===============================================================
CALL===========================================================
#now call addr: 55e8629dc221
#call parent addr: 55e8629dc6c0
#root size: 1688
===============================================================
RET========================================================
#ret target: 55e8629dc221
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dc25b
#call parent addr: 55e8629dc6c0
#root size: 1688
===============================================================
CALL===========================================================
#now call addr: 55e8629e89b1
#call parent addr: 55e8629dc25b
#root size: 1689
===============================================================
RET========================================================
#ret target: 55e8629e89b1
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e89e0
#call parent addr: 55e8629dc25b
#root size: 1689
===============================================================
CALL===========================================================
#now call addr: 55e8629e74d8
#call parent addr: 55e8629e89e0
#root size: 1690
===============================================================
RET========================================================
#ret target: 55e8629e74d8
#function name: __ctype_get_mb_cur_max
#func_id: 314
===========================================================
CALL===========================================================
#now call addr: 55e8629dc284
#call parent addr: 55e8629e89e0
#root size: 1690
===============================================================
RET========================================================
#ret target: 55e8629dc284
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dc989
#call parent addr: 55e8629e89e0
#root size: 1690
===============================================================
CALL===========================================================
#now call addr: 7f5e978a9390
#call parent addr: 55e8629dc989
#root size: 1691
===============================================================
CALL===========================================================
#now call addr: 7f5e978aa7ad
#call parent addr: 7f5e978a9390
#root size: 1692
===============================================================
RET========================================================
#ret target: 7f5e978aa7ad
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ add r12, r13 ]
[ sub r14, r13 ]
[ mov qword ptr [rbp  +  [ displacement ] ], rax ]
[ add r15, r14 ]
[ jnz  [ addr ]  ]
[ sub rbx, r14 ]
[ mov r13, rbx ]
[ add rsp,  [ argument ]  ]
[ mov rax, r13 ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
CALL===========================================================
#now call addr: 55e8629dcac2
#call parent addr: 7f5e978a9390
#root size: 1692
===============================================================
RET========================================================
#ret target: 55e8629dcac2
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629de35d
#call parent addr: 7f5e978a9390
#root size: 1692
===============================================================
CALL===========================================================
#now call addr: 55e8629dced3
#call parent addr: 55e8629de35d
#root size: 1693
===============================================================
RET========================================================
#ret target: 55e8629dced3
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dcfa1
#call parent addr: 55e8629de35d
#root size: 1693
===============================================================
CALL===========================================================
#now call addr: 55e8629dcaba
#call parent addr: 55e8629dcfa1
#root size: 1694
===============================================================
CALL===========================================================
#now call addr: 55e8629dc6c0
#call parent addr: 55e8629dcaba
#root size: 1695
===============================================================
CALL===========================================================
#now call addr: 55e8629dc221
#call parent addr: 55e8629dc6c0
#root size: 1696
===============================================================
RET========================================================
#ret target: 55e8629dc221
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dc25b
#call parent addr: 55e8629dc6c0
#root size: 1696
===============================================================
CALL===========================================================
#now call addr: 55e8629e89b1
#call parent addr: 55e8629dc25b
#root size: 1697
===============================================================
RET========================================================
#ret target: 55e8629e89b1
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e89e0
#call parent addr: 55e8629dc25b
#root size: 1697
===============================================================
CALL===========================================================
#now call addr: 55e8629e74d8
#call parent addr: 55e8629e89e0
#root size: 1698
===============================================================
RET========================================================
#ret target: 55e8629e74d8
#function name: __ctype_get_mb_cur_max
#func_id: 314
===========================================================
CALL===========================================================
#now call addr: 55e8629dc284
#call parent addr: 55e8629e89e0
#root size: 1698
===============================================================
RET========================================================
#ret target: 55e8629dc284
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dc989
#call parent addr: 55e8629e89e0
#root size: 1698
===============================================================
CALL===========================================================
#now call addr: 7f5e978a9390
#call parent addr: 55e8629dc989
#root size: 1699
===============================================================
CALL===========================================================
#now call addr: 7f5e978aa7ad
#call parent addr: 7f5e978a9390
#root size: 1700
===============================================================
RET========================================================
#ret target: 7f5e978aa7ad
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dcac2
#call parent addr: 7f5e978a9390
#root size: 1700
===============================================================
RET========================================================
#ret target: 55e8629dcac2
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629de35d
#call parent addr: 7f5e978a9390
#root size: 1700
===============================================================
CALL===========================================================
#now call addr: 55e8629dced3
#call parent addr: 55e8629de35d
#root size: 1701
===============================================================
RET========================================================
#ret target: 55e8629dced3
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dcfa1
#call parent addr: 55e8629de35d
#root size: 1701
===============================================================
CALL===========================================================
#now call addr: 55e8629dcaba
#call parent addr: 55e8629dcfa1
#root size: 1702
===============================================================
CALL===========================================================
#now call addr: 55e8629dc6c0
#call parent addr: 55e8629dcaba
#root size: 1703
===============================================================
CALL===========================================================
#now call addr: 55e8629dc221
#call parent addr: 55e8629dc6c0
#root size: 1704
===============================================================
RET========================================================
#ret target: 55e8629dc221
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dc25b
#call parent addr: 55e8629dc6c0
#root size: 1704
===============================================================
CALL===========================================================
#now call addr: 55e8629e89b1
#call parent addr: 55e8629dc25b
#root size: 1705
===============================================================
RET========================================================
#ret target: 55e8629e89b1
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e89e0
#call parent addr: 55e8629dc25b
#root size: 1705
===============================================================
CALL===========================================================
#now call addr: 55e8629e74d8
#call parent addr: 55e8629e89e0
#root size: 1706
===============================================================
RET========================================================
#ret target: 55e8629e74d8
#function name: __ctype_get_mb_cur_max
#func_id: 314
===========================================================
CALL===========================================================
#now call addr: 55e8629dc284
#call parent addr: 55e8629e89e0
#root size: 1706
===============================================================
RET========================================================
#ret target: 55e8629dc284
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dc989
#call parent addr: 55e8629e89e0
#root size: 1706
===============================================================
CALL===========================================================
#now call addr: 7f5e978a9390
#call parent addr: 55e8629dc989
#root size: 1707
===============================================================
CALL===========================================================
#now call addr: 7f5e978aa7ad
#call parent addr: 7f5e978a9390
#root size: 1708
===============================================================
RET========================================================
#ret target: 7f5e978aa7ad
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dcac2
#call parent addr: 7f5e978a9390
#root size: 1708
===============================================================
RET========================================================
#ret target: 55e8629dcac2
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629de35d
#call parent addr: 7f5e978a9390
#root size: 1708
===============================================================
CALL===========================================================
#now call addr: 55e8629dced3
#call parent addr: 55e8629de35d
#root size: 1709
===============================================================
RET========================================================
#ret target: 55e8629dced3
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dcfa1
#call parent addr: 55e8629de35d
#root size: 1709
===============================================================
CALL===========================================================
#now call addr: 55e8629dcaba
#call parent addr: 55e8629dcfa1
#root size: 1710
===============================================================
CALL===========================================================
#now call addr: 55e8629dc6c0
#call parent addr: 55e8629dcaba
#root size: 1711
===============================================================
CALL===========================================================
#now call addr: 55e8629dc221
#call parent addr: 55e8629dc6c0
#root size: 1712
===============================================================
RET========================================================
#ret target: 55e8629dc221
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dc25b
#call parent addr: 55e8629dc6c0
#root size: 1712
===============================================================
CALL===========================================================
#now call addr: 55e8629e89b1
#call parent addr: 55e8629dc25b
#root size: 1713
===============================================================
RET========================================================
#ret target: 55e8629e89b1
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e89e0
#call parent addr: 55e8629dc25b
#root size: 1713
===============================================================
CALL===========================================================
#now call addr: 55e8629e74d8
#call parent addr: 55e8629e89e0
#root size: 1714
===============================================================
RET========================================================
#ret target: 55e8629e74d8
#function name: __ctype_get_mb_cur_max
#func_id: 314
===========================================================
CALL===========================================================
#now call addr: 55e8629dc284
#call parent addr: 55e8629e89e0
#root size: 1714
===============================================================
RET========================================================
#ret target: 55e8629dc284
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dc989
#call parent addr: 55e8629e89e0
#root size: 1714
===============================================================
CALL===========================================================
#now call addr: 7f5e978a9390
#call parent addr: 55e8629dc989
#root size: 1715
===============================================================
CALL===========================================================
#now call addr: 7f5e978aa7ad
#call parent addr: 7f5e978a9390
#root size: 1716
===============================================================
RET========================================================
#ret target: 7f5e978aa7ad
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dcac2
#call parent addr: 7f5e978a9390
#root size: 1716
===============================================================
RET========================================================
#ret target: 55e8629dcac2
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629de35d
#call parent addr: 7f5e978a9390
#root size: 1716
===============================================================
CALL===========================================================
#now call addr: 55e8629dced3
#call parent addr: 55e8629de35d
#root size: 1717
===============================================================
RET========================================================
#ret target: 55e8629dced3
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dcfa1
#call parent addr: 55e8629de35d
#root size: 1717
===============================================================
CALL===========================================================
#now call addr: 55e8629dcaba
#call parent addr: 55e8629dcfa1
#root size: 1718
===============================================================
CALL===========================================================
#now call addr: 55e8629dc6c0
#call parent addr: 55e8629dcaba
#root size: 1719
===============================================================
CALL===========================================================
#now call addr: 55e8629dc221
#call parent addr: 55e8629dc6c0
#root size: 1720
===============================================================
RET========================================================
#ret target: 55e8629dc221
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dc25b
#call parent addr: 55e8629dc6c0
#root size: 1720
===============================================================
CALL===========================================================
#now call addr: 55e8629e89b1
#call parent addr: 55e8629dc25b
#root size: 1721
===============================================================
RET========================================================
#ret target: 55e8629e89b1
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e89e0
#call parent addr: 55e8629dc25b
#root size: 1721
===============================================================
CALL===========================================================
#now call addr: 55e8629e74d8
#call parent addr: 55e8629e89e0
#root size: 1722
===============================================================
RET========================================================
#ret target: 55e8629e74d8
#function name: __ctype_get_mb_cur_max
#func_id: 314
===========================================================
CALL===========================================================
#now call addr: 55e8629dc284
#call parent addr: 55e8629e89e0
#root size: 1722
===============================================================
RET========================================================
#ret target: 55e8629dc284
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dc989
#call parent addr: 55e8629e89e0
#root size: 1722
===============================================================
CALL===========================================================
#now call addr: 7f5e978a9390
#call parent addr: 55e8629dc989
#root size: 1723
===============================================================
CALL===========================================================
#now call addr: 7f5e978aa7ad
#call parent addr: 7f5e978a9390
#root size: 1724
===============================================================
RET========================================================
#ret target: 7f5e978aa7ad
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dcac2
#call parent addr: 7f5e978a9390
#root size: 1724
===============================================================
RET========================================================
#ret target: 55e8629dcac2
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629de35d
#call parent addr: 7f5e978a9390
#root size: 1724
===============================================================
CALL===========================================================
#now call addr: 55e8629dced3
#call parent addr: 55e8629de35d
#root size: 1725
===============================================================
RET========================================================
#ret target: 55e8629dced3
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dcfa1
#call parent addr: 55e8629de35d
#root size: 1725
===============================================================
CALL===========================================================
#now call addr: 55e8629dcaba
#call parent addr: 55e8629dcfa1
#root size: 1726
===============================================================
CALL===========================================================
#now call addr: 55e8629dc6c0
#call parent addr: 55e8629dcaba
#root size: 1727
===============================================================
CALL===========================================================
#now call addr: 55e8629dc221
#call parent addr: 55e8629dc6c0
#root size: 1728
===============================================================
RET========================================================
#ret target: 55e8629dc221
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dc25b
#call parent addr: 55e8629dc6c0
#root size: 1728
===============================================================
CALL===========================================================
#now call addr: 55e8629e89b1
#call parent addr: 55e8629dc25b
#root size: 1729
===============================================================
RET========================================================
#ret target: 55e8629e89b1
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e89e0
#call parent addr: 55e8629dc25b
#root size: 1729
===============================================================
CALL===========================================================
#now call addr: 55e8629e74d8
#call parent addr: 55e8629e89e0
#root size: 1730
===============================================================
RET========================================================
#ret target: 55e8629e74d8
#function name: __ctype_get_mb_cur_max
#func_id: 314
===========================================================
CALL===========================================================
#now call addr: 55e8629dc284
#call parent addr: 55e8629e89e0
#root size: 1730
===============================================================
RET========================================================
#ret target: 55e8629dc284
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dc989
#call parent addr: 55e8629e89e0
#root size: 1730
===============================================================
CALL===========================================================
#now call addr: 7f5e978a9390
#call parent addr: 55e8629dc989
#root size: 1731
===============================================================
CALL===========================================================
#now call addr: 7f5e978aa7ad
#call parent addr: 7f5e978a9390
#root size: 1732
===============================================================
RET========================================================
#ret target: 7f5e978aa7ad
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dcac2
#call parent addr: 7f5e978a9390
#root size: 1732
===============================================================
RET========================================================
#ret target: 55e8629dcac2
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629de35d
#call parent addr: 7f5e978a9390
#root size: 1732
===============================================================
CALL===========================================================
#now call addr: 55e8629dced3
#call parent addr: 55e8629de35d
#root size: 1733
===============================================================
RET========================================================
#ret target: 55e8629dced3
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dcfa1
#call parent addr: 55e8629de35d
#root size: 1733
===============================================================
CALL===========================================================
#now call addr: 55e8629dcaba
#call parent addr: 55e8629dcfa1
#root size: 1734
===============================================================
CALL===========================================================
#now call addr: 55e8629dc6c0
#call parent addr: 55e8629dcaba
#root size: 1735
===============================================================
CALL===========================================================
#now call addr: 55e8629dc221
#call parent addr: 55e8629dc6c0
#root size: 1736
===============================================================
RET========================================================
#ret target: 55e8629dc221
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dc25b
#call parent addr: 55e8629dc6c0
#root size: 1736
===============================================================
CALL===========================================================
#now call addr: 55e8629e89b1
#call parent addr: 55e8629dc25b
#root size: 1737
===============================================================
RET========================================================
#ret target: 55e8629e89b1
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e89e0
#call parent addr: 55e8629dc25b
#root size: 1737
===============================================================
CALL===========================================================
#now call addr: 55e8629e74d8
#call parent addr: 55e8629e89e0
#root size: 1738
===============================================================
RET========================================================
#ret target: 55e8629e74d8
#function name: __ctype_get_mb_cur_max
#func_id: 314
===========================================================
CALL===========================================================
#now call addr: 55e8629dc284
#call parent addr: 55e8629e89e0
#root size: 1738
===============================================================
RET========================================================
#ret target: 55e8629dc284
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dc989
#call parent addr: 55e8629e89e0
#root size: 1738
===============================================================
CALL===========================================================
#now call addr: 7f5e978a9390
#call parent addr: 55e8629dc989
#root size: 1739
===============================================================
CALL===========================================================
#now call addr: 7f5e978aa7ad
#call parent addr: 7f5e978a9390
#root size: 1740
===============================================================
RET========================================================
#ret target: 7f5e978aa7ad
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dcac2
#call parent addr: 7f5e978a9390
#root size: 1740
===============================================================
RET========================================================
#ret target: 55e8629dcac2
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629de35d
#call parent addr: 7f5e978a9390
#root size: 1740
===============================================================
CALL===========================================================
#now call addr: 55e8629dced3
#call parent addr: 55e8629de35d
#root size: 1741
===============================================================
RET========================================================
#ret target: 55e8629dced3
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dcfa1
#call parent addr: 55e8629de35d
#root size: 1741
===============================================================
CALL===========================================================
#now call addr: 55e8629dcaba
#call parent addr: 55e8629dcfa1
#root size: 1742
===============================================================
CALL===========================================================
#now call addr: 55e8629dc6c0
#call parent addr: 55e8629dcaba
#root size: 1743
===============================================================
CALL===========================================================
#now call addr: 55e8629dc221
#call parent addr: 55e8629dc6c0
#root size: 1744
===============================================================
RET========================================================
#ret target: 55e8629dc221
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dc25b
#call parent addr: 55e8629dc6c0
#root size: 1744
===============================================================
CALL===========================================================
#now call addr: 55e8629e89b1
#call parent addr: 55e8629dc25b
#root size: 1745
===============================================================
RET========================================================
#ret target: 55e8629e89b1
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e89e0
#call parent addr: 55e8629dc25b
#root size: 1745
===============================================================
CALL===========================================================
#now call addr: 55e8629e74d8
#call parent addr: 55e8629e89e0
#root size: 1746
===============================================================
RET========================================================
#ret target: 55e8629e74d8
#function name: __ctype_get_mb_cur_max
#func_id: 314
===========================================================
CALL===========================================================
#now call addr: 55e8629dc284
#call parent addr: 55e8629e89e0
#root size: 1746
===============================================================
RET========================================================
#ret target: 55e8629dc284
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dc989
#call parent addr: 55e8629e89e0
#root size: 1746
===============================================================
CALL===========================================================
#now call addr: 7f5e978a9390
#call parent addr: 55e8629dc989
#root size: 1747
===============================================================
CALL===========================================================
#now call addr: 7f5e978aa7ad
#call parent addr: 7f5e978a9390
#root size: 1748
===============================================================
RET========================================================
#ret target: 7f5e978aa7ad
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dcac2
#call parent addr: 7f5e978a9390
#root size: 1748
===============================================================
RET========================================================
#ret target: 55e8629dcac2
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629de35d
#call parent addr: 7f5e978a9390
#root size: 1748
===============================================================
CALL===========================================================
#now call addr: 55e8629dced3
#call parent addr: 55e8629de35d
#root size: 1749
===============================================================
RET========================================================
#ret target: 55e8629dced3
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dcfa1
#call parent addr: 55e8629de35d
#root size: 1749
===============================================================
CALL===========================================================
#now call addr: 55e8629dcaba
#call parent addr: 55e8629dcfa1
#root size: 1750
===============================================================
CALL===========================================================
#now call addr: 55e8629dc6c0
#call parent addr: 55e8629dcaba
#root size: 1751
===============================================================
CALL===========================================================
#now call addr: 55e8629dc221
#call parent addr: 55e8629dc6c0
#root size: 1752
===============================================================
RET========================================================
#ret target: 55e8629dc221
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dc25b
#call parent addr: 55e8629dc6c0
#root size: 1752
===============================================================
CALL===========================================================
#now call addr: 55e8629e89b1
#call parent addr: 55e8629dc25b
#root size: 1753
===============================================================
RET========================================================
#ret target: 55e8629e89b1
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e89e0
#call parent addr: 55e8629dc25b
#root size: 1753
===============================================================
CALL===========================================================
#now call addr: 55e8629e74d8
#call parent addr: 55e8629e89e0
#root size: 1754
===============================================================
RET========================================================
#ret target: 55e8629e74d8
#function name: __ctype_get_mb_cur_max
#func_id: 314
===========================================================
CALL===========================================================
#now call addr: 55e8629dc284
#call parent addr: 55e8629e89e0
#root size: 1754
===============================================================
RET========================================================
#ret target: 55e8629dc284
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dc989
#call parent addr: 55e8629e89e0
#root size: 1754
===============================================================
CALL===========================================================
#now call addr: 7f5e978a9390
#call parent addr: 55e8629dc989
#root size: 1755
===============================================================
CALL===========================================================
#now call addr: 7f5e978aa7ad
#call parent addr: 7f5e978a9390
#root size: 1756
===============================================================
RET========================================================
#ret target: 7f5e978aa7ad
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dcac2
#call parent addr: 7f5e978a9390
#root size: 1756
===============================================================
RET========================================================
#ret target: 55e8629dcac2
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629de35d
#call parent addr: 7f5e978a9390
#root size: 1756
===============================================================
CALL===========================================================
#now call addr: 55e8629dced3
#call parent addr: 55e8629de35d
#root size: 1757
===============================================================
RET========================================================
#ret target: 55e8629dced3
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dcfa1
#call parent addr: 55e8629de35d
#root size: 1757
===============================================================
CALL===========================================================
#now call addr: 55e8629dcaba
#call parent addr: 55e8629dcfa1
#root size: 1758
===============================================================
CALL===========================================================
#now call addr: 55e8629dc6c0
#call parent addr: 55e8629dcaba
#root size: 1759
===============================================================
CALL===========================================================
#now call addr: 55e8629dc221
#call parent addr: 55e8629dc6c0
#root size: 1760
===============================================================
RET========================================================
#ret target: 55e8629dc221
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dc25b
#call parent addr: 55e8629dc6c0
#root size: 1760
===============================================================
CALL===========================================================
#now call addr: 55e8629e89b1
#call parent addr: 55e8629dc25b
#root size: 1761
===============================================================
RET========================================================
#ret target: 55e8629e89b1
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e89e0
#call parent addr: 55e8629dc25b
#root size: 1761
===============================================================
CALL===========================================================
#now call addr: 55e8629e74d8
#call parent addr: 55e8629e89e0
#root size: 1762
===============================================================
RET========================================================
#ret target: 55e8629e74d8
#function name: __ctype_get_mb_cur_max
#func_id: 314
===========================================================
CALL===========================================================
#now call addr: 55e8629dc284
#call parent addr: 55e8629e89e0
#root size: 1762
===============================================================
RET========================================================
#ret target: 55e8629dc284
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dc989
#call parent addr: 55e8629e89e0
#root size: 1762
===============================================================
CALL===========================================================
#now call addr: 7f5e978a9390
#call parent addr: 55e8629dc989
#root size: 1763
===============================================================
CALL===========================================================
#now call addr: 7f5e978aa7ad
#call parent addr: 7f5e978a9390
#root size: 1764
===============================================================
RET========================================================
#ret target: 7f5e978aa7ad
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dcac2
#call parent addr: 7f5e978a9390
#root size: 1764
===============================================================
RET========================================================
#ret target: 55e8629dcac2
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629de35d
#call parent addr: 7f5e978a9390
#root size: 1764
===============================================================
CALL===========================================================
#now call addr: 55e8629dced3
#call parent addr: 55e8629de35d
#root size: 1765
===============================================================
RET========================================================
#ret target: 55e8629dced3
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dcfa1
#call parent addr: 55e8629de35d
#root size: 1765
===============================================================
CALL===========================================================
#now call addr: 55e8629dcaba
#call parent addr: 55e8629dcfa1
#root size: 1766
===============================================================
CALL===========================================================
#now call addr: 55e8629dc6c0
#call parent addr: 55e8629dcaba
#root size: 1767
===============================================================
CALL===========================================================
#now call addr: 55e8629dc221
#call parent addr: 55e8629dc6c0
#root size: 1768
===============================================================
RET========================================================
#ret target: 55e8629dc221
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dc25b
#call parent addr: 55e8629dc6c0
#root size: 1768
===============================================================
CALL===========================================================
#now call addr: 55e8629e89b1
#call parent addr: 55e8629dc25b
#root size: 1769
===============================================================
RET========================================================
#ret target: 55e8629e89b1
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e89e0
#call parent addr: 55e8629dc25b
#root size: 1769
===============================================================
CALL===========================================================
#now call addr: 55e8629e74d8
#call parent addr: 55e8629e89e0
#root size: 1770
===============================================================
RET========================================================
#ret target: 55e8629e74d8
#function name: __ctype_get_mb_cur_max
#func_id: 314
===========================================================
CALL===========================================================
#now call addr: 55e8629dc284
#call parent addr: 55e8629e89e0
#root size: 1770
===============================================================
RET========================================================
#ret target: 55e8629dc284
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dc989
#call parent addr: 55e8629e89e0
#root size: 1770
===============================================================
CALL===========================================================
#now call addr: 7f5e978a9390
#call parent addr: 55e8629dc989
#root size: 1771
===============================================================
CALL===========================================================
#now call addr: 7f5e978aa7ad
#call parent addr: 7f5e978a9390
#root size: 1772
===============================================================
RET========================================================
#ret target: 7f5e978aa7ad
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dcac2
#call parent addr: 7f5e978a9390
#root size: 1772
===============================================================
RET========================================================
#ret target: 55e8629dcac2
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629de35d
#call parent addr: 7f5e978a9390
#root size: 1772
===============================================================
CALL===========================================================
#now call addr: 55e8629dced3
#call parent addr: 55e8629de35d
#root size: 1773
===============================================================
RET========================================================
#ret target: 55e8629dced3
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dcfa1
#call parent addr: 55e8629de35d
#root size: 1773
===============================================================
CALL===========================================================
#now call addr: 55e8629dcaba
#call parent addr: 55e8629dcfa1
#root size: 1774
===============================================================
CALL===========================================================
#now call addr: 55e8629dc6c0
#call parent addr: 55e8629dcaba
#root size: 1775
===============================================================
CALL===========================================================
#now call addr: 55e8629dc221
#call parent addr: 55e8629dc6c0
#root size: 1776
===============================================================
RET========================================================
#ret target: 55e8629dc221
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dc25b
#call parent addr: 55e8629dc6c0
#root size: 1776
===============================================================
CALL===========================================================
#now call addr: 55e8629e89b1
#call parent addr: 55e8629dc25b
#root size: 1777
===============================================================
RET========================================================
#ret target: 55e8629e89b1
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e89e0
#call parent addr: 55e8629dc25b
#root size: 1777
===============================================================
CALL===========================================================
#now call addr: 55e8629e74d8
#call parent addr: 55e8629e89e0
#root size: 1778
===============================================================
RET========================================================
#ret target: 55e8629e74d8
#function name: __ctype_get_mb_cur_max
#func_id: 314
===========================================================
CALL===========================================================
#now call addr: 55e8629dc284
#call parent addr: 55e8629e89e0
#root size: 1778
===============================================================
RET========================================================
#ret target: 55e8629dc284
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dc989
#call parent addr: 55e8629e89e0
#root size: 1778
===============================================================
CALL===========================================================
#now call addr: 7f5e978a9390
#call parent addr: 55e8629dc989
#root size: 1779
===============================================================
CALL===========================================================
#now call addr: 7f5e978aa7ad
#call parent addr: 7f5e978a9390
#root size: 1780
===============================================================
RET========================================================
#ret target: 7f5e978aa7ad
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dcac2
#call parent addr: 7f5e978a9390
#root size: 1780
===============================================================
RET========================================================
#ret target: 55e8629dcac2
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629de35d
#call parent addr: 7f5e978a9390
#root size: 1780
===============================================================
CALL===========================================================
#now call addr: 55e8629dced3
#call parent addr: 55e8629de35d
#root size: 1781
===============================================================
RET========================================================
#ret target: 55e8629dced3
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dcfa1
#call parent addr: 55e8629de35d
#root size: 1781
===============================================================
CALL===========================================================
#now call addr: 55e8629dcaba
#call parent addr: 55e8629dcfa1
#root size: 1782
===============================================================
CALL===========================================================
#now call addr: 55e8629dc6c0
#call parent addr: 55e8629dcaba
#root size: 1783
===============================================================
CALL===========================================================
#now call addr: 55e8629dc221
#call parent addr: 55e8629dc6c0
#root size: 1784
===============================================================
RET========================================================
#ret target: 55e8629dc221
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dc25b
#call parent addr: 55e8629dc6c0
#root size: 1784
===============================================================
CALL===========================================================
#now call addr: 55e8629e89b1
#call parent addr: 55e8629dc25b
#root size: 1785
===============================================================
RET========================================================
#ret target: 55e8629e89b1
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e89e0
#call parent addr: 55e8629dc25b
#root size: 1785
===============================================================
CALL===========================================================
#now call addr: 55e8629e74d8
#call parent addr: 55e8629e89e0
#root size: 1786
===============================================================
RET========================================================
#ret target: 55e8629e74d8
#function name: __ctype_get_mb_cur_max
#func_id: 314
===========================================================
CALL===========================================================
#now call addr: 55e8629dc284
#call parent addr: 55e8629e89e0
#root size: 1786
===============================================================
RET========================================================
#ret target: 55e8629dc284
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dc989
#call parent addr: 55e8629e89e0
#root size: 1786
===============================================================
CALL===========================================================
#now call addr: 7f5e978a9390
#call parent addr: 55e8629dc989
#root size: 1787
===============================================================
CALL===========================================================
#now call addr: 7f5e978aa7ad
#call parent addr: 7f5e978a9390
#root size: 1788
===============================================================
RET========================================================
#ret target: 7f5e978aa7ad
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dcac2
#call parent addr: 7f5e978a9390
#root size: 1788
===============================================================
RET========================================================
#ret target: 55e8629dcac2
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629de35d
#call parent addr: 7f5e978a9390
#root size: 1788
===============================================================
CALL===========================================================
#now call addr: 55e8629dced3
#call parent addr: 55e8629de35d
#root size: 1789
===============================================================
RET========================================================
#ret target: 55e8629dced3
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dcfa1
#call parent addr: 55e8629de35d
#root size: 1789
===============================================================
CALL===========================================================
#now call addr: 55e8629dcaba
#call parent addr: 55e8629dcfa1
#root size: 1790
===============================================================
CALL===========================================================
#now call addr: 55e8629dc6c0
#call parent addr: 55e8629dcaba
#root size: 1791
===============================================================
CALL===========================================================
#now call addr: 55e8629dc221
#call parent addr: 55e8629dc6c0
#root size: 1792
===============================================================
RET========================================================
#ret target: 55e8629dc221
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dc25b
#call parent addr: 55e8629dc6c0
#root size: 1792
===============================================================
CALL===========================================================
#now call addr: 55e8629e89b1
#call parent addr: 55e8629dc25b
#root size: 1793
===============================================================
RET========================================================
#ret target: 55e8629e89b1
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e89e0
#call parent addr: 55e8629dc25b
#root size: 1793
===============================================================
CALL===========================================================
#now call addr: 55e8629e74d8
#call parent addr: 55e8629e89e0
#root size: 1794
===============================================================
RET========================================================
#ret target: 55e8629e74d8
#function name: __ctype_get_mb_cur_max
#func_id: 314
===========================================================
CALL===========================================================
#now call addr: 55e8629dc284
#call parent addr: 55e8629e89e0
#root size: 1794
===============================================================
RET========================================================
#ret target: 55e8629dc284
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dc989
#call parent addr: 55e8629e89e0
#root size: 1794
===============================================================
CALL===========================================================
#now call addr: 7f5e978a9390
#call parent addr: 55e8629dc989
#root size: 1795
===============================================================
CALL===========================================================
#now call addr: 7f5e978aa7ad
#call parent addr: 7f5e978a9390
#root size: 1796
===============================================================
RET========================================================
#ret target: 7f5e978aa7ad
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dcac2
#call parent addr: 7f5e978a9390
#root size: 1796
===============================================================
RET========================================================
#ret target: 55e8629dcac2
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629de35d
#call parent addr: 7f5e978a9390
#root size: 1796
===============================================================
CALL===========================================================
#now call addr: 55e8629dced3
#call parent addr: 55e8629de35d
#root size: 1797
===============================================================
RET========================================================
#ret target: 55e8629dced3
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dcfa1
#call parent addr: 55e8629de35d
#root size: 1797
===============================================================
CALL===========================================================
#now call addr: 55e8629dcaba
#call parent addr: 55e8629dcfa1
#root size: 1798
===============================================================
CALL===========================================================
#now call addr: 55e8629dc6c0
#call parent addr: 55e8629dcaba
#root size: 1799
===============================================================
CALL===========================================================
#now call addr: 55e8629dc221
#call parent addr: 55e8629dc6c0
#root size: 1800
===============================================================
RET========================================================
#ret target: 55e8629dc221
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dc25b
#call parent addr: 55e8629dc6c0
#root size: 1800
===============================================================
CALL===========================================================
#now call addr: 55e8629e89b1
#call parent addr: 55e8629dc25b
#root size: 1801
===============================================================
RET========================================================
#ret target: 55e8629e89b1
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e89e0
#call parent addr: 55e8629dc25b
#root size: 1801
===============================================================
CALL===========================================================
#now call addr: 55e8629e74d8
#call parent addr: 55e8629e89e0
#root size: 1802
===============================================================
RET========================================================
#ret target: 55e8629e74d8
#function name: __ctype_get_mb_cur_max
#func_id: 314
===========================================================
CALL===========================================================
#now call addr: 55e8629dc284
#call parent addr: 55e8629e89e0
#root size: 1802
===============================================================
RET========================================================
#ret target: 55e8629dc284
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dc989
#call parent addr: 55e8629e89e0
#root size: 1802
===============================================================
CALL===========================================================
#now call addr: 7f5e978a9390
#call parent addr: 55e8629dc989
#root size: 1803
===============================================================
CALL===========================================================
#now call addr: 7f5e978aa7ad
#call parent addr: 7f5e978a9390
#root size: 1804
===============================================================
RET========================================================
#ret target: 7f5e978aa7ad
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dcac2
#call parent addr: 7f5e978a9390
#root size: 1804
===============================================================
RET========================================================
#ret target: 55e8629dcac2
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629de35d
#call parent addr: 7f5e978a9390
#root size: 1804
===============================================================
CALL===========================================================
#now call addr: 55e8629dced3
#call parent addr: 55e8629de35d
#root size: 1805
===============================================================
RET========================================================
#ret target: 55e8629dced3
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dcfa1
#call parent addr: 55e8629de35d
#root size: 1805
===============================================================
CALL===========================================================
#now call addr: 55e8629dcaba
#call parent addr: 55e8629dcfa1
#root size: 1806
===============================================================
CALL===========================================================
#now call addr: 55e8629dc6c0
#call parent addr: 55e8629dcaba
#root size: 1807
===============================================================
CALL===========================================================
#now call addr: 55e8629dc221
#call parent addr: 55e8629dc6c0
#root size: 1808
===============================================================
RET========================================================
#ret target: 55e8629dc221
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dc25b
#call parent addr: 55e8629dc6c0
#root size: 1808
===============================================================
CALL===========================================================
#now call addr: 55e8629e89b1
#call parent addr: 55e8629dc25b
#root size: 1809
===============================================================
RET========================================================
#ret target: 55e8629e89b1
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e89e0
#call parent addr: 55e8629dc25b
#root size: 1809
===============================================================
CALL===========================================================
#now call addr: 55e8629e74d8
#call parent addr: 55e8629e89e0
#root size: 1810
===============================================================
RET========================================================
#ret target: 55e8629e74d8
#function name: __ctype_get_mb_cur_max
#func_id: 314
===========================================================
CALL===========================================================
#now call addr: 55e8629dc284
#call parent addr: 55e8629e89e0
#root size: 1810
===============================================================
RET========================================================
#ret target: 55e8629dc284
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dc989
#call parent addr: 55e8629e89e0
#root size: 1810
===============================================================
CALL===========================================================
#now call addr: 7f5e978a9390
#call parent addr: 55e8629dc989
#root size: 1811
===============================================================
CALL===========================================================
#now call addr: 7f5e978aa7ad
#call parent addr: 7f5e978a9390
#root size: 1812
===============================================================
RET========================================================
#ret target: 7f5e978aa7ad
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dcac2
#call parent addr: 7f5e978a9390
#root size: 1812
===============================================================
RET========================================================
#ret target: 55e8629dcac2
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629de35d
#call parent addr: 7f5e978a9390
#root size: 1812
===============================================================
CALL===========================================================
#now call addr: 55e8629dced3
#call parent addr: 55e8629de35d
#root size: 1813
===============================================================
RET========================================================
#ret target: 55e8629dced3
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dcfa1
#call parent addr: 55e8629de35d
#root size: 1813
===============================================================
CALL===========================================================
#now call addr: 55e8629dcaba
#call parent addr: 55e8629dcfa1
#root size: 1814
===============================================================
CALL===========================================================
#now call addr: 55e8629dc6c0
#call parent addr: 55e8629dcaba
#root size: 1815
===============================================================
CALL===========================================================
#now call addr: 55e8629dc221
#call parent addr: 55e8629dc6c0
#root size: 1816
===============================================================
RET========================================================
#ret target: 55e8629dc221
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dc25b
#call parent addr: 55e8629dc6c0
#root size: 1816
===============================================================
CALL===========================================================
#now call addr: 55e8629e89b1
#call parent addr: 55e8629dc25b
#root size: 1817
===============================================================
RET========================================================
#ret target: 55e8629e89b1
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e89e0
#call parent addr: 55e8629dc25b
#root size: 1817
===============================================================
CALL===========================================================
#now call addr: 55e8629e74d8
#call parent addr: 55e8629e89e0
#root size: 1818
===============================================================
RET========================================================
#ret target: 55e8629e74d8
#function name: __ctype_get_mb_cur_max
#func_id: 314
===========================================================
CALL===========================================================
#now call addr: 55e8629dc284
#call parent addr: 55e8629e89e0
#root size: 1818
===============================================================
RET========================================================
#ret target: 55e8629dc284
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dc989
#call parent addr: 55e8629e89e0
#root size: 1818
===============================================================
CALL===========================================================
#now call addr: 7f5e978a9390
#call parent addr: 55e8629dc989
#root size: 1819
===============================================================
CALL===========================================================
#now call addr: 7f5e978aa7ad
#call parent addr: 7f5e978a9390
#root size: 1820
===============================================================
RET========================================================
#ret target: 7f5e978aa7ad
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dcac2
#call parent addr: 7f5e978a9390
#root size: 1820
===============================================================
RET========================================================
#ret target: 55e8629dcac2
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629de35d
#call parent addr: 7f5e978a9390
#root size: 1820
===============================================================
CALL===========================================================
#now call addr: 55e8629dced3
#call parent addr: 55e8629de35d
#root size: 1821
===============================================================
RET========================================================
#ret target: 55e8629dced3
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dcfa1
#call parent addr: 55e8629de35d
#root size: 1821
===============================================================
CALL===========================================================
#now call addr: 55e8629dcaba
#call parent addr: 55e8629dcfa1
#root size: 1822
===============================================================
CALL===========================================================
#now call addr: 55e8629dc6c0
#call parent addr: 55e8629dcaba
#root size: 1823
===============================================================
CALL===========================================================
#now call addr: 55e8629dc221
#call parent addr: 55e8629dc6c0
#root size: 1824
===============================================================
RET========================================================
#ret target: 55e8629dc221
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dc25b
#call parent addr: 55e8629dc6c0
#root size: 1824
===============================================================
CALL===========================================================
#now call addr: 55e8629e89b1
#call parent addr: 55e8629dc25b
#root size: 1825
===============================================================
RET========================================================
#ret target: 55e8629e89b1
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e89e0
#call parent addr: 55e8629dc25b
#root size: 1825
===============================================================
CALL===========================================================
#now call addr: 55e8629e74d8
#call parent addr: 55e8629e89e0
#root size: 1826
===============================================================
RET========================================================
#ret target: 55e8629e74d8
#function name: __ctype_get_mb_cur_max
#func_id: 314
===========================================================
CALL===========================================================
#now call addr: 55e8629dc284
#call parent addr: 55e8629e89e0
#root size: 1826
===============================================================
RET========================================================
#ret target: 55e8629dc284
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dc989
#call parent addr: 55e8629e89e0
#root size: 1826
===============================================================
CALL===========================================================
#now call addr: 7f5e978a9390
#call parent addr: 55e8629dc989
#root size: 1827
===============================================================
CALL===========================================================
#now call addr: 7f5e978aa7ad
#call parent addr: 7f5e978a9390
#root size: 1828
===============================================================
RET========================================================
#ret target: 7f5e978aa7ad
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dcac2
#call parent addr: 7f5e978a9390
#root size: 1828
===============================================================
RET========================================================
#ret target: 55e8629dcac2
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629de35d
#call parent addr: 7f5e978a9390
#root size: 1828
===============================================================
CALL===========================================================
#now call addr: 55e8629dced3
#call parent addr: 55e8629de35d
#root size: 1829
===============================================================
RET========================================================
#ret target: 55e8629dced3
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dcfa1
#call parent addr: 55e8629de35d
#root size: 1829
===============================================================
CALL===========================================================
#now call addr: 55e8629dcaba
#call parent addr: 55e8629dcfa1
#root size: 1830
===============================================================
CALL===========================================================
#now call addr: 55e8629dc6c0
#call parent addr: 55e8629dcaba
#root size: 1831
===============================================================
CALL===========================================================
#now call addr: 55e8629dc221
#call parent addr: 55e8629dc6c0
#root size: 1832
===============================================================
RET========================================================
#ret target: 55e8629dc221
#function name: NULL
#func_id: 5
===========================================================
CALL===========================================================
#now call addr: 55e8629dc25b
#call parent addr: 55e8629dc6c0
#root size: 1832
===============================================================
CALL===========================================================
#now call addr: 55e8629e89b1
#call parent addr: 55e8629dc25b
#root size: 1833
===============================================================
RET========================================================
#ret target: 55e8629e89b1
#function name: __errno_location
#func_id: 302
===========================================================
CALL===========================================================
#now call addr: 55e8629e89e0
#call parent addr: 55e8629dc25b
#root size: 1833
===============================================================
CALL===========================================================
#now call addr: 55e8629e74d8
#call parent addr: 55e8629e89e0
#root size: 1834
===============================================================
RET========================================================
#ret target: 55e8629e74d8
#function name: __ctype_get_mb_cur_max
#func_id: 314
===========================================================
[ cmp qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov dword ptr [rsp  +  [ displacement ] ], r10d ]
[ mov qword ptr [rsp  +  [ displacement ] ], r11 ]
[ mov byte ptr [rsp  +  [ displacement ] ], r8b ]
[ mov byte ptr [rsp  +  [ displacement ] ], r9b ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629e7833
#call parent addr: 55e8629e89e0
#root size: 1834
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ add rax, qword ptr fs:[ [ addr ]  ]
[ ret  ]
RET========================================================
#ret target: 55e8629e7833
#function name: __ctype_b_loc
#func_id: 355
===========================================================
[ movzx r9d, byte ptr [rsp  +  [ displacement ] ] ]
[ movzx r8d, byte ptr [rsp  +  [ displacement ] ] ]
[ mov edi,  [ argument ]  ]
[ mov r13, rax ]
[ movzx eax, bpl ]
[ mov r11, qword ptr [rsp  +  [ displacement ] ] ]
[ mov r10d, dword ptr [rsp  +  [ displacement ] ] ]
[ mov rdx, qword ptr [r13] ]
[ movzx eax, word ptr [rdx + rax * 2] ]
[ and ax,  [ argument ]  ]
[ setnz r13b ]
[ setz dl ]
[ and dl, byte ptr [rsp  +  [ displacement ] ] ]
[ test dl, dl ]
[ jnz  [ addr ]  ]
[ nop dword ptr [rax], eax ]
[ cmp r10d,  [ argument ]  ]
[ setz al ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 55e8629e7833
#call parent addr: 55e8629e89e0
#root size: 1834
===============================================================
RET========================================================
#ret target: 55e8629e7833
#function name: __ctype_b_loc
#func_id: 355
===========================================================
CALL===========================================================
#now call addr: 55e8629e7833
#call parent addr: 55e8629e89e0
#root size: 1834
===============================================================
RET========================================================
#ret target: 55e8629e7833
#function name: __ctype_b_loc
#func_id: 355
===========================================================
CALL===========================================================
#now call addr: 55e8629dc284
#call parent addr: 55e8629e89e0
#root size: 1834
===============================================================
RET========================================================
#ret target: 55e8629dc284
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
CALL===========================================================
#now call addr: 55e8629dc989
#call parent addr: 55e8629e89e0
#root size: 1834
===============================================================
CALL===========================================================
#now call addr: 7f5e978a9390
#call parent addr: 55e8629dc989
#root size: 1835
===============================================================
CALL===========================================================
#now call addr: 7f5e978aa7ad
#call parent addr: 7f5e978a9390
#root size: 1836
===============================================================
RET========================================================
#ret target: 7f5e978aa7ad
#function name: __nss_database_lookup
#func_id: 2101
===========================================================
[ add r12, r13 ]
[ sub r14, r13 ]
[ mov qword ptr [rbp  +  [ displacement ] ], rax ]
[ add r15, r14 ]
[ jnz  [ addr ]  ]
[ sub rbx, r14 ]
[ mov r13, rbx ]
[ add rsp,  [ argument ]  ]
[ mov rax, r13 ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
CALL===========================================================
#now call addr: 55e8629dcac2
#call parent addr: 7f5e978a9390
#root size: 1836
===============================================================
RET========================================================
#ret target: 55e8629dcac2
#function name: NULL
#func_id: 5
===========================================================
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ mov rdi, qword ptr [rbp] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629d9b61
#call parent addr: 7f5e978a9390
#root size: 1836
===============================================================
RET========================================================
#ret target: 55e8629d9b61
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
[ mov rdi, qword ptr [rbp  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629d9b6a
#call parent addr: 7f5e978a9390
#root size: 1836
===============================================================
RET========================================================
#ret target: 55e8629d9b6a
#function name: cfree
#func_id: 832
===========================================================
[ mov rdi, rbp ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629d9b72
#call parent addr: 7f5e978a9390
#root size: 1836
===============================================================
RET========================================================
#ret target: 55e8629d9b72
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
[ mov byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov rbp, qword ptr [rip  +  [ displacement ] ] ]
[ test rbp, rbp ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rbp  +  [ displacement ] ] ]
[ mov r8, qword ptr [rip  +  [ displacement ] ] ]
[ mov rdi, qword ptr [rbp] ]
[ mov qword ptr [rip  +  [ displacement ] ], rax ]
[ test r8, r8 ]
[ jz  [ addr ]  ]
[ test rdi, rdi ]
[ jnz  [ addr ]  ]
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rbp, qword ptr [rip  +  [ displacement ] ] ]
[ test rbp, rbp ]
[ jz  [ addr ]  ]
[ mov rdi, rbp ]
[ call  [ addr.func ]  ]
[ mov rbx, qword ptr [rsp  +  [ displacement ] ] ]
[ xor rbx, qword ptr fs:[ [ displacement ] ] ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ mov edi, eax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9783f0b5
#call parent addr: 7f5e978a9390
#root size: 1836
===============================================================
[ nop edx, edi ]
[ push rax ]
[ pop rax ]
[ mov ecx,  [ argument ]  ]
[ mov edx,  [ argument ]  ]
[ lea rsi, ptr [rip  +  [ displacement ] ] ]
[ sub rsp,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e97861bdb
#call parent addr: 7f5e9783f0b5
#root size: 1837
===============================================================
[ nop edx, edi ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ push rbp ]
[ mov ebp, edi ]
[ push rbx ]
[ mov rbx, rsi ]
[ sub rsp,  [ argument ]  ]
[ mov dword ptr [rsp  +  [ displacement ] ], edx ]
[ test cl, cl ]
[ jnz  [ addr ]  ]
[ lea r14, ptr [rip  +  [ displacement ] ] ]
[ xor r12d, r12d ]
[ nop dword ptr [rax], eax ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ mov edx,  [ argument ]  ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ cmpxchg dword ptr [r14], edx ]
[ mov r15, qword ptr [rbx] ]
[ test r15, r15 ]
[ jnz  [ addr ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e97861b88
#call parent addr: 7f5e97861bdb
#root size: 1838
===============================================================
[ nop edx, edi ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov rbx, qword ptr [rip  +  [ displacement ] ] ]
[ mov rbp, qword ptr fs:[rbx] ]
[ test rbp, rbp ]
[ jz  [ addr ]  ]
[ nop word ptr [rax + rax * 1], ax ]
[ mov rdx, qword ptr [rbp  +  [ displacement ] ] ]
[ mov rax, qword ptr [rbp] ]
[ ror rax,  [ argument ]  ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr fs:[rbx], rdx ]
[ mov rdi, qword ptr [rbp  +  [ displacement ] ] ]
[ call rax ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ ret  ]
RET========================================================
#ret target: 7f5e97861b88
#function name: __call_tls_dtors
#func_id: 460
===========================================================
[ jmp  [ addr ]  ]
[ lea r14, ptr [rip  +  [ displacement ] ] ]
[ xor r12d, r12d ]
[ nop dword ptr [rax], eax ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ mov edx,  [ argument ]  ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ cmpxchg dword ptr [r14], edx ]
[ mov r15, qword ptr [rbx] ]
[ test r15, r15 ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ lea r9, ptr [rax- [ displacement ] ] ]
[ mov r13, qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [r15  +  [ displacement ] ], r9 ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ sub dword ptr [r14],  [ argument ]  ]
[ mov rax, r9 ]
[ shl rax,  [ argument ]  ]
[ add rax, r15 ]
[ mov rdx, qword ptr [rax  +  [ displacement ] ] ]
[ cmp rdx,  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp rdx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rdx, qword ptr [rax  +  [ displacement ] ] ]
[ mov rdi, qword ptr [rax  +  [ displacement ] ] ]
[ mov qword ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ mov esi, ebp ]
[ ror rdx,  [ argument ]  ]
[ xor rdx, qword ptr fs:[ [ displacement ] ] ]
[ call rdx ]
CALL===========================================================
#now call addr: 7f5e97861a25
#call parent addr: 7f5e97861bdb
#root size: 1838
===============================================================
[ nop edx, edi ]
[ push r12 ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov rdi, qword ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629e1ff2
#call parent addr: 7f5e97861a25
#root size: 1839
===============================================================
[ nop edx, edi ]
[ push r12 ]
[ push rbp ]
[ mov rbp, rdi ]
[ push rbx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629eb27b
#call parent addr: 55e8629e1ff2
#root size: 1840
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ mov eax, dword ptr [rdi  +  [ displacement ] ] ]
[ test eax, eax ]
[ jle  [ addr ]  ]
[ mov rdx, qword ptr [rdi  +  [ displacement ] ] ]
[ mov rax, qword ptr [rdx  +  [ displacement ] ] ]
[ sub rax, qword ptr [rdx  +  [ displacement ] ] ]
[ sar rax,  [ argument ]  ]
[ ret  ]
[ mov rax, qword ptr [rdi  +  [ displacement ] ] ]
[ sub rax, qword ptr [rdi  +  [ displacement ] ] ]
[ ret  ]
RET========================================================
#ret target: 55e8629eb27b
#function name: __fpending
#func_id: 714
===========================================================
[ mov ebx, dword ptr [rbp] ]
[ mov rdi, rbp ]
[ mov r12, rax ]
[ and ebx,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629eb28c
#call parent addr: 55e8629e1ff2
#root size: 1840
===============================================================
[ nop edx, edi ]
[ push r12 ]
[ push rbp ]
[ mov rbp, rdi ]
[ push rbx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629eb38b
#call parent addr: 55e8629eb28c
#root size: 1841
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ test dword ptr [rdi],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [rdi  +  [ displacement ] ] ]
[ test eax, eax ]
[ js  [ addr ]  ]
[ ret  ]
RET========================================================
#ret target: 55e8629eb38b
#function name: fileno
#func_id: 685
===========================================================
[ mov rdi, rbp ]
[ test eax, eax ]
[ js  [ addr ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629eb397
#call parent addr: 55e8629eb28c
#root size: 1841
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ mov eax, dword ptr [rdi] ]
[ mov r8d, eax ]
[ and r8d,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ test eax,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ xor r8d, r8d ]
[ cmp qword ptr [rdi  +  [ displacement ] ],  [ argument ]  ]
[ setnz r8b ]
[ mov eax, r8d ]
[ ret  ]
[ mov eax, r8d ]
[ ret  ]
RET========================================================
#ret target: 55e8629eb397
#function name: __freading
#func_id: 708
===========================================================
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov rdi, rbp ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629eb3a3
#call parent addr: 55e8629eb28c
#root size: 1841
===============================================================
[ nop edx, edi ]
[ push rbp ]
[ mov rbp, rdi ]
[ test rdi, rdi ]
[ jz  [ addr ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629eb41d
#call parent addr: 55e8629eb3a3
#root size: 1842
===============================================================
RET========================================================
#ret target: 55e8629eb41d
#function name: __freading
#func_id: 708
===========================================================
[ test eax, eax ]
[ jz  [ addr ]  ]
[ test dword ptr [rbp],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rdi, rbp ]
[ pop rbp ]
[ jmp  [ addr ]  ]
[ mov rdi, rbp ]
[ pop rbp ]
[ jmp  [ addr ]  ]
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ test rdi, rdi ]
[ jz  [ addr ]  ]
[ push rbp ]
[ push rbx ]
[ mov rbx, rdi ]
[ sub rsp,  [ argument ]  ]
[ mov edx, dword ptr [rdi] ]
[ and edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rdi, qword ptr [rdi  +  [ displacement ] ] ]
[ mov rbp, qword ptr fs:[ [ displacement ] ] ]
[ cmp qword ptr [rdi  +  [ displacement ] ], rbp ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov edx,  [ argument ]  ]
[ cmpxchg dword ptr [rdi], edx ]
[ mov rdi, qword ptr [rbx  +  [ displacement ] ] ]
[ mov qword ptr [rdi  +  [ displacement ] ], rbp ]
[ add dword ptr [rdi  +  [ displacement ] ],  [ argument ]  ]
[ mov rbp, qword ptr [rbx  +  [ displacement ] ] ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ sub rax, rdx ]
[ mov rsi, rbp ]
[ sub rsi, rdx ]
[ cmp rax, rsi ]
[ jbe  [ addr ]  ]
[ mov rdi, rbx ]
[ call qword ptr [rbp  +  [ displacement ] ] ]
CALL===========================================================
#now call addr: 7f5e9789d543
#call parent addr: 55e8629eb3a3
#root size: 1842
===============================================================
[ nop edx, edi ]
[ push rbp ]
[ push rbx ]
[ mov rbx, rdi ]
[ sub rsp,  [ argument ]  ]
[ mov rdx, qword ptr [rdi  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rdi  +  [ displacement ] ] ]
[ cmp rdx, rsi ]
[ jbe  [ addr ]  ]
[ mov eax, dword ptr [rdi  +  [ displacement ] ] ]
[ test eax, eax ]
[ jle  [ addr ]  ]
[ mov rax, qword ptr [rdi  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rax  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rax  +  [ displacement ] ] ]
[ sub rdx, rsi ]
[ sar rdx,  [ argument ]  ]
[ call  [ addr.func ]  ]
[ sub rdx, rsi ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978a95f3
#call parent addr: 7f5e9789d543
#root size: 1843
===============================================================
[ push r15 ]
[ lea r15, ptr [rip  +  [ displacement ] ] ]
[ push r14 ]
[ push r13 ]
[ lea r13, ptr [rip  +  [ displacement ] ] ]
[ push r12 ]
[ sub r13, r15 ]
[ mov r12, rsi ]
[ push rbp ]
[ mov rbp, rdx ]
[ push rbx ]
[ mov rbx, rdi ]
[ sub rsp,  [ argument ]  ]
[ mov r14, qword ptr [rdi  +  [ displacement ] ] ]
[ mov rax, r14 ]
[ sub rax, r15 ]
[ test dword ptr [rdi],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rdx, qword ptr [rdi  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rdi  +  [ displacement ] ] ]
[ cmp rdx, rsi ]
[ jz  [ addr ]  ]
[ cmp r13, rax ]
[ jbe  [ addr ]  ]
[ cmp r13, rax ]
[ jbe  [ addr ]  ]
[ mov rdx, rbp ]
[ mov rsi, r12 ]
[ mov rdi, rbx ]
[ call qword ptr [r14  +  [ displacement ] ] ]
CALL===========================================================
#now call addr: 7f5e978abacd
#call parent addr: 7f5e978a95f3
#root size: 1844
===============================================================
[ nop edx, edi ]
[ push r13 ]
[ mov r13, rdi ]
[ push r12 ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ test rdx, rdx ]
[ jle  [ addr ]  ]
[ mov rbp, rsi ]
[ mov r12, rdx ]
[ mov rbx, rdx ]
[ jmp  [ addr ]  ]
[ mov edi, dword ptr [r13  +  [ displacement ] ] ]
[ mov rdx, rbx ]
[ mov rsi, rbp ]
[ test byte ptr [r13  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ call  [ addr.func ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978aa008
#call parent addr: 7f5e978abacd
#root size: 1845
===============================================================
[ nop edx, edi ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov eax,  [ argument ]  ]
[ syscall  ]
[ cmp rax,  [ addr ]  ]
[ jnbe  [ addr ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5e978aa008
#function name: write
#func_id: 1220
===========================================================
[ test rax, rax ]
[ js  [ addr ]  ]
[ sub rbx, rax ]
[ add rbp, rax ]
[ test rbx, rbx ]
[ jle  [ addr ]  ]
[ mov edi, dword ptr [r13  +  [ displacement ] ] ]
[ mov rdx, rbx ]
[ mov rsi, rbp ]
[ test byte ptr [r13  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rax, r12 ]
[ sub rax, rbx ]
[ jmp  [ addr ]  ]
[ mov rdx, qword ptr [r13  +  [ displacement ] ] ]
[ test rdx, rdx ]
[ js  [ addr ]  ]
[ add rdx, rax ]
[ mov qword ptr [r13  +  [ displacement ] ], rdx ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ ret  ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ ret  ]
[ mov r13, rax ]
[ movzx eax, word ptr [rbx  +  [ displacement ] ] ]
[ test r13, r13 ]
[ jz  [ addr ]  ]
[ test ax, ax ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [rbx  +  [ displacement ] ] ]
[ mov edx, dword ptr [rbx  +  [ displacement ] ] ]
[ mov qword ptr [rbx  +  [ displacement ] ], rax ]
[ mov qword ptr [rbx  +  [ displacement ] ], rax ]
[ mov qword ptr [rbx  +  [ displacement ] ], rax ]
[ mov qword ptr [rbx  +  [ displacement ] ], rax ]
[ mov qword ptr [rbx  +  [ displacement ] ], rax ]
[ test edx, edx ]
[ jle  [ addr ]  ]
[ test dword ptr [rbx],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [rbx  +  [ displacement ] ] ]
[ mov qword ptr [rbx  +  [ displacement ] ], rax ]
[ xor eax, eax ]
[ cmp rbp, r13 ]
[ setnz al ]
[ neg eax ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ test eax, eax ]
[ setnz al ]
[ jmp  [ addr ]  ]
[ test al, al ]
[ jnz  [ addr ]  ]
[ mov rsi, qword ptr [rbx  +  [ displacement ] ] ]
[ sub rsi, qword ptr [rbx  +  [ displacement ] ] ]
[ jz  [ addr ]  ]
[ mov rbp, qword ptr [rbx  +  [ displacement ] ] ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ sub rax, rdx ]
[ mov rcx, rbp ]
[ sub rcx, rdx ]
[ cmp rax, rcx ]
[ jbe  [ addr ]  ]
[ mov qword ptr [rbx  +  [ displacement ] ],  [ addr ]  ]
[ xor eax, eax ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ ret  ]
[ xor r8d, r8d ]
[ test eax, eax ]
[ setnz r8b ]
[ neg r8d ]
[ test dword ptr [rbx],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rdi, qword ptr [rbx  +  [ displacement ] ] ]
[ mov eax, dword ptr [rdi  +  [ displacement ] ] ]
[ sub eax,  [ argument ]  ]
[ mov dword ptr [rdi  +  [ displacement ] ], eax ]
[ jnz  [ addr ]  ]
[ mov qword ptr [rdi  +  [ displacement ] ],  [ argument ]  ]
[ mov edx, dword ptr fs:[ [ displacement ] ] ]
[ test edx, edx ]
[ jnz  [ addr ]  ]
[ sub dword ptr [rdi],  [ argument ]  ]
[ add rsp,  [ argument ]  ]
[ mov eax, r8d ]
[ pop rbx ]
[ pop rbp ]
[ ret  ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ call  [ addr.func ]  ]
[ mov rdi, rbp ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ jmp  [ addr ]  ]
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ push r12 ]
[ push rbp ]
[ mov rbp, rdi ]
[ push rbx ]
[ mov eax, dword ptr [rdi] ]
[ test ah,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov edx, eax ]
[ and edx,  [ argument ]  ]
[ jz  [ addr ]  ]
[ shl eax,  [ argument ]  ]
[ sar eax,  [ argument ]  ]
[ mov r12d, eax ]
[ test edx, edx ]
[ jnz  [ addr ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9789d050
#call parent addr: 7f5e978abacd
#root size: 1845
===============================================================
CALL===========================================================
#now call addr: 7f5e978ac259
#call parent addr: 7f5e9789d050
#root size: 1846
===============================================================
RET========================================================
#ret target: 7f5e978ac259
#function name: __pthread_cleanup_push_defer
#func_id: 2383
===========================================================
[ mov rdi, qword ptr [rbx  +  [ displacement ] ] ]
[ mov r12, qword ptr fs:[ [ displacement ] ] ]
[ cmp r12, qword ptr [rdi  +  [ displacement ] ] ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ mov edx,  [ argument ]  ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ cmpxchg dword ptr [rdi], edx ]
[ mov esi, dword ptr [rbx] ]
[ mov rdi, qword ptr [rbx  +  [ displacement ] ] ]
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ mov r8d, esi ]
[ add dword ptr [rdi  +  [ displacement ] ],  [ argument ]  ]
[ mov qword ptr [rdi  +  [ displacement ] ], r12 ]
[ and r8d,  [ argument ]  ]
[ test rcx, rcx ]
[ jz  [ addr ]  ]
[ test rdx, rdx ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ cmp rbx, rdx ]
[ jz  [ addr ]  ]
[ mov rcx, rdx ]
[ mov rdx, qword ptr [rdx  +  [ displacement ] ] ]
[ test rdx, rdx ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [rbx  +  [ displacement ] ] ]
[ and sil,  [ argument ]  ]
[ add rcx,  [ argument ]  ]
[ mov qword ptr [rcx], rax ]
[ mov dword ptr [rbx], esi ]
[ test r8d, r8d ]
[ jz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ mov rdi, qword ptr [rbx  +  [ displacement ] ] ]
[ mov eax, dword ptr [rdi  +  [ displacement ] ] ]
[ sub eax,  [ argument ]  ]
[ mov dword ptr [rdi  +  [ displacement ] ], eax ]
[ mov edx, dword ptr [rip  +  [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov qword ptr [rdi  +  [ displacement ] ],  [ argument ]  ]
[ mov edx, dword ptr fs:[ [ displacement ] ] ]
[ test edx, edx ]
[ jnz  [ addr ]  ]
[ sub dword ptr [rdi],  [ argument ]  ]
[ mov edx, dword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ sub edx,  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], edx ]
[ jnz  [ addr ]  ]
[ mov qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ sub dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ test ebp, ebp ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov rdi, rsp ]
[ xor esi, esi ]
[ ror rax,  [ argument ]  ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ call rax ]
CALL===========================================================
#now call addr: 7f5e978ac3c2
#call parent addr: 7f5e9789d050
#root size: 1846
===============================================================
RET========================================================
#ret target: 7f5e978ac3c2
#function name: _pthread_cleanup_pop_restore
#func_id: 2384
===========================================================
[ mov edx,  [ argument ]  ]
[ cmpxchg dword ptr [rdi], edx ]
[ mov rdi, qword ptr [rbp  +  [ displacement ] ] ]
[ mov eax, dword ptr [rbp] ]
[ mov qword ptr [rdi  +  [ displacement ] ], rbx ]
[ add dword ptr [rdi  +  [ displacement ] ],  [ argument ]  ]
[ mov edx, eax ]
[ and edx,  [ argument ]  ]
[ test ah,  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov rdi, rbp ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9789d0b1
#call parent addr: 7f5e9789d050
#root size: 1846
===============================================================
[ mov edx, dword ptr [rdi  +  [ displacement ] ] ]
[ test edx, edx ]
[ jle  [ addr ]  ]
[ mov rax, qword ptr [rdi  +  [ displacement ] ] ]
[ mov rsi, qword ptr [rax  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rax  +  [ displacement ] ] ]
[ sub rdx, rsi ]
[ sar rdx,  [ argument ]  ]
[ call  [ addr.func ]  ]
[ mov rsi, qword ptr [rdi  +  [ displacement ] ] ]
[ mov rdx, qword ptr [rdi  +  [ displacement ] ] ]
[ sub rdx, rsi ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978ab0b3
#call parent addr: 7f5e9789d0b1
#root size: 1847
===============================================================
RET========================================================
#ret target: 7f5e978ab0b3
#function name: _IO_do_write
#func_id: 748
===========================================================
[ mov ebp, eax ]
[ jmp  [ addr ]  ]
[ mov rdi, rbx ]
[ xor r12d, r12d ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978aafa3
#call parent addr: 7f5e9789d0b1
#root size: 1847
===============================================================
RET========================================================
#ret target: 7f5e978aafa3
#function name: _IO_unsave_markers
#func_id: 778
===========================================================
CALL===========================================================
#now call addr: 7f5e978aafd8
#call parent addr: 7f5e9789d0b1
#root size: 1847
===============================================================
RET========================================================
#ret target: 7f5e978aafd8
#function name: __close_nocancel
#func_id: 1275
===========================================================
CALL===========================================================
#now call addr: 7f5e978ab030
#call parent addr: 7f5e9789d0b1
#root size: 1847
===============================================================
CALL===========================================================
#now call addr: 7f5e978acff0
#call parent addr: 7f5e978ab030
#root size: 1848
===============================================================
[ mov rdi, r13 ]
[ add rbx, r14 ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978b2006
#call parent addr: 7f5e978acff0
#root size: 1849
===============================================================
[ add rsp,  [ argument ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5e978b2006
#function name: pthread_attr_setschedparam
#func_id: 830
===========================================================
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [rbp  +  [ displacement ] ] ]
[ lea rdx, ptr [rbp  +  [ displacement ] ] ]
[ cmp qword ptr [rax  +  [ displacement ] ], rdx ]
[ jnz  [ addr ]  ]
[ movq xmm0, rax ]
[ movq xmm1, rdx ]
[ punpcklqdq xmm0, xmm1 ]
[ movups xmmword ptr [r12  +  [ displacement ] ], xmm0 ]
[ cmp rbx,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ mov qword ptr [rbp  +  [ displacement ] ], r12 ]
[ mov qword ptr [rax  +  [ displacement ] ], r12 ]
[ mov rax, rbx ]
[ or rax,  [ argument ]  ]
[ mov qword ptr [r12  +  [ displacement ] ], rax ]
[ mov qword ptr [r12 + rbx * 1], rbx ]
[ cmp rbx,  [ argument ]  ]
[ jnbe  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5e978ab048
#call parent addr: 7f5e978acff0
#root size: 1849
===============================================================
RET========================================================
#ret target: 7f5e978ab048
#function name: _IO_un_link
#func_id: 751
===========================================================
[ mov qword ptr [rdi  +  [ displacement ] ],  [ argument ]  ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ sub dword ptr [rdi],  [ argument ]  ]
[ jmp  [ addr ]  ]
[ mov rbx, qword ptr [rbp  +  [ displacement ] ] ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ sub rax, rdx ]
[ mov rcx, rbx ]
[ sub rcx, rdx ]
[ cmp rax, rcx ]
[ jbe  [ addr ]  ]
[ xor esi, esi ]
[ mov rdi, rbp ]
[ call qword ptr [rbx  +  [ displacement ] ] ]
CALL===========================================================
#now call addr: 7f5e9789cfbe
#call parent addr: 7f5e978acff0
#root size: 1849
===============================================================
RET========================================================
#ret target: 7f5e9789cfbe
#function name: _IO_default_finish
#func_id: 767
===========================================================
[ mov eax, r12d ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ ret  ]
[ test ebx, ebx ]
[ jnz  [ addr ]  ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ test r12, r12 ]
[ jnz  [ addr ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ ret  ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ call  [ addr.func ]  ]
[ mov rdi, qword ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629e2018
#call parent addr: 7f5e978acff0
#root size: 1849
===============================================================
CALL===========================================================
#now call addr: 55e8629eb27b
#call parent addr: 55e8629e2018
#root size: 1850
===============================================================
RET========================================================
#ret target: 55e8629eb27b
#function name: __fpending
#func_id: 714
===========================================================
CALL===========================================================
#now call addr: 55e8629eb28c
#call parent addr: 55e8629e2018
#root size: 1850
===============================================================
CALL===========================================================
#now call addr: 55e8629eb38b
#call parent addr: 55e8629eb28c
#root size: 1851
===============================================================
RET========================================================
#ret target: 55e8629eb38b
#function name: fileno
#func_id: 685
===========================================================
CALL===========================================================
#now call addr: 55e8629eb397
#call parent addr: 55e8629eb28c
#root size: 1851
===============================================================
RET========================================================
#ret target: 55e8629eb397
#function name: __freading
#func_id: 708
===========================================================
CALL===========================================================
#now call addr: 55e8629eb3a3
#call parent addr: 55e8629eb28c
#root size: 1851
===============================================================
CALL===========================================================
#now call addr: 55e8629eb41d
#call parent addr: 55e8629eb3a3
#root size: 1852
===============================================================
RET========================================================
#ret target: 55e8629eb41d
#function name: __freading
#func_id: 708
===========================================================
CALL===========================================================
#now call addr: 7f5e9789d543
#call parent addr: 55e8629eb3a3
#root size: 1852
===============================================================
[ mov rsi, qword ptr [rbx  +  [ displacement ] ] ]
[ sub rsi, qword ptr [rbx  +  [ displacement ] ] ]
[ jz  [ addr ]  ]
[ mov rbp, qword ptr [rbx  +  [ displacement ] ] ]
[ lea rdx, ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ sub rax, rdx ]
[ mov rcx, rbp ]
[ sub rcx, rdx ]
[ cmp rax, rcx ]
[ jbe  [ addr ]  ]
[ mov edx,  [ argument ]  ]
[ mov rdi, rbx ]
[ call qword ptr [rbp  +  [ displacement ] ] ]
RET========================================================
#ret target: 7f5e9789d543
#function name: _IO_file_sync
#func_id: 733
===========================================================
CALL===========================================================
#now call addr: 7f5e9789d050
#call parent addr: 55e8629eb3a3
#root size: 1852
===============================================================
CALL===========================================================
#now call addr: 7f5e978ac259
#call parent addr: 7f5e9789d050
#root size: 1853
===============================================================
RET========================================================
#ret target: 7f5e978ac259
#function name: __pthread_cleanup_push_defer
#func_id: 2383
===========================================================
[ mov qword ptr [rdi  +  [ displacement ] ],  [ argument ]  ]
[ mov edx, dword ptr fs:[ [ displacement ] ] ]
[ test edx, edx ]
[ jnz  [ addr ]  ]
[ sub dword ptr [rdi],  [ argument ]  ]
[ mov edx, dword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ sub edx,  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], edx ]
[ jnz  [ addr ]  ]
[ mov qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ sub dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ test ebp, ebp ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ mov rdi, rsp ]
[ xor esi, esi ]
[ ror rax,  [ argument ]  ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ call rax ]
CALL===========================================================
#now call addr: 7f5e978ac3c2
#call parent addr: 7f5e9789d050
#root size: 1853
===============================================================
RET========================================================
#ret target: 7f5e978ac3c2
#function name: _pthread_cleanup_pop_restore
#func_id: 2384
===========================================================
CALL===========================================================
#now call addr: 7f5e9789d0b1
#call parent addr: 7f5e9789d050
#root size: 1853
===============================================================
CALL===========================================================
#now call addr: 7f5e978aafa3
#call parent addr: 7f5e9789d0b1
#root size: 1854
===============================================================
RET========================================================
#ret target: 7f5e978aafa3
#function name: _IO_unsave_markers
#func_id: 778
===========================================================
CALL===========================================================
#now call addr: 7f5e978aafd8
#call parent addr: 7f5e9789d0b1
#root size: 1854
===============================================================
RET========================================================
#ret target: 7f5e978aafd8
#function name: __close_nocancel
#func_id: 1275
===========================================================
CALL===========================================================
#now call addr: 7f5e978ab030
#call parent addr: 7f5e9789d0b1
#root size: 1854
===============================================================
RET========================================================
#ret target: 7f5e978ab030
#function name: _IO_setb
#func_id: 758
===========================================================
CALL===========================================================
#now call addr: 7f5e978ab048
#call parent addr: 7f5e9789d0b1
#root size: 1854
===============================================================
RET========================================================
#ret target: 7f5e978ab048
#function name: _IO_un_link
#func_id: 751
===========================================================
CALL===========================================================
#now call addr: 7f5e9789cfbe
#call parent addr: 7f5e9789d0b1
#root size: 1854
===============================================================
RET========================================================
#ret target: 7f5e9789cfbe
#function name: _IO_default_finish
#func_id: 767
===========================================================
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop r12 ]
[ ret  ]
[ jmp  [ addr ]  ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ mov edx,  [ argument ]  ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ cmpxchg dword ptr [r14], edx ]
[ cmp qword ptr [rip  +  [ displacement ] ], r13 ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ lea r9, ptr [rax- [ displacement ] ] ]
[ mov r13, qword ptr [rip  +  [ displacement ] ] ]
[ mov qword ptr [r15  +  [ displacement ] ], r9 ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ sub dword ptr [r14],  [ argument ]  ]
[ mov rax, r9 ]
[ shl rax,  [ argument ]  ]
[ add rax, r15 ]
[ mov rdx, qword ptr [rax  +  [ displacement ] ] ]
[ cmp rdx,  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp rdx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rdx, qword ptr [rax  +  [ displacement ] ] ]
[ mov rdi, qword ptr [rax  +  [ displacement ] ] ]
[ mov qword ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ mov esi, ebp ]
[ ror rdx,  [ argument ]  ]
[ xor rdx, qword ptr fs:[ [ displacement ] ] ]
[ call rdx ]
CALL===========================================================
#now call addr: 7f5e97861a25
#call parent addr: 7f5e9789d0b1
#root size: 1854
===============================================================
[ nop edx, edi ]
[ push rbp ]
[ mov rbp, rsp ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov r12, qword ptr [rip  +  [ displacement ] ] ]
[ sub r12,  [ argument ]  ]
[ js  [ addr ]  ]
[ mov dword ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ lea rbx, ptr [r12 + r12 * 8] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ shl rbx,  [ argument ]  ]
[ add rbx, rax ]
[ jmp  [ addr ]  ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ call qword ptr [rip  +  [ displacement ] ] ]
CALL===========================================================
#now call addr: 7f5eac678dc1
#call parent addr: 7f5e97861a25
#root size: 1855
===============================================================
[ nop edx, edi ]
[ mov eax, dword ptr [rdi  +  [ displacement ] ] ]
[ mov edx, eax ]
[ and edx,  [ argument ]  ]
[ nop ]
[ and eax,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ test edx, edx ]
[ jnz  [ addr ]  ]
[ mov ecx, dword ptr [rip  +  [ displacement ] ] ]
[ test ecx, ecx ]
[ jnz  [ addr ]  ]
RET========================================================
#ret target: 7f5eac678dc1
#function name: pthread_mutex_lock
#func_id: 2269
===========================================================
[ mov ecx, dword ptr [rbx  +  [ displacement ] ] ]
[ test ecx, ecx ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rbx] ]
[ movzx edx, byte ptr [rax  +  [ displacement ] ] ]
[ shr dl,  [ argument ]  ]
[ and edx,  [ argument ]  ]
[ cmp edx, dword ptr [rbp- [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov edx, ecx ]
[ mov rdi, rsp ]
[ mov qword ptr [rbp- [ displacement ] ], rsp ]
[ lea rdx, ptr [rdx * 8  +  [ displacement ] ] ]
[ shr rdx,  [ argument ]  ]
[ shl rdx,  [ argument ]  ]
[ mov rsi, rdx ]
[ and rsi,  [ addr ]  ]
[ sub rdi, rsi ]
[ mov rsi, rdi ]
[ cmp rsp, rsi ]
[ jz  [ addr ]  ]
[ and edx,  [ argument ]  ]
[ sub rsp, rdx ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ or qword ptr [rsp + rdx * 1- [ displacement ] ],  [ argument ]  ]
[ mov r13, rsp ]
[ xor r14d, r14d ]
[ jmp  [ addr ]  ]
[ cmp qword ptr [rax  +  [ displacement ] ], rax ]
[ jnz  [ addr ]  ]
[ cmp ecx, r14d ]
[ jbe  [ addr ]  ]
[ mov edx, r14d ]
[ mov qword ptr [r13 + rdx * 8], rax ]
[ mov dword ptr [rax  +  [ displacement ] ], r14d ]
[ add r14d,  [ argument ]  ]
[ add dword ptr [rax  +  [ displacement ] ],  [ argument ]  ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ cmp r14d, ecx ]
[ setz dl ]
[ test r12, r12 ]
[ jnz  [ addr ]  ]
[ test dl, dl ]
[ jz  [ addr ]  ]
[ test r12, r12 ]
[ setz al ]
[ test dl, dl ]
[ jnz  [ addr ]  ]
[ movzx eax, al ]
[ mov esi, r14d ]
[ lea rdi, ptr [r13  +  [ displacement ] ] ]
[ sub esi, eax ]
[ test r12, r12 ]
[ cmovnz rdi, r13 ]
[ jmp  [ addr ]  ]
[ xor edx, edx ]
[ mov ecx,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac678ec5
#call parent addr: 7f5e97861a25
#root size: 1855
===============================================================
[ nop edx, edi ]
[ push rbp ]
[ mov rbp, rsp ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov qword ptr [rbp- [ displacement ] ], rdi ]
[ mov dword ptr [rbp- [ displacement ] ], esi ]
[ mov qword ptr [rbp- [ displacement ] ], rdx ]
[ mov byte ptr [rbp- [ displacement ] ], cl ]
[ cmp esi,  [ argument ]  ]
[ jbe  [ addr ]  ]
[ mov edx, esi ]
[ mov rdi, rsp ]
[ mov rcx, rsp ]
[ add rdx, rdx ]
[ lea rax, ptr [rdx  +  [ displacement ] ] ]
[ shr rax,  [ argument ]  ]
[ shl rax,  [ argument ]  ]
[ mov rsi, rax ]
[ and rsi,  [ addr ]  ]
[ sub rdi, rsi ]
[ mov rsi, rdi ]
[ cmp rsp, rsi ]
[ jz  [ addr ]  ]
[ sub rsp,  [ argument ]  ]
[ or qword ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ cmp rsp, rsi ]
[ jnz  [ addr ]  ]
[ and eax,  [ argument ]  ]
[ sub rsp, rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ or qword ptr [rsp + rax * 1- [ displacement ] ],  [ argument ]  ]
[ mov rdi, rsp ]
[ xor esi, esi ]
[ mov qword ptr [rbp- [ displacement ] ], rcx ]
[ xor r15d, r15d ]
[ mov qword ptr [rbp- [ displacement ] ], rdi ]
[ mov r14d,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac68031c
#call parent addr: 7f5eac678ec5
#root size: 1856
===============================================================
[ nop edx, edi ]
[ movd xmm0, esi ]
[ mov rax, rdi ]
[ punpcklbw xmm0, xmm0 ]
[ punpcklwd xmm0, xmm0 ]
[ pshufd xmm0, xmm0,  [ argument ]  ]
[ cmp rdx,  [ argument ]  ]
[ jb  [ addr ]  ]
[ cmp rdx,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ movdqu xmmword ptr [rdi + rdx * 1- [ displacement ] ], xmm0 ]
[ movdqu xmmword ptr [rdi], xmm0 ]
[ ret  ]
[ movq rcx, xmm0 ]
[ cmp dl,  [ argument ]  ]
[ jnb  [ addr ]  ]
[ cmp dl,  [ argument ]  ]
[ jnb  [ addr ]  ]
[ cmp dl,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ mov qword ptr [rdi + rdx * 1- [ displacement ] ], rcx ]
[ mov qword ptr [rdi], rcx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac68031c
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ mov rcx, qword ptr [rbp- [ displacement ] ] ]
[ mov r10, r15 ]
[ mov r15d, r14d ]
[ sub eax,  [ argument ]  ]
[ mov dword ptr [rbp- [ displacement ] ], eax ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ lea rax, ptr [rcx + rax * 8] ]
[ xor ecx, ecx ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ mov r14d, ecx ]
[ nop dword ptr [rax + rax * 1], eax ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ lea r9, ptr [rax + r10 * 2] ]
[ movzx eax, word ptr [r9] ]
[ add eax,  [ argument ]  ]
[ cmp byte ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov word ptr [rbp- [ displacement ] ], ax ]
[ mov word ptr [r9], ax ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ lea rdi, ptr [rax + r10 * 8] ]
[ mov rbx, qword ptr [rdi] ]
[ jnz  [ addr ]  ]
[ cmp r14d, dword ptr [rbp- [ displacement ] ] ]
[ jnb  [ addr ]  ]
[ mov r12, qword ptr [rbp- [ displacement ] ] ]
[ mov r13, qword ptr [rbp- [ displacement ] ] ]
[ movzx r8d, byte ptr [rbp- [ displacement ] ] ]
[ mov rsi, qword ptr [r13] ]
[ mov ecx, r12d ]
[ mov rax, qword ptr [rsi  +  [ displacement ] ] ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ cmp qword ptr [rbx  +  [ displacement ] ], rbx ]
[ jnz  [ addr ]  ]
[ cmp dword ptr [rbx  +  [ displacement ] ],  [ addr ]  ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ cmp r14d, dword ptr [rbp- [ displacement ] ] ]
[ jnb  [ addr ]  ]
[ mov r12, qword ptr [rbp- [ displacement ] ] ]
[ mov r13, qword ptr [rbp- [ displacement ] ] ]
[ movzx r8d, byte ptr [rbp- [ displacement ] ] ]
[ mov rsi, qword ptr [r13] ]
[ mov ecx, r12d ]
[ mov rax, qword ptr [rsi  +  [ displacement ] ] ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ test r8b, r8b ]
[ jnz  [ addr ]  ]
[ mov rdx, qword ptr [rax] ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ add rax,  [ argument ]  ]
[ cmp rdx, rbx ]
[ jnz  [ addr ]  ]
[ mov r11d, ecx ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ mov r8d, r15d ]
[ mov qword ptr [rbp- [ displacement ] ], r10 ]
[ sub r11d, r14d ]
[ mov qword ptr [rbp- [ displacement ] ], r9 ]
[ lea rdx, ptr [r11 * 8] ]
[ lea rsi, ptr [rax + r8 * 8] ]
[ mov dword ptr [rbp- [ displacement ] ], ecx ]
[ mov qword ptr [rbp- [ displacement ] ], r11 ]
[ mov qword ptr [rbp- [ displacement ] ], r8 ]
[ call  [ addr.func ]  ]
[ test r8b, r8b ]
[ jnz  [ addr ]  ]
[ sub r12,  [ argument ]  ]
[ sub r13,  [ argument ]  ]
[ cmp r14d, r12d ]
[ jb  [ addr ]  ]
[ cmp dword ptr [rbp- [ displacement ] ], r15d ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rsi  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ lea rdx, ptr [rax  +  [ displacement ] ] ]
[ mov eax, dword ptr [rax] ]
[ sub eax,  [ argument ]  ]
[ nop dword ptr [rax], eax ]
[ cmp eax,  [ addr ]  ]
[ jz  [ addr ]  ]
[ mov r11d, eax ]
[ sub eax,  [ argument ]  ]
[ cmp qword ptr [rdx + r11 * 8], rbx ]
[ jnz  [ addr ]  ]
[ sub r12,  [ argument ]  ]
[ sub r13,  [ argument ]  ]
[ cmp r14d, r12d ]
[ jb  [ addr ]  ]
[ cmp dword ptr [rbp- [ displacement ] ], r15d ]
[ jz  [ addr ]  ]
[ mov rcx, qword ptr [rbp- [ displacement ] ] ]
[ mov eax, r15d ]
[ lea rdi, ptr [rcx + rax * 2] ]
[ jmp  [ addr ]  ]
[ mov rsi, qword ptr [r13] ]
[ mov ecx, r12d ]
[ mov rax, qword ptr [rsi  +  [ displacement ] ] ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
[ test r8b, r8b ]
[ jnz  [ addr ]  ]
[ sub r12,  [ argument ]  ]
[ sub r13,  [ argument ]  ]
[ cmp r14d, r12d ]
[ jb  [ addr ]  ]
[ mov edx, dword ptr [rbp- [ displacement ] ] ]
[ xor esi, esi ]
[ mov r14d, r15d ]
[ sub edx, r15d ]
[ add rdx, rdx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac6804ba
#call parent addr: 7f5eac678ec5
#root size: 1856
===============================================================
RET========================================================
#ret target: 7f5eac6804ba
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov r10d, r15d ]
[ add r15d,  [ argument ]  ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ lea r9, ptr [rax + r10 * 2] ]
[ movzx eax, word ptr [r9] ]
[ add eax,  [ argument ]  ]
[ cmp byte ptr [rbp- [ displacement ] ],  [ argument ]  ]
[ mov word ptr [rbp- [ displacement ] ], ax ]
[ mov word ptr [r9], ax ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ lea rdi, ptr [rax + r10 * 8] ]
[ mov rbx, qword ptr [rdi] ]
[ jnz  [ addr ]  ]
[ cmp r14d, dword ptr [rbp- [ displacement ] ] ]
[ jnb  [ addr ]  ]
[ mov r12, qword ptr [rbp- [ displacement ] ] ]
[ mov r13, qword ptr [rbp- [ displacement ] ] ]
[ movzx r8d, byte ptr [rbp- [ displacement ] ] ]
[ mov rsi, qword ptr [r13] ]
[ mov ecx, r12d ]
[ mov rax, qword ptr [rsi  +  [ displacement ] ] ]
[ test rax, rax ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac6804ba
#call parent addr: 7f5eac678ec5
#root size: 1856
===============================================================
RET========================================================
#ret target: 7f5eac6804ba
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac68042d
#call parent addr: 7f5eac678ec5
#root size: 1856
===============================================================
[ nop edx, edi ]
[ mov rax, rdi ]
[ cmp rdx,  [ argument ]  ]
[ jb  [ addr ]  ]
[ cmp rdx,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ movups xmm0, xmmword ptr [rsi] ]
[ movups xmm1, xmmword ptr [rsi + rdx * 1- [ displacement ] ] ]
[ movups xmmword ptr [rdi], xmm0 ]
[ movups xmmword ptr [rdi + rdx * 1- [ displacement ] ], xmm1 ]
[ ret  ]
RET========================================================
#ret target: 7f5eac68042d
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov r8, qword ptr [rbp- [ displacement ] ] ]
[ mov ecx, dword ptr [rbp- [ displacement ] ] ]
[ mov qword ptr [r13], rbx ]
[ mov r13, qword ptr [rbp- [ displacement ] ] ]
[ mov r11, qword ptr [rbp- [ displacement ] ] ]
[ mov r9, qword ptr [rbp- [ displacement ] ] ]
[ mov r10, qword ptr [rbp- [ displacement ] ] ]
[ test r13, r13 ]
[ jz  [ addr ]  ]
[ lea rdi, ptr [r13 + r10 * 1] ]
[ lea rsi, ptr [r13 + r8 * 1] ]
[ mov rdx, r11 ]
[ mov dword ptr [rbp- [ displacement ] ], ecx ]
[ movzx ebx, byte ptr [rdi] ]
[ mov qword ptr [rbp- [ displacement ] ], r9 ]
[ mov qword ptr [rbp- [ displacement ] ], r10 ]
[ mov qword ptr [rbp- [ displacement ] ], r8 ]
[ mov qword ptr [rbp- [ displacement ] ], r11 ]
[ call  [ addr.func ]  ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ movzx edx, word ptr [rax + r8 * 2] ]
[ lea rdi, ptr [rax + r8 * 2] ]
[ mov eax, dword ptr [rbp- [ displacement ] ] ]
[ sub eax, r14d ]
[ cmp edx, eax ]
[ jbe  [ addr ]  ]
[ mov edx, dword ptr [rbp- [ displacement ] ] ]
[ xor esi, esi ]
[ mov r14d, r15d ]
[ sub edx, r15d ]
[ add rdx, rdx ]
[ call  [ addr.func ]  ]
[ mov rsi, rdi ]
[ lea rdx, ptr [r11 + r11 * 1] ]
[ mov rdi, r9 ]
[ mov qword ptr [rbp- [ displacement ] ], r10 ]
[ mov dword ptr [rbp- [ displacement ] ], ecx ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5eac6804e1
#call parent addr: 7f5eac678ec5
#root size: 1856
===============================================================
[ cmp dl,  [ argument ]  ]
[ jnb  [ addr ]  ]
[ cmp dl,  [ argument ]  ]
[ jnb  [ addr ]  ]
[ cmp dl,  [ argument ]  ]
[ jnbe  [ addr ]  ]
[ mov rcx, qword ptr [rsi + rdx * 1- [ displacement ] ] ]
[ mov rsi, qword ptr [rsi] ]
[ mov qword ptr [rdi + rdx * 1- [ displacement ] ], rcx ]
[ mov qword ptr [rdi], rsi ]
[ ret  ]
RET========================================================
#ret target: 7f5eac6804e1
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov ecx, dword ptr [rbp- [ displacement ] ] ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ movzx esi, word ptr [rbp- [ displacement ] ] ]
[ mov r10, qword ptr [rbp- [ displacement ] ] ]
[ mov word ptr [rax + rcx * 2], si ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac6804ba
#call parent addr: 7f5eac678ec5
#root size: 1856
===============================================================
RET========================================================
#ret target: 7f5eac6804ba
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6804ba
#call parent addr: 7f5eac678ec5
#root size: 1856
===============================================================
[ mov dword ptr [rdi + rdx * 1- [ displacement ] ], ecx ]
[ mov dword ptr [rdi], ecx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac6804ba
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov r10d, r15d ]
[ add r15d,  [ argument ]  ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac68042d
#call parent addr: 7f5eac678ec5
#root size: 1856
===============================================================
RET========================================================
#ret target: 7f5eac68042d
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6804e1
#call parent addr: 7f5eac678ec5
#root size: 1856
===============================================================
[ mov ecx, dword ptr [rsi + rdx * 1- [ displacement ] ] ]
[ mov esi, dword ptr [rsi] ]
[ mov dword ptr [rdi + rdx * 1- [ displacement ] ], ecx ]
[ mov dword ptr [rdi], esi ]
[ ret  ]
RET========================================================
#ret target: 7f5eac6804e1
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov ecx, dword ptr [rbp- [ displacement ] ] ]
[ mov rax, qword ptr [rbp- [ displacement ] ] ]
[ movzx esi, word ptr [rbp- [ displacement ] ] ]
[ mov r10, qword ptr [rbp- [ displacement ] ] ]
[ mov word ptr [rax + rcx * 2], si ]
[ jmp  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac6804ba
#call parent addr: 7f5eac678ec5
#root size: 1856
===============================================================
RET========================================================
#ret target: 7f5eac6804ba
#function name: _dl_catch_error
#func_id: 39
===========================================================
CALL===========================================================
#now call addr: 7f5eac6804ba
#call parent addr: 7f5eac678ec5
#root size: 1856
===============================================================
[ mov word ptr [rdi + rdx * 1- [ displacement ] ], cx ]
[ mov word ptr [rdi], cx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac6804ba
#function name: _dl_catch_error
#func_id: 39
===========================================================
[ mov r10d, r15d ]
[ add r15d,  [ argument ]  ]
[ jmp  [ addr ]  ]
[ cmp dword ptr [rbp- [ displacement ] ], r15d ]
[ jz  [ addr ]  ]
[ mov rcx, qword ptr [rbp- [ displacement ] ] ]
[ mov eax, r15d ]
[ lea rdi, ptr [rcx + rax * 2] ]
[ jmp  [ addr ]  ]
[ mov rsp, qword ptr [rbp- [ displacement ] ] ]
[ lea rsp, ptr [rbp- [ displacement ] ] ]
[ pop rbx ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ pop rbp ]
[ ret  ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ call qword ptr [rip  +  [ displacement ] ] ]
CALL===========================================================
#now call addr: 7f5eac678ed1
#call parent addr: 7f5eac678ec5
#root size: 1856
===============================================================
[ nop edx, edi ]
[ mov eax, dword ptr [rdi  +  [ displacement ] ] ]
[ mov edx, eax ]
[ and edx,  [ argument ]  ]
[ and eax,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov r8d, eax ]
[ test edx, edx ]
[ jnz  [ addr ]  ]
[ sub dword ptr [rdi  +  [ displacement ] ],  [ argument ]  ]
[ xor eax, eax ]
[ mov dword ptr [rdi  +  [ displacement ] ],  [ argument ]  ]
[ mov esi, dword ptr [rdi  +  [ displacement ] ] ]
[ xchg dword ptr [rdi], eax ]
[ cmp eax,  [ argument ]  ]
[ jnle  [ addr ]  ]
RET========================================================
#ret target: 7f5eac678ed1
#function name: pthread_mutex_unlock
#func_id: 2276
===========================================================
[ test r14d, r14d ]
[ jz  [ addr ]  ]
[ lea eax, ptr [r14- [ displacement ] ] ]
[ lea rax, ptr [r13 + rax * 8 + [ displacement ] ] ]
[ mov qword ptr [rbp- [ displacement ] ], rax ]
[ nop dword ptr [rax], eax ]
[ mov r15, qword ptr [r13] ]
[ movzx eax, byte ptr [r15  +  [ displacement ] ] ]
[ test al,  [ argument ]  ]
[ jz  [ addr ]  ]
[ and eax,  [ addr ]  ]
[ mov byte ptr [r15  +  [ displacement ] ], al ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ test byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov r14, qword ptr [rax  +  [ displacement ] ] ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ mov rsi, qword ptr [r15] ]
[ mov rdx, qword ptr [rax  +  [ displacement ] ] ]
[ add rsi, r14 ]
[ shr rdx,  [ argument ]  ]
[ mov qword ptr [rbp- [ displacement ] ], rsi ]
[ lea eax, ptr [rdx- [ displacement ] ] ]
[ lea r14, ptr [rsi + rax * 8] ]
[ test edx, edx ]
[ jz  [ addr ]  ]
[ nop dword ptr [rax + rax * 1], eax ]
[ call qword ptr [r14] ]
CALL===========================================================
#now call addr: 7f5eac678f58
#call parent addr: 7f5eac678ec5
#root size: 1856
===============================================================
[ nop edx, edi ]
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ push rbp ]
[ cmp qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov rbp, rsp ]
[ jz  [ addr ]  ]
[ mov rdi, qword ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629da892
#call parent addr: 7f5eac678f58
#root size: 1857
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ push rbp ]
[ mov rbp, rdi ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ lea r13, ptr [rip  +  [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov edx,  [ argument ]  ]
[ cmpxchg dword ptr [r13], edx ]
[ nop word ptr [rax + rax * 1], ax ]
[ mov r15, qword ptr [rip  +  [ displacement ] ] ]
[ test r15, r15 ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ lea r12, ptr [r15  +  [ displacement ] ] ]
[ shl rax,  [ argument ]  ]
[ lea rbx, ptr [r15 + rax * 1- [ displacement ] ] ]
[ cmp r12, rbx ]
[ jbe  [ addr ]  ]
[ jmp  [ addr ]  ]
[ mov r15, qword ptr [r15] ]
[ test r15, r15 ]
[ jnz  [ addr ]  ]
[ mov rcx, qword ptr [rip  +  [ displacement ] ] ]
[ test rcx, rcx ]
[ jz  [ addr ]  ]
[ nop dword ptr [rax + rax * 1], eax ]
[ mov rax, qword ptr [rcx  +  [ displacement ] ] ]
[ lea rdx, ptr [rcx  +  [ displacement ] ] ]
[ shl rax,  [ argument ]  ]
[ lea rax, ptr [rcx + rax * 1- [ displacement ] ] ]
[ cmp rdx, rax ]
[ jnbe  [ addr ]  ]
[ mov rcx, qword ptr [rcx] ]
[ test rcx, rcx ]
[ jnz  [ addr ]  ]
[ test rbp, rbp ]
[ jz  [ addr ]  ]
[ mov rdi, rbp ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978621f6
#call parent addr: 55e8629da892
#root size: 1858
===============================================================
[ nop edx, edi ]
[ push rbx ]
[ mov rbx, rdi ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov edx,  [ argument ]  ]
[ cmpxchg dword ptr [rip  +  [ displacement ] ], edx ]
[ mov rsi, qword ptr [rip  +  [ displacement ] ] ]
[ test rsi, rsi ]
[ jz  [ addr ]  ]
[ mov rdi, qword ptr [rip  +  [ displacement ] ] ]
[ xor edx, edx ]
[ mov rax, rdi ]
[ jmp  [ addr ]  ]
[ mov rcx, rax ]
[ cmp rbx, qword ptr [rax  +  [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov rdx, rsi ]
[ lea r8, ptr [rax  +  [ displacement ] ] ]
[ shl rdx,  [ argument ]  ]
[ add rdi, rdx ]
[ mov rdx, r8 ]
[ cmp rdi, r8 ]
[ jz  [ addr ]  ]
[ nop dword ptr [rax], eax ]
[ cmp qword ptr [rdx  +  [ displacement ] ], rbx ]
[ jz  [ addr ]  ]
[ add rdx,  [ argument ]  ]
[ add rax,  [ argument ]  ]
[ cmp rsi, rdx ]
[ jz  [ addr ]  ]
[ mov rcx, rax ]
[ cmp rbx, qword ptr [rax  +  [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ mov rdx, rsi ]
[ lea r8, ptr [rax  +  [ displacement ] ] ]
[ shl rdx,  [ argument ]  ]
[ add rdi, rdx ]
[ mov rdx, r8 ]
[ cmp rdi, r8 ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ sub dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ pop rbx ]
[ ret  ]
RET========================================================
#ret target: 7f5e978621f6
#function name: __register_atfork
#func_id: 816
===========================================================
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ sub dword ptr [r13],  [ argument ]  ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 55e8629da897
#call parent addr: 55e8629da892
#root size: 1858
===============================================================
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ cmp rax, rdi ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ jmp rax ]
[ ret  ]
RET========================================================
#ret target: 55e8629da897
#function name: NULL
#func_id: 5
===========================================================
[ mov byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ pop rbp ]
[ ret  ]
[ mov rdx, r14 ]
[ sub r14,  [ argument ]  ]
[ cmp qword ptr [rbp- [ displacement ] ], rdx ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ add rax, qword ptr [r15] ]
[ call rax ]
CALL===========================================================
#now call addr: 7f5eac678f7b
#call parent addr: 55e8629da892
#root size: 1858
===============================================================
[ nop edx, edi ]
[ sub rsp,  [ argument ]  ]
[ add rsp,  [ argument ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5eac678f7b
#function name: NULL
#func_id: 12
===========================================================
[ mov ecx, dword ptr [rbp- [ displacement ] ] ]
[ test ecx, ecx ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ sub dword ptr [r15  +  [ displacement ] ],  [ argument ]  ]
[ add r13,  [ argument ]  ]
[ cmp qword ptr [rbp- [ displacement ] ], r13 ]
[ jnz  [ addr ]  ]
[ mov r15, qword ptr [r13] ]
[ movzx eax, byte ptr [r15  +  [ displacement ] ] ]
[ test al,  [ argument ]  ]
[ jz  [ addr ]  ]
[ and eax,  [ addr ]  ]
[ mov byte ptr [r15  +  [ displacement ] ], al ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ test byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ sub dword ptr [r15  +  [ displacement ] ],  [ argument ]  ]
[ add r13,  [ argument ]  ]
[ cmp qword ptr [rbp- [ displacement ] ], r13 ]
[ jnz  [ addr ]  ]
[ mov rsp, qword ptr [rbp- [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ mov r14, qword ptr [rax  +  [ displacement ] ] ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ mov rsi, qword ptr [r15] ]
[ mov rdx, qword ptr [rax  +  [ displacement ] ] ]
[ add rsi, r14 ]
[ shr rdx,  [ argument ]  ]
[ mov qword ptr [rbp- [ displacement ] ], rsi ]
[ lea eax, ptr [rdx- [ displacement ] ] ]
[ lea r14, ptr [rsi + rax * 8] ]
[ test edx, edx ]
[ jz  [ addr ]  ]
[ nop dword ptr [rax + rax * 1], eax ]
[ call qword ptr [r14] ]
CALL===========================================================
#now call addr: 7f5eac678f58
#call parent addr: 55e8629da892
#root size: 1858
===============================================================
[ nop edx, edi ]
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ cmp qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5eac678f58
#function name: NULL
#func_id: 51
===========================================================
[ mov rdx, r14 ]
[ sub r14,  [ argument ]  ]
[ cmp qword ptr [rbp- [ displacement ] ], rdx ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ add rax, qword ptr [r15] ]
[ call rax ]
[ call qword ptr [r14] ]
CALL===========================================================
#now call addr: 7f5eac678f58
#call parent addr: 55e8629da892
#root size: 1858
===============================================================
[ nop edx, edi ]
[ push rbp ]
[ push rbx ]
[ lea rbx, ptr [rip  +  [ displacement ] ] ]
[ lea rbp, ptr [rbx  +  [ displacement ] ] ]
[ sub rsp,  [ argument ]  ]
[ mov rdi, qword ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e97ac90ef
#call parent addr: 7f5eac678f58
#root size: 1859
===============================================================
RET========================================================
#ret target: 7f5e97ac90ef
#function name: cfree
#func_id: 832
===========================================================
[ mov qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ nop ]
[ mov rdi, qword ptr [rbx] ]
[ add rbx,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e97ac9107
#call parent addr: 7f5eac678f58
#root size: 1859
===============================================================
RET========================================================
#ret target: 7f5e97ac9107
#function name: cfree
#func_id: 832
===========================================================
[ mov qword ptr [rbx- [ displacement ] ],  [ argument ]  ]
[ cmp rbx, rbp ]
[ jnz  [ addr ]  ]
[ mov rdi, qword ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
[ mov rdi, qword ptr [rbx] ]
[ add rbx,  [ argument ]  ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e97ac9107
#call parent addr: 7f5eac678f58
#root size: 1859
===============================================================
RET========================================================
#ret target: 7f5e97ac9107
#function name: cfree
#func_id: 832
===========================================================
CALL===========================================================
#now call addr: 7f5e97ac9107
#call parent addr: 7f5eac678f58
#root size: 1859
===============================================================
RET========================================================
#ret target: 7f5e97ac9107
#function name: cfree
#func_id: 832
===========================================================
CALL===========================================================
#now call addr: 7f5e97ac9107
#call parent addr: 7f5eac678f58
#root size: 1859
===============================================================
RET========================================================
#ret target: 7f5e97ac9107
#function name: cfree
#func_id: 832
===========================================================
CALL===========================================================
#now call addr: 7f5e97ac9107
#call parent addr: 7f5eac678f58
#root size: 1859
===============================================================
RET========================================================
#ret target: 7f5e97ac9107
#function name: cfree
#func_id: 832
===========================================================
CALL===========================================================
#now call addr: 7f5e97ac9107
#call parent addr: 7f5eac678f58
#root size: 1859
===============================================================
RET========================================================
#ret target: 7f5e97ac9107
#function name: cfree
#func_id: 832
===========================================================
CALL===========================================================
#now call addr: 7f5e97ac9107
#call parent addr: 7f5eac678f58
#root size: 1859
===============================================================
RET========================================================
#ret target: 7f5e97ac9107
#function name: cfree
#func_id: 832
===========================================================
CALL===========================================================
#now call addr: 7f5e97ac9107
#call parent addr: 7f5eac678f58
#root size: 1859
===============================================================
RET========================================================
#ret target: 7f5e97ac9107
#function name: cfree
#func_id: 832
===========================================================
CALL===========================================================
#now call addr: 7f5e97ac9107
#call parent addr: 7f5eac678f58
#root size: 1859
===============================================================
RET========================================================
#ret target: 7f5e97ac9107
#function name: cfree
#func_id: 832
===========================================================
CALL===========================================================
#now call addr: 7f5e97ac9107
#call parent addr: 7f5eac678f58
#root size: 1859
===============================================================
RET========================================================
#ret target: 7f5e97ac9107
#function name: cfree
#func_id: 832
===========================================================
CALL===========================================================
#now call addr: 7f5e97ac9107
#call parent addr: 7f5eac678f58
#root size: 1859
===============================================================
RET========================================================
#ret target: 7f5e97ac9107
#function name: cfree
#func_id: 832
===========================================================
CALL===========================================================
#now call addr: 7f5e97ac9107
#call parent addr: 7f5eac678f58
#root size: 1859
===============================================================
RET========================================================
#ret target: 7f5e97ac9107
#function name: cfree
#func_id: 832
===========================================================
CALL===========================================================
#now call addr: 7f5e97ac9107
#call parent addr: 7f5eac678f58
#root size: 1859
===============================================================
RET========================================================
#ret target: 7f5e97ac9107
#function name: cfree
#func_id: 832
===========================================================
CALL===========================================================
#now call addr: 7f5e97ac9107
#call parent addr: 7f5eac678f58
#root size: 1859
===============================================================
RET========================================================
#ret target: 7f5e97ac9107
#function name: cfree
#func_id: 832
===========================================================
CALL===========================================================
#now call addr: 7f5e97ac9107
#call parent addr: 7f5eac678f58
#root size: 1859
===============================================================
RET========================================================
#ret target: 7f5e97ac9107
#function name: cfree
#func_id: 832
===========================================================
CALL===========================================================
#now call addr: 7f5e97ac9107
#call parent addr: 7f5eac678f58
#root size: 1859
===============================================================
RET========================================================
#ret target: 7f5e97ac9107
#function name: cfree
#func_id: 832
===========================================================
CALL===========================================================
#now call addr: 7f5e97ac9107
#call parent addr: 7f5eac678f58
#root size: 1859
===============================================================
RET========================================================
#ret target: 7f5e97ac9107
#function name: cfree
#func_id: 832
===========================================================
CALL===========================================================
#now call addr: 7f5e97ac9107
#call parent addr: 7f5eac678f58
#root size: 1859
===============================================================
RET========================================================
#ret target: 7f5e97ac9107
#function name: cfree
#func_id: 832
===========================================================
CALL===========================================================
#now call addr: 7f5e97ac9107
#call parent addr: 7f5eac678f58
#root size: 1859
===============================================================
RET========================================================
#ret target: 7f5e97ac9107
#function name: cfree
#func_id: 832
===========================================================
CALL===========================================================
#now call addr: 7f5e97ac9107
#call parent addr: 7f5eac678f58
#root size: 1859
===============================================================
RET========================================================
#ret target: 7f5e97ac9107
#function name: cfree
#func_id: 832
===========================================================
CALL===========================================================
#now call addr: 7f5e97ac9107
#call parent addr: 7f5eac678f58
#root size: 1859
===============================================================
RET========================================================
#ret target: 7f5e97ac9107
#function name: cfree
#func_id: 832
===========================================================
CALL===========================================================
#now call addr: 7f5e97ac9107
#call parent addr: 7f5eac678f58
#root size: 1859
===============================================================
RET========================================================
#ret target: 7f5e97ac9107
#function name: cfree
#func_id: 832
===========================================================
CALL===========================================================
#now call addr: 7f5e97ac9107
#call parent addr: 7f5eac678f58
#root size: 1859
===============================================================
RET========================================================
#ret target: 7f5e97ac9107
#function name: cfree
#func_id: 832
===========================================================
CALL===========================================================
#now call addr: 7f5e97ac9107
#call parent addr: 7f5eac678f58
#root size: 1859
===============================================================
RET========================================================
#ret target: 7f5e97ac9107
#function name: cfree
#func_id: 832
===========================================================
CALL===========================================================
#now call addr: 7f5e97ac9107
#call parent addr: 7f5eac678f58
#root size: 1859
===============================================================
RET========================================================
#ret target: 7f5e97ac9107
#function name: cfree
#func_id: 832
===========================================================
CALL===========================================================
#now call addr: 7f5e97ac9107
#call parent addr: 7f5eac678f58
#root size: 1859
===============================================================
RET========================================================
#ret target: 7f5e97ac9107
#function name: cfree
#func_id: 832
===========================================================
CALL===========================================================
#now call addr: 7f5e97ac9107
#call parent addr: 7f5eac678f58
#root size: 1859
===============================================================
RET========================================================
#ret target: 7f5e97ac9107
#function name: cfree
#func_id: 832
===========================================================
CALL===========================================================
#now call addr: 7f5e97ac9107
#call parent addr: 7f5eac678f58
#root size: 1859
===============================================================
RET========================================================
#ret target: 7f5e97ac9107
#function name: cfree
#func_id: 832
===========================================================
CALL===========================================================
#now call addr: 7f5e97ac9107
#call parent addr: 7f5eac678f58
#root size: 1859
===============================================================
RET========================================================
#ret target: 7f5e97ac9107
#function name: cfree
#func_id: 832
===========================================================
CALL===========================================================
#now call addr: 7f5e97ac9107
#call parent addr: 7f5eac678f58
#root size: 1859
===============================================================
RET========================================================
#ret target: 7f5e97ac9107
#function name: cfree
#func_id: 832
===========================================================
CALL===========================================================
#now call addr: 7f5e97ac9107
#call parent addr: 7f5eac678f58
#root size: 1859
===============================================================
RET========================================================
#ret target: 7f5e97ac9107
#function name: cfree
#func_id: 832
===========================================================
CALL===========================================================
#now call addr: 7f5e97ac9107
#call parent addr: 7f5eac678f58
#root size: 1859
===============================================================
RET========================================================
#ret target: 7f5e97ac9107
#function name: cfree
#func_id: 832
===========================================================
CALL===========================================================
#now call addr: 7f5e97ac9120
#call parent addr: 7f5eac678f58
#root size: 1859
===============================================================
RET========================================================
#ret target: 7f5e97ac9120
#function name: cfree
#func_id: 832
===========================================================
[ mov qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ pop rbp ]
[ ret  ]
[ mov rdx, r14 ]
[ sub r14,  [ argument ]  ]
[ cmp qword ptr [rbp- [ displacement ] ], rdx ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ add rax, qword ptr [r15] ]
[ call rax ]
CALL===========================================================
#now call addr: 7f5eac678f58
#call parent addr: 7f5eac678f58
#root size: 1859
===============================================================
[ nop edx, edi ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ cmp qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov edi, dword ptr [rip  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5eac678f58
#function name: NULL
#func_id: 51
===========================================================
[ mov rdx, r14 ]
[ sub r14,  [ argument ]  ]
[ cmp qword ptr [rbp- [ displacement ] ], rdx ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ add rax, qword ptr [r15] ]
[ call rax ]
CALL===========================================================
#now call addr: 7f5eac678f58
#call parent addr: 7f5eac678f58
#root size: 1859
===============================================================
[ nop edx, edi ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ cmp qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ mov edi, dword ptr [rip  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5eac678f58
#function name: NULL
#func_id: 51
===========================================================
[ mov rdx, r14 ]
[ sub r14,  [ argument ]  ]
[ cmp qword ptr [rbp- [ displacement ] ], rdx ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ add rax, qword ptr [r15] ]
[ call rax ]
CALL===========================================================
#now call addr: 7f5eac678f58
#call parent addr: 7f5eac678f58
#root size: 1859
===============================================================
[ nop edx, edi ]
[ push rbx ]
[ mov rbx, qword ptr [rip  +  [ displacement ] ] ]
[ mov rdi, qword ptr [rbx] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e97ac905f
#call parent addr: 7f5eac678f58
#root size: 1860
===============================================================
RET========================================================
#ret target: 7f5e97ac905f
#function name: cfree
#func_id: 832
===========================================================
[ mov qword ptr [rbx],  [ argument ]  ]
[ pop rbx ]
[ ret  ]
[ mov rdx, r14 ]
[ sub r14,  [ argument ]  ]
[ cmp qword ptr [rbp- [ displacement ] ], rdx ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ add rax, qword ptr [r15] ]
[ call rax ]
CALL===========================================================
#now call addr: 7f5eac678f58
#call parent addr: 7f5eac678f58
#root size: 1860
===============================================================
[ nop edx, edi ]
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ push rbp ]
[ cmp qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov rbp, rsp ]
[ jz  [ addr ]  ]
[ mov rdi, qword ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e97ac9452
#call parent addr: 7f5eac678f58
#root size: 1861
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ push rbp ]
[ mov rbp, rdi ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ lea r13, ptr [rip  +  [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov edx,  [ argument ]  ]
[ cmpxchg dword ptr [r13], edx ]
[ nop word ptr [rax + rax * 1], ax ]
[ mov r15, qword ptr [rip  +  [ displacement ] ] ]
[ test r15, r15 ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ lea r12, ptr [r15  +  [ displacement ] ] ]
[ shl rax,  [ argument ]  ]
[ lea rbx, ptr [r15 + rax * 1- [ displacement ] ] ]
[ cmp r12, rbx ]
[ jbe  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5e978621f6
#call parent addr: 7f5e97ac9452
#root size: 1862
===============================================================
RET========================================================
#ret target: 7f5e978621f6
#function name: __register_atfork
#func_id: 816
===========================================================
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e97ac9457
#call parent addr: 7f5e97ac9452
#root size: 1862
===============================================================
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ cmp rax, rdi ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ jmp rax ]
[ ret  ]
RET========================================================
#ret target: 7f5e97ac9457
#function name: NULL
#func_id: 51
===========================================================
[ mov byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ pop rbp ]
[ ret  ]
[ mov rdx, r14 ]
[ sub r14,  [ argument ]  ]
[ cmp qword ptr [rbp- [ displacement ] ], rdx ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ add rax, qword ptr [r15] ]
[ call rax ]
CALL===========================================================
#now call addr: 7f5eac678f7b
#call parent addr: 7f5e97ac9452
#root size: 1862
===============================================================
[ nop edx, edi ]
[ sub rsp,  [ argument ]  ]
[ add rsp,  [ argument ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5eac678f7b
#function name: NULL
#func_id: 292
===========================================================
[ mov ecx, dword ptr [rbp- [ displacement ] ] ]
[ test ecx, ecx ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ sub dword ptr [r15  +  [ displacement ] ],  [ argument ]  ]
[ add r13,  [ argument ]  ]
[ cmp qword ptr [rbp- [ displacement ] ], r13 ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac678f58
#call parent addr: 7f5e97ac9452
#root size: 1862
===============================================================
[ nop edx, edi ]
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ push rbp ]
[ cmp qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov rbp, rsp ]
[ jz  [ addr ]  ]
[ mov rdi, qword ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e977653a2
#call parent addr: 7f5eac678f58
#root size: 1863
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ push rbp ]
[ mov rbp, rdi ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ lea r13, ptr [rip  +  [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov edx,  [ argument ]  ]
[ cmpxchg dword ptr [r13], edx ]
[ nop word ptr [rax + rax * 1], ax ]
[ mov r15, qword ptr [rip  +  [ displacement ] ] ]
[ test r15, r15 ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ lea r12, ptr [r15  +  [ displacement ] ] ]
[ shl rax,  [ argument ]  ]
[ lea rbx, ptr [r15 + rax * 1- [ displacement ] ] ]
[ cmp r12, rbx ]
[ jbe  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5e978621f6
#call parent addr: 7f5e977653a2
#root size: 1864
===============================================================
RET========================================================
#ret target: 7f5e978621f6
#function name: __register_atfork
#func_id: 816
===========================================================
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e977653a7
#call parent addr: 7f5e977653a2
#root size: 1864
===============================================================
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ cmp rax, rdi ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ jmp rax ]
[ ret  ]
RET========================================================
#ret target: 7f5e977653a7
#function name: NULL
#func_id: 2110
===========================================================
[ mov byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ pop rbp ]
[ ret  ]
[ mov rdx, r14 ]
[ sub r14,  [ argument ]  ]
[ cmp qword ptr [rbp- [ displacement ] ], rdx ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ add rax, qword ptr [r15] ]
[ call rax ]
CALL===========================================================
#now call addr: 7f5eac678f7b
#call parent addr: 7f5e977653a2
#root size: 1864
===============================================================
[ nop edx, edi ]
[ sub rsp,  [ argument ]  ]
[ add rsp,  [ argument ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5eac678f7b
#function name: NULL
#func_id: 2184
===========================================================
[ mov ecx, dword ptr [rbp- [ displacement ] ] ]
[ test ecx, ecx ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ sub dword ptr [r15  +  [ displacement ] ],  [ argument ]  ]
[ add r13,  [ argument ]  ]
[ cmp qword ptr [rbp- [ displacement ] ], r13 ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac678f58
#call parent addr: 7f5e977653a2
#root size: 1864
===============================================================
[ nop edx, edi ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ nop edx, edi ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov rsi, qword ptr [rdi  +  [ displacement ] ] ]
[ mov rax, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ xor eax, eax ]
[ test rsi, rsi ]
[ jz  [ addr ]  ]
[ mov rbx, rdi ]
[ mov ecx,  [ argument ]  ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ pop rbx ]
[ ret  ]
RET========================================================
#ret target: 7f5eac678f58
#function name: dlvsym
#func_id: 2193
===========================================================
[ mov rdx, r14 ]
[ sub r14,  [ argument ]  ]
[ cmp qword ptr [rbp- [ displacement ] ], rdx ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ add rax, qword ptr [r15] ]
[ call rax ]
CALL===========================================================
#now call addr: 7f5eac678f58
#call parent addr: 7f5e977653a2
#root size: 1864
===============================================================
[ nop edx, edi ]
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ push rbp ]
[ cmp qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov rbp, rsp ]
[ jz  [ addr ]  ]
[ mov rdi, qword ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9775e2c2
#call parent addr: 7f5eac678f58
#root size: 1865
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ push rbp ]
[ mov rbp, rdi ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ lea r13, ptr [rip  +  [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov edx,  [ argument ]  ]
[ cmpxchg dword ptr [r13], edx ]
[ nop word ptr [rax + rax * 1], ax ]
[ mov r15, qword ptr [rip  +  [ displacement ] ] ]
[ test r15, r15 ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ lea r12, ptr [r15  +  [ displacement ] ] ]
[ shl rax,  [ argument ]  ]
[ lea rbx, ptr [r15 + rax * 1- [ displacement ] ] ]
[ cmp r12, rbx ]
[ jbe  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5e978621f6
#call parent addr: 7f5e9775e2c2
#root size: 1866
===============================================================
RET========================================================
#ret target: 7f5e978621f6
#function name: __register_atfork
#func_id: 816
===========================================================
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e9775e2c7
#call parent addr: 7f5e9775e2c2
#root size: 1866
===============================================================
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ cmp rax, rdi ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ jmp rax ]
[ ret  ]
RET========================================================
#ret target: 7f5e9775e2c7
#function name: NULL
#func_id: 2189
===========================================================
[ mov byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ pop rbp ]
[ ret  ]
[ mov rdx, r14 ]
[ sub r14,  [ argument ]  ]
[ cmp qword ptr [rbp- [ displacement ] ], rdx ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ add rax, qword ptr [r15] ]
[ call rax ]
CALL===========================================================
#now call addr: 7f5eac678f7b
#call parent addr: 7f5e9775e2c2
#root size: 1866
===============================================================
[ nop edx, edi ]
[ sub rsp,  [ argument ]  ]
[ add rsp,  [ argument ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5eac678f7b
#function name: NULL
#func_id: 2200
===========================================================
[ mov ecx, dword ptr [rbp- [ displacement ] ] ]
[ test ecx, ecx ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ sub dword ptr [r15  +  [ displacement ] ],  [ argument ]  ]
[ add r13,  [ argument ]  ]
[ cmp qword ptr [rbp- [ displacement ] ], r13 ]
[ jnz  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5eac678f58
#call parent addr: 7f5e9775e2c2
#root size: 1866
===============================================================
[ nop edx, edi ]
[ cmp byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ push rbp ]
[ cmp qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov rbp, rsp ]
[ jz  [ addr ]  ]
[ mov rdi, qword ptr [rip  +  [ displacement ] ] ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e97713ba2
#call parent addr: 7f5eac678f58
#root size: 1867
===============================================================
[ nop edx, edi ]
[ bnd jmp qword ptr [rip  +  [ displacement ] ] ]
[ nop edx, edi ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ push rbp ]
[ mov rbp, rdi ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ lea r13, ptr [rip  +  [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov edx,  [ argument ]  ]
[ cmpxchg dword ptr [r13], edx ]
[ nop word ptr [rax + rax * 1], ax ]
[ mov r15, qword ptr [rip  +  [ displacement ] ] ]
[ test r15, r15 ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ lea r12, ptr [r15  +  [ displacement ] ] ]
[ shl rax,  [ argument ]  ]
[ lea rbx, ptr [r15 + rax * 1- [ displacement ] ] ]
[ cmp r12, rbx ]
[ jbe  [ addr ]  ]
CALL===========================================================
#now call addr: 7f5e978621f6
#call parent addr: 7f5e97713ba2
#root size: 1868
===============================================================
RET========================================================
#ret target: 7f5e978621f6
#function name: __register_atfork
#func_id: 816
===========================================================
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e97713ba7
#call parent addr: 7f5e97713ba2
#root size: 1868
===============================================================
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ cmp rax, rdi ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ jmp rax ]
[ ret  ]
RET========================================================
#ret target: 7f5e97713ba7
#function name: deregister_tm_clones
#func_id: 2209
===========================================================
[ mov byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ pop rbp ]
[ ret  ]
[ mov rdx, r14 ]
[ sub r14,  [ argument ]  ]
[ cmp qword ptr [rbp- [ displacement ] ], rdx ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rax  +  [ displacement ] ] ]
[ add rax, qword ptr [r15] ]
[ call rax ]
CALL===========================================================
#now call addr: 7f5eac678f7b
#call parent addr: 7f5e97713ba2
#root size: 1868
===============================================================
[ nop edx, edi ]
[ sub rsp,  [ argument ]  ]
[ add rsp,  [ argument ]  ]
[ ret  ]
RET========================================================
#ret target: 7f5eac678f7b
#function name: _fini
#func_id: 2501
===========================================================
[ mov ecx, dword ptr [rbp- [ displacement ] ] ]
[ test ecx, ecx ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ sub dword ptr [r15  +  [ displacement ] ],  [ argument ]  ]
[ add r13,  [ argument ]  ]
[ cmp qword ptr [rbp- [ displacement ] ], r13 ]
[ jnz  [ addr ]  ]
[ mov rax, qword ptr [r15  +  [ displacement ] ] ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ test byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ nop dword ptr [rax], eax ]
[ mov rsi, qword ptr [r15  +  [ displacement ] ] ]
[ cmp byte ptr [rsi],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov ecx, dword ptr [rbp- [ displacement ] ] ]
[ test ecx, ecx ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ sub dword ptr [r15  +  [ displacement ] ],  [ argument ]  ]
[ add r13,  [ argument ]  ]
[ cmp qword ptr [rbp- [ displacement ] ], r13 ]
[ jnz  [ addr ]  ]
[ mov rsp, qword ptr [rbp- [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ sub r12,  [ argument ]  ]
[ sub rbx,  [ argument ]  ]
[ cmp r12,  [ addr ]  ]
[ jz  [ addr ]  ]
[ lea rdi, ptr [rip  +  [ displacement ] ] ]
[ call qword ptr [rip  +  [ displacement ] ] ]
[ mov edx, dword ptr [rbp- [ displacement ] ] ]
[ test edx, edx ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ test byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ lea rsp, ptr [rbp- [ displacement ] ] ]
[ pop rbx ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ pop rbp ]
[ ret  ]
[ jmp  [ addr ]  ]
[ mov rax, qword ptr [r15] ]
[ mov qword ptr [rbx], rax ]
[ test rax, rax ]
[ jz  [ addr ]  ]
[ mov rdi, r15 ]
[ call  [ addr.func ]  ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ sub dword ptr [r14],  [ argument ]  ]
[ jmp  [ addr ]  ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ mov edx,  [ argument ]  ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ cmpxchg dword ptr [r14], edx ]
[ mov r15, qword ptr [rbx] ]
[ test r15, r15 ]
[ jnz  [ addr ]  ]
[ jmp  [ addr ]  ]
[ mov byte ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ sub dword ptr [r14],  [ argument ]  ]
[ cmp byte ptr [rsp  +  [ displacement ] ],  [ argument ]  ]
[ jz  [ addr ]  ]
[ lea rbx, ptr [rip  +  [ displacement ] ] ]
[ lea rax, ptr [rip  +  [ displacement ] ] ]
[ cmp rbx, rax ]
[ jnb  [ addr ]  ]
[ sub rax,  [ argument ]  ]
[ sub rax, rbx ]
[ shr rax,  [ argument ]  ]
[ lea r12, ptr [rbx + rax * 8 + [ displacement ] ] ]
[ nop dword ptr [rax], eax ]
[ call qword ptr [rbx] ]
CALL===========================================================
#now call addr: 7f5e97861b30
#call parent addr: 7f5e97713ba2
#root size: 1868
===============================================================
[ nop edx, edi ]
[ push r15 ]
[ xor edi, edi ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ push rbp ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov rax, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ xor eax, eax ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e978adf04
#call parent addr: 7f5e97861b30
#root size: 1869
===============================================================
[ nop edx, edi ]
[ push r15 ]
[ push r14 ]
[ push r13 ]
[ push r12 ]
[ push rbp ]
[ mov ebp, edi ]
[ push rbx ]
[ sub rsp,  [ argument ]  ]
[ mov rax, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr [rsp  +  [ displacement ] ], rax ]
[ xor eax, eax ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ mov dword ptr [rsp  +  [ displacement ] ], eax ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ lea rdi, ptr [rsp  +  [ displacement ] ] ]
[ xor edx, edx ]
[ lea rsi, ptr [rip- [ displacement ] ] ]
[ ror rax,  [ argument ]  ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ call rax ]
CALL===========================================================
#now call addr: 7f5e978adc08
#call parent addr: 7f5e978adf04
#root size: 1870
===============================================================
[ nop edx, edi ]
[ mov qword ptr [rdi], rsi ]
[ mov qword ptr [rdi  +  [ displacement ] ], rdx ]
[ mov rcx, qword ptr fs:[ [ displacement ] ] ]
[ mov rax, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr [rdi  +  [ displacement ] ], rax ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ lea rsi, ptr [rcx  +  [ displacement ] ] ]
[ mov edx, eax ]
[ mov ecx, eax ]
[ test al,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ sar edx,  [ argument ]  ]
[ and edx,  [ argument ]  ]
[ mov dword ptr [rdi  +  [ displacement ] ], edx ]
[ mov qword ptr fs:[ [ displacement ] ], rdi ]
[ ret  ]
RET========================================================
#ret target: 7f5e978adc08
#function name: __pthread_cleanup_push_defer
#func_id: 2383
===========================================================
[ mov rbx, qword ptr fs:[ [ displacement ] ] ]
[ cmp qword ptr [rip  +  [ displacement ] ], rbx ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov edx,  [ argument ]  ]
[ cmpxchg dword ptr [rip  +  [ displacement ] ], edx ]
[ mov qword ptr [rip  +  [ displacement ] ], rbx ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ mov rbx, qword ptr [rip  +  [ displacement ] ] ]
[ xor r15d, r15d ]
[ lea edx, ptr [rax  +  [ displacement ] ] ]
[ mov dword ptr [rip  +  [ displacement ] ], edx ]
[ test rbx, rbx ]
[ jz  [ addr ]  ]
[ lea r13, ptr [rip  +  [ displacement ] ] ]
[ lea r12, ptr [rip  +  [ displacement ] ] ]
[ sub r12, r13 ]
[ mov r14, qword ptr fs:[ [ displacement ] ] ]
[ jmp  [ addr ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], rbx ]
[ test ebp, ebp ]
[ jz  [ addr ]  ]
[ mov edx, dword ptr [rbx] ]
[ and edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rdi, qword ptr [rbx  +  [ displacement ] ] ]
[ cmp qword ptr [rdi  +  [ displacement ] ], r14 ]
[ jz  [ addr ]  ]
[ mov edx, dword ptr [rbx  +  [ displacement ] ] ]
[ test edx, edx ]
[ jnle  [ addr ]  ]
[ mov rax, qword ptr [rbx  +  [ displacement ] ] ]
[ cmp qword ptr [rbx  +  [ displacement ] ], rax ]
[ jnbe  [ addr ]  ]
[ jmp  [ addr ]  ]
[ test ebp, ebp ]
[ jz  [ addr ]  ]
[ test dword ptr [rbx],  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov rdi, qword ptr [rbx  +  [ displacement ] ] ]
[ mov eax, dword ptr [rdi  +  [ displacement ] ] ]
[ sub eax,  [ argument ]  ]
[ mov dword ptr [rdi  +  [ displacement ] ], eax ]
[ jnz  [ addr ]  ]
[ mov qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov rbx, qword ptr [rbx  +  [ displacement ] ] ]
[ test rbx, rbx ]
[ jz  [ addr ]  ]
[ mov qword ptr [rip  +  [ displacement ] ], rbx ]
[ test ebp, ebp ]
[ jz  [ addr ]  ]
[ mov edx, dword ptr [rbx] ]
[ and edx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ sub eax,  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov edx, dword ptr fs:[ [ displacement ] ] ]
[ test edx, edx ]
[ jnz  [ addr ]  ]
[ sub dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov eax, dword ptr [rsp  +  [ displacement ] ] ]
[ test eax, eax ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ lea rdi, ptr [rsp  +  [ displacement ] ] ]
[ xor esi, esi ]
[ ror rax,  [ argument ]  ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ call rax ]
CALL===========================================================
#now call addr: 7f5e978addd8
#call parent addr: 7f5e978adf04
#root size: 1870
===============================================================
[ nop edx, edi ]
[ mov rax, qword ptr [rdi  +  [ displacement ] ] ]
[ mov rdx, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr fs:[ [ displacement ] ], rax ]
[ mov ecx, dword ptr [rdi  +  [ displacement ] ] ]
[ test ecx, ecx ]
[ jnz  [ addr ]  ]
[ test esi, esi ]
[ jz  [ addr ]  ]
[ mov r8, qword ptr [rdi  +  [ displacement ] ] ]
[ mov rax, qword ptr [rdi] ]
[ mov rdi, r8 ]
[ jmp rax ]
RET========================================================
#ret target: 7f5e978addd8
#function name: _pthread_cleanup_pop_restore
#func_id: 2384
===========================================================
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ mov eax, r15d ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ mov r13d, dword ptr [rip  +  [ displacement ] ] ]
[ mov r12d, eax ]
[ test r13d, r13d ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ lea rdi, ptr [rsp  +  [ displacement ] ] ]
[ xor edx, edx ]
[ lea rsi, ptr [rip- [ displacement ] ] ]
[ ror rax,  [ argument ]  ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ call rax ]
CALL===========================================================
#now call addr: 7f5e978adf3e
#call parent addr: 7f5e978adf04
#root size: 1870
===============================================================
[ nop edx, edi ]
[ mov qword ptr [rdi], rsi ]
[ mov qword ptr [rdi  +  [ displacement ] ], rdx ]
[ mov rcx, qword ptr fs:[ [ displacement ] ] ]
[ mov rax, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr [rdi  +  [ displacement ] ], rax ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ lea rsi, ptr [rcx  +  [ displacement ] ] ]
[ mov edx, eax ]
[ mov ecx, eax ]
[ test al,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ sar edx,  [ argument ]  ]
[ and edx,  [ argument ]  ]
[ mov dword ptr [rdi  +  [ displacement ] ], edx ]
[ mov qword ptr fs:[ [ displacement ] ], rdi ]
[ ret  ]
RET========================================================
#ret target: 7f5e978adf3e
#function name: __pthread_cleanup_push_defer
#func_id: 2383
===========================================================
[ mov rbx, qword ptr fs:[ [ displacement ] ] ]
[ cmp rbx, qword ptr [rip  +  [ displacement ] ] ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr fs:[ [ displacement ] ] ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov edx,  [ argument ]  ]
[ cmpxchg dword ptr [rip  +  [ displacement ] ], edx ]
[ mov qword ptr [rip  +  [ displacement ] ], rbx ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ mov r15, qword ptr [rip  +  [ displacement ] ] ]
[ lea edx, ptr [rax  +  [ displacement ] ] ]
[ mov dword ptr [rip  +  [ displacement ] ], edx ]
[ test r15, r15 ]
[ jz  [ addr ]  ]
[ lea r14, ptr [rip  +  [ displacement ] ] ]
[ lea rbp, ptr [rip  +  [ displacement ] ] ]
[ mov rax, qword ptr fs:[ [ displacement ] ] ]
[ sub rbp, r14 ]
[ mov qword ptr [rsp], rax ]
[ jmp  [ addr ]  ]
[ mov ebx, dword ptr [r15] ]
[ and ebx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov edx, dword ptr [r15  +  [ displacement ] ] ]
[ test edx, edx ]
[ jz  [ addr ]  ]
[ mov rdx, qword ptr [r15  +  [ displacement ] ] ]
[ test rdx, rdx ]
[ jz  [ addr ]  ]
[ mov dword ptr [r15  +  [ displacement ] ],  [ addr ]  ]
[ mov r15, qword ptr [r15  +  [ displacement ] ] ]
[ test r15, r15 ]
[ jz  [ addr ]  ]
[ mov ebx, dword ptr [r15] ]
[ and ebx,  [ argument ]  ]
[ jnz  [ addr ]  ]
[ mov edx, dword ptr [r15  +  [ displacement ] ] ]
[ test edx, edx ]
[ jz  [ addr ]  ]
[ mov eax, dword ptr [rip  +  [ displacement ] ] ]
[ sub eax,  [ argument ]  ]
[ mov dword ptr [rip  +  [ displacement ] ], eax ]
[ test eax, eax ]
[ jnz  [ addr ]  ]
[ mov qword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ mov edx, dword ptr fs:[ [ displacement ] ] ]
[ test edx, edx ]
[ jnz  [ addr ]  ]
[ sub dword ptr [rip  +  [ displacement ] ],  [ argument ]  ]
[ test r13d, r13d ]
[ jz  [ addr ]  ]
[ mov rax, qword ptr [rip  +  [ displacement ] ] ]
[ lea rdi, ptr [rsp  +  [ displacement ] ] ]
[ xor esi, esi ]
[ ror rax,  [ argument ]  ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ call rax ]
CALL===========================================================
#now call addr: 7f5e978ae11d
#call parent addr: 7f5e978adf04
#root size: 1870
===============================================================
[ nop edx, edi ]
[ mov rax, qword ptr [rdi  +  [ displacement ] ] ]
[ mov rdx, qword ptr fs:[ [ displacement ] ] ]
[ mov qword ptr fs:[ [ displacement ] ], rax ]
[ mov ecx, dword ptr [rdi  +  [ displacement ] ] ]
[ test ecx, ecx ]
[ jnz  [ addr ]  ]
[ test esi, esi ]
[ jz  [ addr ]  ]
[ mov r8, qword ptr [rdi  +  [ displacement ] ] ]
[ mov rax, qword ptr [rdi] ]
[ mov rdi, r8 ]
[ jmp rax ]
RET========================================================
#ret target: 7f5e978ae11d
#function name: _pthread_cleanup_pop_restore
#func_id: 2384
===========================================================
[ mov rax, qword ptr [rsp  +  [ displacement ] ] ]
[ xor rax, qword ptr fs:[ [ displacement ] ] ]
[ jnz  [ addr ]  ]
[ add rsp,  [ argument ]  ]
[ mov eax, r12d ]
[ pop rbx ]
[ pop rbp ]
[ pop r12 ]
[ pop r13 ]
[ pop r14 ]
[ pop r15 ]
[ ret  ]
[ add rbx,  [ argument ]  ]
[ cmp r12, rbx ]
[ jnz  [ addr ]  ]
[ mov edi, ebp ]
[ call  [ addr.func ]  ]
CALL===========================================================
#now call addr: 7f5e97861b3d
#call parent addr: 7f5e978adf04
#root size: 1870
===============================================================
[ nop edx, edi ]
[ mov r9, qword ptr [rip  +  [ displacement ] ] ]
[ mov edx, edi ]
[ mov r8d,  [ argument ]  ]
[ mov esi,  [ argument ]  ]
[ jmp  [ addr ]  ]
[ mov edi, edx ]
[ mov eax, r8d ]
[ syscall  ]
